This is a brief explanation of how the system works and what I plan to do with
it in the future. Please read it if you're interested in hacking ScrollServer.

The server process is entirely in Python and makes use of the xml libraries.
All html files are generated using xsl stylesheets (XSLT) and formatting is
performed with a css stylesheet. There is a single stylesheet right now, but I
want to allow the user to select the stylesheet they prefer.

Internal pages are generated from xsl stylesheets. The documentation itself is
generated from DocBook SGML and XML sources and xsl stylesheets, but eventually
it will have to support man pages, info pages, and other formats.

Documents in html are served, but they look different from the DocBook documents
because we don't generate them ourselves. There is no navigation bar on the top,
for example, and they don't use my stylesheets. There is a bit of ad-hockery
involved in serving documents that are physically distributed through a common
uri scheme so they appear to be part of a single tree.

There is no support for processing documents that are stored remotely. That's a
good todo item for somebody.

There is no search functionality. I could use one of the existing html searching
engines, and might have to to support html sources, but more powerful searching
should be possible someday using a DocBook aware search engine.

Hopefully this gives you a general idea of how ScrollServer works. You'll have
to read up on ScrollKeeper as well to understand how the two work together.

If you would like to help develop ScrollServer, there are some bugs listed on
the SourceForge project page you could look into, or write me if you want to
develop a new feature.

david@lupercalia.net

