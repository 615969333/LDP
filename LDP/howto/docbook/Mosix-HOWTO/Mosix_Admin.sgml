<CHAPTER ID="Admin">
<TITLE>Administrating openMosix</TITLE>
<SECT1><TITLE>Basic Administration</TITLE>

<PARA>openMosix provides the advantage of process migration to HPC-applications. 
The administrator can configure and tune the openMosix-cluster by using 
the openMosix-userspace-tools
or the /proc/hpc interface which will be now described in detail.
</PARA>
</SECT1><SECT1><TITLE>Configuration</TITLE>
<PARA>
The values in the flat files in the /proc/hpc/admin directory presenting 
the current configuration of
the cluster. Also the administrator can write its own values into these 
files to change the configuration 
during runtime, e.g.
<PROGRAMLISTING>
echo 1 > /proc/hpc/admin/block          -blocks the arrival of remote processes
echo 1 > /proc/hpc/admin/bring          -bring all migrated processes home
...
</PROGRAMLISTING>
<PROGRAMLISTING>
/proc/hpc/admin/ (binary files)          config          			
					-the main configuration file (written by the setpe util)

(flat files)            block           -allow/forbid arrival of remote processes
                        bring           -bring home all migrated processes
                        dfsalinks       -list of current symbolic dfsa-links
                        expel           -sending guest processes home
                        gateways        -maximum number of gateways
                        lstay           -local processes shoud stay

                        mospe           -contains the openMosix node id
                        nomfs           -disables/enables MFS
                        overheads       -for tuning
                        quiet           -stop collecting load-balacing informations
                        decayinterval   -interval for collecting informations about load-balancing
                        slowdecay       -default 975
                        fastdecay       -default 926
                        speed           -speed relative to PIII/1GHz)
                        stay            -enables/disables automatic process migration

</PROGRAMLISTING>
Writing a 1 to the following files
<PROGRAMLISTING>                        
/proc/hpc/decay/

                        clear           -clears the decay statistics
                        cpujob          -tells openMosix that the process is cpu-bound
                        iojob           -tells openMosix that the process is io-bound
                        slow            -tells openMosix to decay its statistics slow
                        fast            -tells openMosix to decay its statistics fast
</PROGRAMLISTING>



</PARA>
</SECT1>
<SECT1><TITLE>Informations about the other nodes</TITLE>
<PARA>
<PROGRAMLISTING>
/proc/hpc/nodes/[openMosix_ID]/cpus             -how many cpu's the node has
/proc/hpc/nodes/[openMosix_ID]/load             -the openMosix load of this node
/proc/hpc/nodes/[openMosix_ID]/mem              -available memory as openMosix believes
/proc/hpc/nodes/[openMosix_ID]/rmem             -available memory as Linux believes
/proc/hpc/nodes/[openMosix_ID]/speed            -speed of the node relative to PIII/1GHz
/proc/hpc/nodes/[openMosix_ID]/status           -status of the node
/proc/hpc/nodes/[openMosix_ID]/tmem             -available memory
/proc/hpc/nodes/[openMosix_ID]/util             -utilization of the node

</PROGRAMLISTING>

</PARA>
</SECT1>
<SECT1><TITLE>Additional Informations about processes</TITLE>
<PARA>
local processes
<PROGRAMLISTING>
/proc/[PID]/cantmove                    -reason why a process cannot be migrated
/proc/[PID]/goto                        -to which node the process should migrate
/proc/[PID]/lock                        -if a process is locked to its home node
/proc/[PID]/nmigs                       -how many times the process migrated
/proc/[PID]/where                       -where the process is currently being computed
/proc/[PID]/migrate                     -same as goto remote processes
/proc/hpc/remote/from                   -the home node of the process
/proc/hpc/remote/identity               -additional informations about the process
/proc/hpc/remote/statm                  -memory statistic of the process
/proc/hpc/remote/stats                  -cpu statistics of the process
</PROGRAMLISTING>

</PARA>
</SECT1>


<SECT1><TITLE>the userspace-tools</TITLE>
<PARA>

These following tools are providing easy adminitration to openMosix 
clusters.

<PROGRAMLISTING>
migrate -send a migrate request to a process
                syntax: 
                        migrate [PID] [openMosix_ID]


mon             -is a ncurses-based terminal monitor
                 several informations about the current status are displayed in bar-charts

mosctl          -is the openMosix main configuration utility
                syntax:
                        mosctl  [stay|nostay]
                                [stay|nolstay]
                                [block|noblock]
                                [quiet|noquiet]
                                [nomfs|mfs]
                                [expel|bring]
                                [gettune|getyard|getdecay]

                        mosctl  whois   [openMosix_ID|IP-address|hostname]

                        mosctl  [getload|getspeed|status|isup|getmem|getfree|getutil]   [openMosix_ID]

                        mosctl  setyard [Processor-Type|openMosix_ID||this]

                        mosctl  setspeed        interger-value

                        mosctl  setdecay interval       [slow fast]

more detailed:

stay            -no automatic process migration
nostay          -automatic process migration (default)
lstay           -local processes should stay
nolstay         -local processes could migrate
block           -block arriving of guest processes
noblock         -allow arriving of guest processes
quiet           -disable gathering of load-balancing informations
noquiet         -enable gathering of load-balancing informations
nomfs           -disables MFS
mfs             -enables MFS
expel           -send away guest processes
bring           -bring all migrated processes home
gettune         -shows the current overhead parameter
getyard         -shows the current used Yardstick
getdecay        -shows the current decay parameter
whois           -resolves openMosix-ID, ip-addresses and hostnames of the cluster
getload         -display the (openMosix-) load
getspeed        -shows the (openMosix-) speed
status          -displays the current status and configuration
isup            -is a node up or down (openMosix kind of ping)
getmem          -shows logical free memory
getfree         -shows physical free mem
getutil         -display utilization
setyard         -sets a new Yardstick-value
setspeed        -sets a new (openMosix-) speed value
setdecay        -sets a new decay-interval





mosrun          -run a special configured command on a chooosen node
                syntax:
                        mosrun  [-h|openMosix_ID| list_of_openMosix_IDs] command [arguments]
</PROGRAMLISTING>
</PARA><PARA>
The mosrun-command can be executed with several more comandline options. 
To ease this up there are several preconfigured run-scripts for executing 
jobs with a special (openMosix) configuration.
</PARA>
<PROGRAMLISTING>
nomig           -runs a command which process(es) won't migrate
runhome         -executes a command locked to its home node
runon           -runs a command which will be directly migrated and locked to a node
cpujob  	-tells the openMosix cluster that this is a cpu-bound process
iojob           -tells the openMosix cluster that this is a io-bound 
process
nodecay         -executes a command and tells the cluster not to refresh the load-balancing statistics
slowdecay       -executes a command with a slow decay interval for collecting load-balancing statistics
fastdecay       -executes a command with a fast decay interval for collecting load-balancing statistics



setpe           -manuell node configuration utility
                syntax:
                        setpe   -w -f   [hpc_map]
                        setpe   -r [-f  [hpc_map]]
                        setpe   -off

-w reads the openMosix configuration from a file (typically /etc/hpc.map)
-r writes the current openMosix configuration to a file (typically /etc/hpc.map)
-off turns the current openMosix configuration off


tune            openMosix calibration and optimizations utility.
                (for further informations review the tune-man page)

</PROGRAMLISTING>


<PARA>
Additional to the /proc interface and the commandline-openMosix utilities 
(which are using the 
/proc interface) there is a pachted "ps" and "top" available (they are 
called "mps" and "mtop")
which displays also the openMosix-node ID on a column. This is usefull for 
finding out where a
specific process is currently being computed.
</PARA>
<PARA>
The administrator can have a overview about the current status of the 
cluster and its nodes with
the "Mosix Cluster Information Tool PHP" which can be found at 
http://wijnkist.warande.uu.nl/mosix/ .
(the path to the NODESDIR has to be adjusted to 
$NODESDIR="/proc/hpc/nodes/")
</PARA>
<PARA>
For smaller cluster it might also be usefull to use Mosixview which is a 
GUI for the most common 
administration tasks.
</PARA>
</SECT1>



</CHAPTER>


