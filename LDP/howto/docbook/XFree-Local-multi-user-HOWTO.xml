<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
     "http://docbook.org/xml/4.1.2/docbookx.dtd" []>

<book id="index">
  <bookinfo>
    <!-- Use "HOWTO", "mini HOWTO", "FAQ" in title, if appropriate -->
    <title>XFree local multi-user HOWTO</title>
    <author>
      <firstname>Svetoslav</firstname>
      <surname>Slavtchev</surname>
      <affiliation>
        <!-- Valid email...spamblock/scramble if so desired -->
        <address><email>galia (at) st-peter.stw.uni-erlangen.de</email></address>
      </affiliation>
    </author>
    <!-- All dates specified in ISO "YYYY-MM-DD" format -->
    <pubdate>2003-04-18</pubdate>
    <!-- Most recent revision goes at the top; list in descending order -->
    <revhistory>
      <revision>
        <revnumber>0.1</revnumber>
        <date>2003-04-18</date>
        <authorinitials>svetljo</authorinitials>
        <revremark>add links to related How-To's, notes on reusing Xinerama configured XFree; first official release</revremark>
      </revision>
<!--
      <revision>
        <revnumber>0.025</revnumber>
        <date>2003-04-17</date>
        <authorinitials>svetljo</authorinitials>
        <revremark>add "about backstreet ruby" page, have to reorganize "about this document" a bit </revremark>
      </revision>
      <revision>
        <revnumber>0.024</revnumber>
        <date>2003-04-16</date>
        <authorinitials>svetljo</authorinitials>
        <revremark>waiting for comments, some cleanups, general notes on SuSE completed, XFree86-prefbusid usage </revremark>
      </revision>
      <revision>
        <revnumber>0.023</revnumber>
        <date>2003-04-14</date>
        <authorinitials>svetljo</authorinitials>
        <revremark>waiting for comments, added info for multiple sound cards, customizing dm's, notes on building the kernel </revremark>
      </revision>
      <revision>
        <revnumber>0.022</revnumber>
        <date>2003-04-13</date>
        <authorinitials>svetljo</authorinitials>
        <revremark>waiting for comments, switch to book format, some cleanups</revremark>
      </revision>
      <revision>
        <revnumber>0.021</revnumber>
        <date>2003-04-11</date>
        <authorinitials>svetljo</authorinitials>
        <revremark>waiting for comments, reorganize a bit, add more distribution specific comments</revremark>
      </revision>
      <revision>
        <revnumber>0.020</revnumber>
        <date>2003-04-10</date>
        <authorinitials>svetljo</authorinitials>
        <revremark>waiting for comments, added distribution specific chapter &amp; some info on SuSE</revremark>
      </revision>
      <revision>
        <revnumber>0.01</revnumber>
        <date>2003-04-10</date>
        <authorinitials>svetljo</authorinitials>
        <revremark>first draft proposed, waiting for comments from the tldp members</revremark>
      </revision>
      <revision>
        <revnumber>0.002</revnumber>
        <date>2003-04-10</date>
        <authorinitials>svetljo</authorinitials>
        <revremark>first draft not yet proposed, almost finished moving to xml</revremark>
      </revision>
      <revision>
        <revnumber>0.001</revnumber>
        <date>2003-04-09</date>
        <authorinitials>svetljo</authorinitials>
        <revremark>first draft not yet proposed, starting to moving to xml</revremark>
      </revision>
-->
    </revhistory>
    <!-- Provide a good abstract; a couple of sentences is sufficient -->
    <abstract>
      <para>
This How-To tries to explain the shortest way to get a working 
multiple local X user capable PC system.It is not supposed to be 
a replacement of the existing documentation on backstreet ruby 
home page, which you'll probably need to consult for more detailed
information in case of problems. 
        </para>
    </abstract>
  </bookinfo>
  <chapter id="intro">
    <title>Introduction
</title>
    <sect1 id="about_bruby">
      <title>About backstreet ruby</title>
      <para>Backstreet ruby is a kernel patch for the linux kernel. It is a back port to linux-2.4 of the ruby kernel tree, which is developed by the Linux Console Project. The aim of the Linux Console developers is to enhance and reorganize the input, the console and the framebuffer subsystems in the linux kernel, so they can work proper independent from each other and to allow multi-desktop operation. All this is done in the ruby kernel tree which is based on the development linux-2.5 kernel. The new Input subsystem and the new Framebuffer layer are already integrated in linux-2.5 kernel, but as the main developer of the Linux Console Project James Simmons is too busy with completing the rewrite of the framebuffer layer in linux-2.5, the multi-desktop operation will not be integrated in the next stable linux kernel (linux-2.6). </para>
      <para>So backstreet ruby brings to the current stable linux kernel (linux-2.4) the enhanced input subsystem and the ability to use multiple graphic cards, multiple keyboards independently in order to make multiple local XFree users on a single PC system possible.  </para>
      <para>You can have multiple independent graphic cards, multiple independent mouses, but in order multiple users to interact with the system, they do need independent keyboards as well. Multiple independent keyboards is the feature that linux-2.4 (and in the future linux-2.6) lacks,and this is what backstreet ruby adds to the stable linux kernel linux-2.4.     </para>
      <para>The entire work on back porting ruby to linux-2.4 is done by Aivils Stoss. <email>Aivils.Stoss (at) unibanka.lv</email></para>
      <para>Visit his web site for more information on the patch itself, on the current status, how to build a kernel using his patch or how to build modified XFree86 server.</para>
      <para>You can find it here:<ulink url="http://startx.times.lv/">  http://startx.times.lv</ulink></para>
      <para>There are also several mirrors<orderedlist>
          <listitem>
            <para>in the United States</para>
            <para><ulink url="http://people.debian.org/~andreas/aivils/">http://people.debian.org/~andreas/aivils/</ulink></para>
          </listitem>
          <listitem>
            <para>in Germany</para>
            <para><ulink url="http://www.schuldei.org/aivils/">http://www.schuldei.org/aivils/</ulink></para>
            <para><ulink url="http://rfhs8012.fh-regensburg.de/~sls35340/aivils/">http://rfhs8012.fh-regensburg.de/~sls35340/aivils/</ulink></para>
          </listitem>
          <listitem>
            <para>in the United Kingdom</para>
            <para><ulink url="http://varna.demon.co.uk/~svetlio/aivils/">http://varna.demon.co.uk/~svetlio/aivils/</ulink></para>
          </listitem>
        </orderedlist></para>
      <para>The address of the Linux Console Project is: <ulink url="http://linuxconsole.sf.net">  http://linuxconsole.sf.net</ulink></para>
      <para></para>
    </sect1>
    <sect1 id="about">
      <title>About this document</title>
      <para>This document tries to explain you, how to configure your system for multiple local XFree users using the enchanted console/input subsystem in the backstreet ruby kernel.</para>
      <para>Currently there are two ways of setting up multiple local XFree users:</para>
      <para>( note : currently it is not possible to setup system for multiple console users)</para>
      <para><orderedlist>
          <listitem>
            <para>Modify the kernel to ignore input from USB keyboards and add the handling of USB keyboards to a modified Xserver. This solution was developed by Miguel Freitas, visit his page on the topic <ulink url="http://cambuca.ldhs.cetuc.puc-rio.br/multiuser/">http://cambuca.ldhs.cetuc.puc-rio.br/multiuser/</ulink>for instructions how to setup such system. 
</para>
          </listitem>
          <listitem>
            <para>Use backstreet ruby kernel which supports independent keyboards</para>
          </listitem>
        </orderedlist></para>
      <para>I'll concentrate on configuring a system for multiple local XFree users using the backstreet ruby kernel, but there are parts which can be used also on a system using Miguel Freitas solution.</para>
      <para>Note this document is not supposed to be a replacement of the existing documentation on the backstreet ruby home page    <ulink url="http://startx.times.lv/">http://startx.times.lv</ulink>, but a smaller How-To explaining the way to a working X multi-user PC system. If you meet some problems you'll probably need to consult the more detailed information there.</para>
      <para></para>
    </sect1>
    <sect1 id="rel_documentation">
      <title>Related Documentation</title>
      <para>The Linux Console Project </para>
      <para><ulink url="http://linuxconsole.sourceforge.net">http://linuxconsole.sourceforge.net</ulink></para>
      <para>The backstreet ruby home page</para>
      <para><ulink url="http://startx.times.lv/">http://startx.times.lv/</ulink></para>
      <para>Miguel Freitas page on multiple local XFree users</para>
      <para><ulink url="http://cambuca.ldhs.cetuc.puc-rio.br/multiuser/">http://cambuca.ldhs.cetuc.puc-rio.br/multiuser/</ulink></para>
      <para>Russian multiterminal project Gorinich</para>
      <para><ulink url="http://www.ctc.msiu.ru/zg/main.html">http://www.ctc.msiu.ru/zg/main.html</ulink></para>
      <para>Step by step instructions by Jean-Daniel Pauget</para>
      <para><ulink url="http://disjunkt.com/dualhead/">http://disjunkt.com/dualhead/</ulink></para>
      <para>Multi-seat XFree solution under Linux with framebuffers. by Frode Trydal.</para>
      <para><ulink url="http://www.itsopen.net/projects/x-hack/">http://www.itsopen.net/projects/x-hack/</ulink></para>
    </sect1>
    <sect1 id="new_version">
      <title>New versions of this document</title>
      <para>you can find the latest version at, </para>
      <para><ulink url="http://varna.demon.co.uk/~svetlio/ruby-contrib/how-to/XFree_local_multi-user-HOWTO/">http://varna.demon.co.uk/~svetlio/ruby-contrib/how-to/XFree_local_multi-user-HOWTO/</ulink></para>
    </sect1>
    <sect1 id="copyright">
      <title>Copyright and License</title>
      <!-- The LDP recommends, but doesn't require, the GFDL -->
      <para>
     This document, <emphasis>XFree-Local-multi-user-HOWTO</emphasis>,
     is copyrighted (c) 2003 by <emphasis>Svetoslav Slavtchev</emphasis>.
     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation
     License, Version 1.1 or any later version published
     by the Free Software Foundation; with no Invariant Sections,
     with no Front-Cover Texts, and with no Back-Cover Texts.
     A copy of the license is available at
     <ulink url="http://www.gnu.org/copyleft/fdl.html">
     http://www.gnu.org/copyleft/fdl.html</ulink>.
    </para>
      <para>
     Linux is a registered trademark of Linus Torvalds.
    </para>
    </sect1>
    <sect1 id="disclaimer">
      <title>Disclaimer</title>
      <para>
     No liability for the contents of this document can be accepted.
     Use the concepts, examples and information at your own risk.
     There may be errors and inaccuracies, that could be damaging to
     your system.  Proceed with caution, and although this is highly
     unlikely, the author(s) do not take any responsibility.
    </para>
      <para>
     All copyrights are held by their by their respective owners,
     unless specifically noted otherwise.  Use of a term in this
     document should not be regarded as affecting the validity of any
     trademark or service mark.  Naming of particular products or
     brands should not be seen as endorsements.
    </para>
    </sect1>
    <!-- Give credit where credit is due...very important -->
    <sect1 id="credits">
      <title>Credits / Contributors</title>
      <para>
     In this document, I have the pleasure of acknowledging:
    </para>
      <!-- Please scramble addresses; help prevent spam/email harvesting -->
      <itemizedlist>
        <listitem>
          <para>James Simmons <email>jsimmons (at) transvirtual.com   </email></para>
          <para>for working so hard on linux console project, for developing the new framebuffer, VT/console subsystem </para>
        </listitem>
        <listitem>
          <para>Vojtech Pavlik<email>vojtech (at) suse.cz</email></para>
          <para>for rewriting the input subsystem and working hard on the linux console project</para>
        </listitem>
        <listitem>
          <para>Aivils Stoss <email>Aivils.Stoss (at) unibanka.lv</email></para>
          <para>for back porting ruby to linux-2.4 and providing his back port and experiences to the world</para>
        </listitem>
      </itemizedlist>
    </sect1>
    <!-- Feedback -->
    <sect1 id="feedback">
      <title>Feedback</title>
      <para>
     Feedback is most certainly welcome for this document. Send
     your additions, comments and criticisms to the following
     email address : <email>galia (at) st-peter.stw.uni-erlangen.de</email>.
    </para>
    </sect1>
    <!-- Translations -->
  </chapter>
  <chapter id="before_begining">
    <title>Before we begin</title>
    <para></para>
    <!-- -->
    <sect1 id="xf_confs">
      <title>XFree configuration files</title>
      <para>You should configure each of your video cards to work properly with a single X server. This is actually beyond the scope of this document, you should refer to the documentation which came with your distribution, but some general hints wont hurt.</para>
      <para>The easiest way would be to use the same kind of monitors &amp; video cards, you could then configure only the first card/ monitor pair, make copies of this configuration file for the number of video cards you have, and then only adjust BusID "PCI:x:xx:x" field in the configuration file. You can do this with the help of lspci, XFree86 -scanpci, or other similar distribution specific tools.</para>
      <para>You could use a similar approach, in case you have only monitors or video cards of the same type.</para>
      <para>Most modern distributions also have advanced tools for easier configuration of Xinerama. You could use this tools to set-up the system for Xinerama and then use this configuration file for generating the configuration files for the different X servers.
You could use an example configuration file, replacing video card and monitor section, by the corresponding sections from the Xinerama XFConfig-4 file.</para>
      <para>Other useful resources:</para>
      <itemizedlist>
        <listitem>
          <para><ulink url="http://www.tldp.org/HOWTO/XFree86-HOWTO/index.html">The Linux XFree86 HOWTO</ulink></para>
        </listitem>
        <listitem>
          <para><ulink url="http://www.tldp.org/HOWTO/XFree86-Video-Timings-HOWTO/index.html">XFree86 Video Timings HOWTO</ulink></para>
        </listitem>
        <listitem>
          <para><ulink url="http://www.tldp.org/HOWTO/XWindow-Overview-HOWTO/index.html">X Window System Architecture Overview HOWTO</ulink></para>
        </listitem>
        <listitem>
          <para><ulink url="http://www.tldp.org/HOWTO/XWindow-User-HOWTO/index.html">The X Window User HOWTO</ulink></para>
        </listitem>
      </itemizedlist>
    </sect1>
    <sect1 id="xf_confs_xinerama">
      <title>Reusing Xinerama configured XFree</title>
      <para>In case you have a system configured for Xinerama, you can easily adjust the XFree configuration file, so you can use it for multiple users.</para>
      <para>This will allow on you to easily switch between multi-user environment and Xinerama multi-monitor environment. </para>
      <para>What is Xinerama and how the system configured upon this HOWTO differs from a system using the Xinerama extensions in XFree? </para>
      <para> The Xinerama extensions were introduced to the XFree86 system in version 4.0. Xinerama is an extension to XFree86 Release 6 Version 4.0 (X4.0) which allows applications and window managers to use the two (or more) physical displays as one large virtual display.In case Xinerama is not used, applications can only reside on one of the displays and can not be moved between the two. Window managers had to be specially written to support the two displays. With Xinerama, window managers and applications don't have to be specially written to support the larger "Virtual Desktop" which Xinerama creates.</para>
      <para>Just in opposite the primary goal of system configured according this HOWTO is to offer multiple independent displays for several users on a single PC system.</para>
      <para>for more information on Xinerama read:</para>
      <itemizedlist>
        <listitem>
          <para><ulink url="http://www.tldp.org/HOWTO/Xinerama-HOWTO/index.html">Xinerama-HOWTO</ulink>, Using Xinerama to MultiHead XFree86 v.4.0+</para>
        </listitem>
      </itemizedlist>
    </sect1>
    <sect1 id="binaries">
      <title>Binary packages</title>
      <para>Binary rpms of modified XFree servers are available currently for Mandrake 8.2/ 9/ 9.1, RedHat 8/ 9 and SuSE 8.1.  If your running other rpm based distribution please help me to prepare and rebuild packages (i can not install all available rpm distros on a single PC. right?), so other users can get directly the precompiled binaries. If you prepare packages for Debian submit them and they will be available  on the same url.
Currently the binary packages are not mirrored and are available only from </para>
      <para><ulink url="http://varna.demon.co.uk/~svetlio/ruby-contrib">http://varna.demon.co.uk/~svetlio/ruby-contrib</ulink>  </para>
    </sect1>
    <!-- Translations -->
  </chapter>
  <chapter id="kernel">
    <title>Installing the kernel</title>
    <para></para>
    <sect1 id="inst_kernel">
      <title>Installing backstreet ruby kernel</title>
      <para>Now its time to install the kernel.</para>
      <para>The easiest way would be to pull some already available binary kernel, there are packages for some distributions (? currently only MDK-9.1 ?) or a source package &amp; rebuild it on your system.</para>
      <para>If for some reason you can not use them, or have problems using them you can also build your own kernel with the bruby patch, for more information how to do this visit the backstreet ruby page on building and installing the kernel:<ulink url="http://startx.times.lv">http://startx.times.lv</ulink>&gt; (or some of the mirrors) Documentation -&gt; Quick Kernel</para>
      <para>(if you are new to linux reading "The Linux Kernel HOWTO" <ulink url="http://tldp.org/HOWTO/Kernel-HOWTO.html">http://tldp.org/HOWTO/Kernel-HOWTO.html</ulink> could be very heplfull)</para>
      <para>for now there is only one binary kernel package for Mandrake-9.1 </para>
      <para>you can get it from <ulink url="http://varna.demon.co.uk/~svetlio/ruby-contrib/kernel.html">http://varna.demon.co.uk/~svetlio/ruby-contrib/kernel.html</ulink></para>
    </sect1>
    <sect1 id="builld_kernel">
      <title>Notes on building your own kernel</title>
      <para>There are some things I would like to mention, although I wont go in details as the backstreet ruby page on compiling the kernel.</para>
      <para></para>
      <para><orderedlist>
          <listitem>
            <para>You have to follow this order</para>
            <programlisting>Input support
Virtual Terminal support
Console drivers</programlisting>
            <para>in order all required options to be available/ selectable</para>
          </listitem>
          <listitem>
            <para>You have to use built in input support</para>
            <programlisting>Input device support --&gt; Input core support
Input device support --&gt; Mouse support</programlisting>
          </listitem>
          <listitem>
            <para>i would suggest to include also at least one keyboard </para>
            <para>(built in - not as module), you can also use modules but i find it safer to be able to use a keyboard instead of trying to find a PC with ssh (or something similar) to load the required modules   </para>
            <para>for a AT/PS2 keyboard turn on (not modules)</para>
            <programlisting>Input device support --&gt; Serial i/o support
Input device support --&gt; i8042 PC Keyboard controller
Input device support --&gt; Keyboards
Input device support --&gt; AT keyboard support</programlisting>
            <para>for a USB keyboard turn on (not modules)</para>
            <programlisting>Input device support --&gt; Keyboards
USB support --&gt; support for USB
USB support --&gt; USB driver (probably usb-uhci.o)
USB support --&gt; USB Human Interface Device (full HID) support
USB support --&gt; HID input layer support</programlisting>
          </listitem>
          <listitem>
            <para>If you are new to linux do not try to patch already patched kernel</para>
            <para>(heavy patched kernel like the ones that ship with most distributions)</para>
            <para>use a kernel from www.kernel.org, and take a look at The Linux Kernel HOWTO </para>
          </listitem>
        </orderedlist></para>
      <para></para>
      <para>There are number of drivers which do not build for whatever reason, if you manage to fix them please send us the diff against vanila backstreet ruby kernel </para>
      <para>( plain linux-2.4.xx patched with the latest bruby-xxx.diff)</para>
      <para>currently this would be linux-2.4.20 patched with bruby-2.4.20-20021226.diff.bz2</para>
      <para>the drivers i'm aware of are:</para>
      <orderedlist>
        <listitem>
          <para>usbnet.o - USB-to-USB Networking cable device support</para>
        </listitem>
        <listitem>
          <para>usbserial.o - all USB serial drivers</para>
        </listitem>
        <listitem>
          <para>i8k.o - Dell Laptop support</para>
        </listitem>
      </orderedlist>
      <para>Support for frame buffer devices is not back ported, and is disabled</para>
      <para></para>
      <para>if you try to build alsa you might have problems building the usb driver</para>
      <para>actually to build it you have to change in include/sound/adriver.h </para>
      <programlisting>...
#if LINUX_VERSION_CODE &lt; KERNEL_VERSION(2, 4, 20) 
...</programlisting>
      <para>to</para>
      <programlisting>...
#if LINUX_VERSION_CODE &lt; KERNEL_VERSION(2, 4, 21) 
...</programlisting>
      <para>but i do not have the hardware to test, if the compiled driver works </para>
    </sect1>
    <sect1 id="dev_files">
      <title>Creating needed device files</title>
      <para> If you are not using devfs file system, you'll have to create several device files needed for the new input  sub-system in the backstreet ruby kernel:</para>
      <programlisting>cd /dev
mkdir input.old
mv mouse js? input.old
mkdir input
cd input
mknod js0 c 13 0
mknod js1 c 13 1
mknod js2 c 13 2
mknod js3 c 13 3
mknod mouse0 c 13 32
mknod mouse1 c 13 33
mknod mouse2 c 13 34
mknod mouse3 c 13 35
mknod mice c 13 63
mknod event0 c 13 64
mknod event1 c 13 65
mknod event2 c 13 66
mknod event3 c 13 67
cd ..
ln -s input/js0 js0
ln -s input/js1 js1
ln -s input/mice mouse</programlisting>
      <para>In case you use devfs, all required devices will be created automatically by devfs.</para>
      <para>Distribution which use devfs are for example Mandrake, ...( are there any others?).
Distribution which do not use devfs are RedHat, SuSE, ?Debian?, ...</para>
      <para>You can check whether devfs is used by issuing the following commands</para>
      <para>to check whether support for devfs is enabled in your kernel:</para>
      <para><command>cat /proc/filesystems | grep devfs</command></para>
      <para>to check whether devfs is used/ mounted:</para>
      <para><command>mount | grep devfs</command></para>
      <para>if you get empty string this means that devfs is not used,  in case you get something like the following output devfs is activated:</para>
      <para><computeroutput>[root@mc contrib]# cat /proc/filesystems | grep devfs</computeroutput></para>
      <para><computeroutput>nodev   devfs</computeroutput></para>
      <para><computeroutput>nodev   usbdevfs</computeroutput></para>
      <para><computeroutput>[root@mc contrib]# mount | grep devfs</computeroutput></para>
      <para><computeroutput>none on /proc/bus/usb type usbdevfs (rw)</computeroutput></para>
      <para><computeroutput>none on /dev type devfs (rw)</computeroutput></para>
      <para><computeroutput>[root@mc contrib]#</computeroutput></para>
    </sect1>
  </chapter>
  <chapter id="x_servers">
    <title>Setting up the X servers</title>
    <para>Now its time to  configure XFree.</para>
    <sect1 id="mod_x_server">
      <title>Installing modified X server</title>
      <para>Note for some video cards you can skip this part, before installing the modified X server check the video compatibility list,whether you need such one. Currently there are reports for working configurations without using a modified X server for Vodoo Graphics as primary and Vodoo3 or Nvidia TNT2 as secondary.</para>
      <para>Probably you only need already rebuild binaries. If there are packages for your distribution you can install them, if not you have 3 more possibilities:</para>
      <orderedlist>
        <listitem>
          <para>Install prebuild, but not packaged modified X server and crate the necessary symbolic links.</para>
          <para>You can get such prebuild binaries from the backstreet ruby home page <ulink url="http://startx.times.lv">http://startx.times.lv</ulink>.</para>
        </listitem>
        <listitem>
          <para>Help us (as well other people using your distribution) in building a rpm for your distribution. </para>
          <para>( we lack system installed with all available distributions so we are not able to build packages for every distribution)</para>
        </listitem>
        <listitem>
          <para>To patch and rebuild XFree from source using the instructions at the backstreet ruby page </para>
          <para>in the Documentation section. <ulink url="http://startx.times.lv">http://startx.times.lv</ulink> (or some of the mirrors) Documentation -&gt; Quick XFree
</para>
        </listitem>
      </orderedlist>
      <para>note that currently there are two different modifications of the X server</para>
      <orderedlist>
        <listitem>
          <para>XFree86-4.3 prefbusid ( Prefered Bus ID)</para>
          <para>the new recomended patch/ binary </para>
        </listitem>
        <listitem>
          <para>just XFree-4.3/ XFree-4.3.patch</para>
          <para>which is the older one</para>
          <para>(in the rpm section *server-concurrent.*rpm</para>
        </listitem>
      </orderedlist>
      <para>the new patch solves major problems for a number of Graphic cards, check the Video Compatibility list for details</para>
    </sect1>
    <sect1 id="sym_links">
      <title>Creating symbolic Links</title>
      <para>The symbolic links are needed for properly starting several XFree instances, as well for properly exiting a X session, this applies for both starting X from console and automatically starting X by the display manager (kdm, gdm, xdm).</para>
      <para>You need to create so much symbolic links to the modified X server binary (or the original X server in case you don't need a modified one), as the number of your video cards/ X sessions.</para>
      <para>I assume that you will have to use a modified X server, but in case you don not need it, create the links to your original X server. </para>
      <para><command>cd /usr/X11R6/bin/</command></para>
      <para><command>ln -s XFree[modified] X0</command></para>
      <para><command>ln -s XFree[modified] X1</command></para>
      <para><command>ln -s XFree[modified] X2</command></para>
      <para>In case you use the provided RPM's, you'll  need this only if you want more then 4 parallel running X servers/ X sessions, as the rpm creates 4 symbolic links to the X server binary.
</para>
    </sect1>
    <sect1 id="ind_keyboards">
      <title>Using independent keyboards with XFree</title>
      <para>Once you install the backstreet ruby kernel and start it with dumbcon=n, you get n +1 independent consoles ( 1VGA + n DUMB). In case you have enough keyboards connected to your PC, each of this consoles is associated with a given keyboard. This enables you to start multiple X servers on each of the consoles using for input the keyboard associated with the corresponding console, hence you get multiple independent X servers with independent keyboards, which in turn makes it possible one single PC to be used by several local X users at the same time.</para>
      <para>To start X on a given console(using a given independent keyboard) you pass it the argument "vt[N]", where N is a number from a given tty range.</para>
      <para>Under backstreet ruby each console is represented by 8 tty's :</para>
      <note>
        <itemizedlist>
          <listitem>
            <para>for the new Prefered Bus ID XFree Server you have to also specify the desired graphic card</para>
            <para>with parameter:</para>
            <para><command>-prefbusid x:x:x</command></para>
            <para>where x:x:x is the Bus ID of the desired graphic card, </para>
            <para></para>
            <itemizedlist>
              <listitem>
                <para>for AGP cards something similar to</para>
                <para><command>-prefbusid 1:0:0</command></para>
              </listitem>
              <listitem>
                <para>for PCI cards something similar to</para>
                <para><command>-prefbusid 0:x:0</command></para>
                <para>x is normally the IRQ number</para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para>in the following explanation I will not use this option,   </para>
            <para>if you use the Preferd Bus ID X server just append "-prefbusid x:x:x" with the correct Bus ID of the card you want to start right before the last argument "vt[x]"  </para>
          </listitem>
        </itemizedlist>
      </note>
      <itemizedlist>
        <listitem>
          <para>VGA:        tty0 - tty7</para>
        </listitem>
        <listitem>
          <para>DUMB1:      tty8 - tty15</para>
        </listitem>
        <listitem>
          <para>DUMB2:      tty16 - tty23</para>
        </listitem>
      </itemizedlist>
      <para>so if you have 3 video cards, 3 keyboards, and you have started backstreet ruby kernel with dumbcon=2, with the following commands you can start 3 independent X servers for 3 simultaneous users:</para>
      <para></para>
      <para>For 1st X server with the 1st keyboard:</para>
      <para><command>$ startx -- /usr/X11R6/bin/X0 :0  -xf86config /etc/X11/XF86Config-4[for your 1st video card] vt7</command></para>
      <para>For 2nd X server with the 2nd keyboard:</para>
      <para><command>$ startx -- /usr/X11R6/bin/X1 :1 -xf86config /etc/X11/XF86Config-4[for your 2nd video card] vt8</command></para>
      <para>For 3rd X server with the 3rd keyboard:</para>
      <para><command>$ startx -- /usr/X11R6/bin/X2 :2  -xf86config /etc/X11/XF86Config-4[for your 3rd video card] vt16</command></para>
      <para>for the 1st X server you can skip the " -xf86config /etc/X11/XF86Config-4[for your 1st video card]" argument, in this case the default configuration file  "/etc/X11/XF86Config-4" will be used.
</para>
      <note>
        <itemizedlist>
          <listitem>
            <para>for SuSE users</para>
            <para>the XFree configuration files are normally /etc/X11/XF86Config </para>
          </listitem>
          <listitem>
            <para>the same applies for RedHat users</para>
            <para>the XFree configuration files are normally /etc/X11/XF86Config </para>
          </listitem>
        </itemizedlist>
      </note>
      <para>You can also setup display manager to start the independent X servers, once everything is properly configured.But don't rush to setup your display manager before the configuration is finished, because this could give you serious problems.
When you are ready with the required configurations, you'll reach the section on configuring the display manager.
</para>
    </sect1>
    <sect1 id="ind_mouses">
      <title>Using independent mice with XFree</title>
      <para>To use independent mice for each of your independent X server/session, you have to just
modify the input section of the XFree configuration files to adjust the proper device files.</para>
      <para>You have to use /dev/input/mouse[n] , where n is the number of your mouse starting from 0,
</para>
      <itemizedlist>
        <listitem>
          <para>1st mouse     --&gt;   /dev/input/mouse0 </para>
        </listitem>
        <listitem>
          <para>2nd mouse    --&gt;    /dev/input/mouse1</para>
        </listitem>
        <listitem>
          <para>3rd mouse    --&gt;    /dev/input/mouse2 </para>
        </listitem>
        <listitem>
          <para>4th mouse     --&gt;    /dev/input/mouse3</para>
        </listitem>
      </itemizedlist>
      <para>you shouldn't use /dev/input/mice because it merges the input from all mice.
</para>
      <para>here is my configuration:
before modifications</para>
      <programlisting>------------------------------------------------------------------------------------------------

# **********************************************************************
# Pointer section
# **********************************************************************

Section "InputDevice"

    Identifier  "Mouse1"
    Driver      "mouse"
    Option "Protocol"    "IMPS/2"
    Option "Device"      "/dev/psaux"
    Option "ZAxisMapping" "4 5"

# ChordMiddle is an option for some 3-button Logitech mice
    Option "Emulate3Buttons"
#    Option "ChordMiddle"

EndSection

------------------------------------------------------------------------------------------------</programlisting>
      <para>after modifications for the first X server</para>
      <programlisting>------------------------------------------------------------------------------------------------

# **********************************************************************
# Pointer section
# **********************************************************************

Section "InputDevice"

    Identifier  "Mouse1"
    Driver      "mouse"
    Option "Protocol"    "IMPS/2"
    Option "Device"      "/dev/input/mouse0"
    Option "ZAxisMapping" "4 5"

# ChordMiddle is an option for some 3-button Logitech mice
    Option "Emulate3Buttons"
#    Option "ChordMiddle"

EndSection

-----------------------------------------------------------------------------------------------</programlisting>
      <para>for the second X server</para>
      <programlisting>-----------------------------------------------------------------------------------------------  
# **********************************************************************
# Pointer section
# **********************************************************************

Section "InputDevice"

    Identifier  "Mouse1"
    Driver      "mouse"
    Option "Protocol"    "IMPS/2"
    Option "Device"      "/dev/input/mouse1"
    Option "ZAxisMapping" "4 5"

# ChordMiddle is an option for some 3-button Logitech mice
    Option "Emulate3Buttons"
#    Option "ChordMiddle"

EndSection
-----------------------------------------------------------------------------------------------</programlisting>
      <para>and so on ...</para>
      <para>in case you meet some problems consult with <ulink url="http://www.tldp.org/HOWTO/mini/XFree86-Second-Mouse/"> "Second Mouse in X mini-HOWTO"</ulink></para>
      <para>if you still have problems feel free to send me an e-mail.</para>
    </sect1>
    <sect1 id="no_dri">
      <title>For graphic cards without DRI</title>
      <para>(or reusing Xinerama configured XFree)</para>
      <para>There could be several reasons for not using DRI</para>
      <para></para>
      <itemizedlist>
        <listitem>
          <para>As far i know only one graphic card in a system can use DRI</para>
        </listitem>
        <listitem>
          <para>the Nvidia closed source driver do not support DRI </para>
        </listitem>
      </itemizedlist>
      <para>In case one of this reasons applies to your system, you do not need different XFree configuration files for the different displays.</para>
      <para>You could configure your system for Xinerama using the tools provided with your distribution and reading <ulink url="http://www.tldp.org/HOWTO/Xinerama-HOWTO/index.html">The Xinerama-HOWTO</ulink>, so when the system is used by a single user, he/she could switch to Xinerama desktop and use all available displays for a bigger desktop. </para>
      <para>Once configured for Xinerama, only small additions are needed to achieve multiple independent desktops. All you have to do is to add new layouts which use single screen definition and have independent input devices.</para>
      <para>In case you have configured Xinerama in the following way</para>
      <programlisting>Section "ServerLayout"
    Identifier  "Simple Layout"
    Screen "Screen 2"
    Screen "Screen 1" RightOf "Screen 2"
    InputDevice "Mouse1" "CorePointer"
    InputDevice "Keyboard1" "CoreKeyboard"
EndSection</programlisting>
      <para>to achieve multiple independent desktops you only have to add Layout definitions for single screen:</para>
      <programlisting>Section "ServerLayout"
    Identifier  "first-Xserver"
    Screen "Screen 1"
    InputDevice "Mouse1" "CorePointer"
    InputDevice "Keyboard1" "CoreKeyboard"
EndSection

Section "ServerLayout"
    Identifier  "second-Xserver"
    Screen "Screen 2"
    InputDevice "Mouse2" "CorePointer"
    InputDevice "Keyboard1" "CoreKeyboard"
EndSection</programlisting>
      <para>which should result in this layout definitions</para>
      <programlisting>Section "ServerLayout"
    Identifier  "Xinerama"
    Screen "Screen 2"
    Screen "Screen 1" RightOf "Screen 2"
    InputDevice "Mouse1" "CorePointer"
    InputDevice "Keyboard1" "CoreKeyboard"
EndSection

Section "ServerLayout"
    Identifier  "first-Xserver"
    Screen "Screen 1"
    InputDevice "Mouse1" "CorePointer"
    InputDevice "Keyboard1" "CoreKeyboard"
EndSection

Section "ServerLayout"
    Identifier  "second-Xserver"
    Screen "Screen 2"
    InputDevice "Mouse2" "CorePointer"
    InputDevice "Keyboard1" "CoreKeyboard"
EndSection</programlisting>
      <para>Now you can start a single X server with option "-layout Xinerama" and enjoy Xinerama desktop, or</para>
      <para>you can start 2 independent X servers using "-layout first-Xserver" for the first, and "-layout second-Xserver" for the second. </para>
      <para><ulink url=""></ulink></para>
      <para>As you will use a single XFree configuration file for all X servers<itemizedlist>
          <listitem>
            <para>in order to use independent keyboards you have to use following command:</para>
            <para>For 1st X server with the 1st keyboard:</para>
            <para><command>$ startx -- /usr/X11R6/bin/X0 :0  -layout first-Xserver vt7</command></para>
            <para>For 2nd X server with the 2nd keyboard:</para>
            <para><command>$ startx -- /usr/X11R6/bin/X1 :1 -layout second-Xserver vt8</command></para>
            <para>and if you want to use Xinerama </para>
            <para><command>$ startx -- /usr/X11R6/bin/X -layout Xinerama vt7</command></para>
          </listitem>
          <listitem>
            <para>also the mice must have different names</para>
            <programlisting>------------------------------------------------------------------------------------------------

# **********************************************************************
# Pointer section
# **********************************************************************

Section "InputDevice"

    Identifier  "Mouse1"
    Driver      "mouse"
    Option "Protocol"    "IMPS/2"
    Option "Device"      "/dev/input/mouse0"
    Option "ZAxisMapping" "4 5"

# ChordMiddle is an option for some 3-button Logitech mice
    Option "Emulate3Buttons"
#    Option "ChordMiddle"

EndSection

Section "InputDevice"

    Identifier  "Mouse2"
    Driver      "mouse"
    Option "Protocol"    "IMPS/2"
    Option "Device"      "/dev/input/mouse1"
    Option "ZAxisMapping" "4 5"

# ChordMiddle is an option for some 3-button Logitech mice
    Option "Emulate3Buttons"
#    Option "ChordMiddle"

EndSection
-----------------------------------------------------------------------------------------------</programlisting>
          </listitem>
        </itemizedlist></para>
    </sect1>
    <sect1 id="glx_dri">
      <title>Nvidia GLX &amp; DRI</title>
      <note>
        <para>here you will found how to configure your system for parallel use of Nvidia's GLX and XFree's DRI</para>
        <para>in case you do not have Nvidia cards, or you have only Nvidia cards, you do not need to read this section</para>
        <para>in the first case you do not need the Nvidia GLX at all, in the second you can use the standard procedure for installing GLX</para>
      </note>
      <para>Why Nvidia, why closed source drivers:</para>
      <para>a bit mixed up answer:</para>
      <para><orderedlist>
          <listitem>
            <para>with the open source driver its almost impossible to bring up a secondary card, so we should use the closed one.</para>
          </listitem>
          <listitem>
            <para>why Nvidia card? well currently these are the only available affordable PCI video cards with some acceleration,</para>
          </listitem>
          <listitem>
            <para>&lt;FIX ME is this really so&gt;
I tried to use DRI on 2 parallel X servers, but it didn't work, i posted mails to XFree, DRI, lkml list,
but i got a single answer with no valuable information on my problem.
I tried to run DRI on a Matrox G550 DH AGP &amp; SiS63xx PCI,
when enabled for both cards i got agp errors, but enabled only for one of the cards,
i was getting DRI up and running.
Please someone confirm or prove me wrong !
&lt;/FIX ME&gt;</para>
          </listitem>
        </orderedlist></para>
      <para>I'll explain several ways how to get working configuration for both Nvidia GLX and XFree86 DRI,
there are probably a lot of other possibilities, and may be these are not the simplest, but that are the ones i know to work.</para>
      <para> The reasons why this is needed: <orderedlist>
          <listitem>
            <para>Nvidia should use different module path for xf86:
the glx extension module from Nvidia is incompatible
with the one from XFree86</para>
          </listitem>
          <listitem>
            <para>Nvidia should use different XF86Config file:
because DRI should be disabled for Nvidia and enabled for others.</para>
          </listitem>
        </orderedlist>
</para>
      <para>If You find a simpler way, please mail it me and I'll include it.
</para>
      <caution>
        <para>this can not be used as is on SuSE Linux</para>
        <para>in order to make it easy for the user to switch between Mesa, XFree and Nvidia GL libraries, SuSE uses very complicated setup for the GL libraries. </para>
        <para>In order to use this setup you have to switch your configuration to XFree86's GL libraries,</para>
      </caution>
      <sect2>
        <title> Example 1</title>
        <para>This is the configuration that i use at my system:
( ATI AIW Radeon 7500 AGP and Nvidia TNT2 M64 PCI )
XFree configuration files:</para>
        <orderedlist>
          <listitem>
            <para>create a directory /usr/X11R6/libNV
</para>
            <para><command>mkdir /usr/X11R6/libNV</command></para>
          </listitem>
          <listitem>
            <para>create links to the original /usr/X11R6/lib :</para>
            <para> <command>cd /usr/X11R6/libNV</command></para>
            <para> <command>lndir -silent -ignorelinks ../lib</command></para>
          </listitem>
          <listitem>
            <para>install the Nvidia driver and libraries in /usr/X11R6/libNV</para>
          </listitem>
          <listitem>
            <para>install Nvidia's libGLcore.so.1.0.[driver version] or better libGLcore.so.1 in /usr/lib
    make a symbolic link from /usr/X11R6/libNV/libGLcore.so.1 to /usr/lib/libGLcore.so.1
    (this will allow you to easyly update your Nvidia drivers )</para>
            <para><command>cd /usr/lib
</command></para>
            <para><command>ln -s ../X11R6/libNV/libGLcore.so.1 ./</command></para>
            <para>note: the Nvidia  libGL.so is installed /usr/X11R6/libNV so its invisible to the system unless you tell the system about the existence of /usr/X11R6/libNV. For this setup you must not do this, as it will break the standard X server start-up, but you can use the XFree GL libraries with Nvidia graphic card and Nvidia closed source drivers as well with a non Nvidia graphic card using XFree's DRI, which the GL library from Nvidia can not do.</para>
          </listitem>
          <listitem>
            <para>add a line in the XFree configuration file for the Nvidia card
to point the X server to the right location of the library and module path:

	<programlisting>Section "Files"

..........
ModulePath  "/usr/X11R6/libNV/modules"
..........

EndSection</programlisting></para>
          </listitem>
          <listitem>
            <para>install the Nvidia kernel driver</para>
          </listitem>
        </orderedlist>
        <para>now everything should be fine and you should be able to use DRI and Nvidia GLX at the same time,
you will have a bit smaller performance in comparison to a setup which uses Nvidia's libGL &amp; libGLcore,
but the difference is not that big on my PC.</para>
      </sect2>
      <sect2>
        <title>Example 2</title>
        <para>this example will give you the full performance of both the Nvidia card/s, and the
non Nvidia card, as it uses the XFree's libGL for the non Nvidia card and
Nvidia's libGL for Nvidia cards, but will require one more "Xserver" to be precise
a simple wrapper to add the path to the Nvidia libraries and symbolic links to it for
additional Nvidia cards.</para>
        <para>It is almost the same as the previous one, with the difference that the X servers
for the Nvidia cards should start with environment where Nvidia's libGL is known,
while the X servers for non Nvidia cards shouldn't know anything about the
Nvidia libGL. This requires a wrapper to be used for starting the X servers
driving Nvidia cards.
</para>
        <para>install the Nvidia libraries and kernel driver like in the previous example,
you may skip step 4. as libGLcore.so.1 is installed in /usr/X11R6/libNV
and we'll inform the X servers driving Nvidia cards about the proper path
to the Nvidia libraries.</para>
        <para>the missing part --the wrapper 
<programlisting>#!/bin/bash
export LD_LIBRARY_PATH=/usr/X11R6/libNV
exec /usr/X11R6/bin/X0 $*</programlisting></para>
        <para>copy this lines in your favourite editor,
save the file as XNV, make it executable:</para>
        <para><command>chmod +x XNV </command></para>
        <para>copy the file to /usr/X11R6/bin and make some
symbolic links to it for additional Nvidia cards:

for additional cards just add more link</para>
        <para><command>cp XNV /usr/X11R6/bin </command></para>
        <para><command>cd /usr/X11R6/bin  </command></para>
        <para><command>ln -s XNV Xnv0</command></para>
        <para><command>ln -s XNV Xnv1</command></para>
        <para><command>ln -s XNV Xnv2</command></para>
        <para>remember to use /usr/X11R6/bin/Xnv0, /usr/X11R6/bin/Xnv1 ...
instead of   /usr/X11R6/bin/X0, /usr/X11R6/bin/X1 ... for your
Nvidia cards while configuring the display managers in the next chapter,
or when starting X on Nvidia card/s from console.</para>
      </sect2>
      <sect2>
        <title>Installing the Nvidia libraries easily</title>
        <para>using the new Nvidia installer
(work in progress, do not use if you don't understand what happens here ;)
todo: write a script to perform steps 1-4
(does the script in the Appendix-&gt;scripts look OK, please give some feedback)</para>
        <para>
  manually: <orderedlist>
            <listitem>
              <para>make a backup of your XFree GL libraries:</para>
              <para><command>cd  [XFree prefix]</command></para>
              <para>on my Mandrake system i can use</para>
              <para><command>cd $OPENWINHOME</command></para>
              <para><command>find lib -name "libGL.*" -o -name "libGLcore*" -o -name "libglx.*" | xargs tar  rpfv   libGL-backup.tar</command></para>
            </listitem>
            <listitem>
              <para>then,run the Nvidia installer</para>
              <para><command>./NVIDIA-Linux-x86-1.0-4349.run --no-opengl-headers --xfree86-prefix=/usr/X11R6NV --opengl-prefix=/usr/X11R6NV</command></para>
            </listitem>
            <listitem>
              <para>copy the installed files to /usr/X11R6/libNV</para>
              <para><command>cd /usr/X11R6NV/lib &amp;&amp;  tar cv * | tar xvC /usr/X11R6/libNV/</command></para>
            </listitem>
            <listitem>
              <para>restore the backuped GL libraries:</para>
              <para><command>cd  [XFree prefix]</command></para>
              <para><command>tar xvfp libGL-backup.tar &amp;&amp; ldconfig</command></para>
            </listitem>
          </orderedlist>

</para>
      </sect2>
    </sect1>
  </chapter>
  <chapter id="dm_conf">
    <title>Configuring display managers</title>
    <para>If you have finished successfully the installation and configuration of the kernel and XFree. It's time to configure your display manager(s).</para>
    <note>
      <itemizedlist>
        <listitem>
          <para>for the new Prefered Bus ID XFree Server you have to also specify the desired graphic card</para>
          <para>with parameter:</para>
          <para><command>-prefbusid x:x:x</command></para>
          <para>where x:x:x is the Bus ID of the desired graphic card, </para>
          <para></para>
          <itemizedlist>
            <listitem>
              <para>for AGP cards something similar to</para>
              <para><command>-prefbusid 1:0:0</command></para>
            </listitem>
            <listitem>
              <para>for PCI cards something similar to</para>
              <para><command>-prefbusid 0:x:0</command></para>
              <para>x is normally the IRQ number</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>in the following explanation I will not use this option,   </para>
          <para>if you use the Preferd Bus ID X server just append "-prefbusid x:x:x" with the correct Bus ID of the card you want to start right before the last argument "vt[x]"  </para>
        </listitem>
      </itemizedlist>
    </note>
    <sect1 id="dm_conf-xdm_kdm">
      <title>Configuring xdm and kdm</title>
      <para>If everything is working now, its time to setup the automatic starting of X on all displays.
For xdm and kdm you have to modify one single file, for a RedHat like system
this would be /etc/X11/xdm/Xservers, for other distributions check whether this file exist,
in case not, find  your XFree86 configuration directory, in it you'll find xdm/Xservers. </para>
      <note>
        <para>SuSE uses</para>
        <itemizedlist>
          <listitem>
            <para>/etc/X11/XF86Config</para>
          </listitem>
          <listitem>
            <para>/etc/X11/xdm/Xservers for xdm</para>
          </listitem>
          <listitem>
            <para>/etc/opt/kde3/share/config/kdm/Xservers for kdm </para>
          </listitem>
          <listitem>
            <para>/etc/opt/gnome2/gdm/gdm.conf for gdm2 </para>
          </listitem>
        </itemizedlist>
        <para>but you could make a backup copy of /etc/opt/.../kdm/Xservers</para>
        <para>and make symbolic link from /etc/X11/xdm/Xservers to /etc/opt/../kdm/Xservers</para>
        <para>in order to use the same configuration file for xdm and kdm</para>
      </note>
      <note>
        <para>Red Hat uses</para>
        <itemizedlist>
          <listitem>
            <para>/etc/X11/XF86Config</para>
          </listitem>
        </itemizedlist>
      </note>
      <para>For every additional X server you should add a single line, you can copy the existing line,
change the X server binary , display number and append -xf86config [your configuration file]
my original xdm/Xservers:
<programlisting>#####################################################################

# $XConsortium: Xserv.ws.cpp,v 1.3 93/09/28 14:30:30 gildea Exp $
#
#
# $XFree86: xc/programs/xdm/config/Xserv.ws.cpp,v 1.1.1.1.12.2 1998/10/04 15:23:14 hohndel Exp $
#
# Xservers file, workstation prototype
#
# This file should contain an entry to start the server on the
# local display; if you have more than one display (not screen),
# you can add entries to the list (one per line).  If you also
# have some X terminals connected which do not support XDMCP,
# you can add them here as well.  Each X terminal line should
# look like:
#	XTerminalName:0 foreign
#
:0 local /bin/nice -n -10 /usr/X11R6/bin/X :0 -deferglyphs 16 vt7

######################################################################</programlisting>
</para>
      <para>and the modified version
<programlisting>######################################################################

# $XConsortium: Xserv.ws.cpp,v 1.3 93/09/28 14:30:30 gildea Exp $
#
#
# $XFree86: xc/programs/xdm/config/Xserv.ws.cpp,v 1.1.1.1.12.2 1998/10/04 15:23:14 hohndel Exp $
#
# Xservers file, workstation prototype
#
# This file should contain an entry to start the server on the
# local display; if you have more than one display (not screen),
# you can add entries to the list (one per line).  If you also
# have some X terminals connected which do not support XDMCP,
# you can add them here as well.  Each X terminal line should
# look like:
#	XTerminalName:0 foreign
#

:0 local /bin/nice -n -10 /usr/X11R6/bin/X0 :0 -deferglyphs 16 vt7
:1 local /bin/nice -n -10 /usr/X11R6/bin/X1 :1 -xf86config /etc/X11/XF86Config-4.TNT2 vt9

#######################################################################</programlisting>
</para>
      <para>in case you have more video cards just add more lines:</para>
      <programlisting>:2 local /bin/nice -n -10 /usr/X11R6/bin/X2 :2 -xf86config /etc/X11/XF86Config-4.[your 3rd card] vt16
:3 local .....</programlisting>
      <para>in case you use single XFree configuration file
<programlisting>######################################################################

# $XConsortium: Xserv.ws.cpp,v 1.3 93/09/28 14:30:30 gildea Exp $
#
#
# $XFree86: xc/programs/xdm/config/Xserv.ws.cpp,v 1.1.1.1.12.2 1998/10/04 15:23:14 hohndel Exp $
#
# Xservers file, workstation prototype
#
# This file should contain an entry to start the server on the
# local display; if you have more than one display (not screen),
# you can add entries to the list (one per line).  If you also
# have some X terminals connected which do not support XDMCP,
# you can add them here as well.  Each X terminal line should
# look like:
#	XTerminalName:0 foreign
#

:0 local /bin/nice -n -10 /usr/X11R6/bin/X0 :0 -layout first-Xserver -deferglyphs 16 vt7
:1 local /bin/nice -n -10 /usr/X11R6/bin/X1 :1 -layout second-Xserver vt9

#######################################################################</programlisting>
</para>
    </sect1>
    <sect1 id="dm_conf-gdm">
      <title>Configuring gdm</title>
      <para>gdm as a complete rewrite of xdm uses its own configuration file:
/etc/X11/gdm/gdm.conf</para>
      <para>you should locate the definitions of the local X servers and add additional X servers for the number of cards you have.
</para>
      <para>modifications:</para>
      <para></para>
      <sect2>
        <title>changes part 1/2</title>
        <para><programlisting>.......
[servers]
# These are the standard servers.  You can add as many you want here
# and they will always be started.  Each line must start with a unique
# number and that will be the display number of that server.  Usually just
# the 0 server is used.
0=Standard
1=Second
.......</programlisting>
here you'll have only 0=Standard, for each additional X server 
you should add a definition like here for 1=Second

</para>
      </sect2>
      <sect2>
        <title>changes part 2/2</title>
        <para>
<programlisting>..............................
# Definition of the standard X server.
[server-Standard]
name=Standard server
command=/usr/X11R6/bin/X0 :0 -deferglyphs 16 -ac vt7
flexible=true

[server-Second]
name=Second server
command=/usr/X11R6/bin/X1 :1 -deferglyphs 16 -xf86config /etc/X11/XF86Config-4.[your card] vt9
flexible=true
..............................   </programlisting>

and here the exact definition of the command line for starting the X server,
very similar to the definitions in /etc/X11/xdm/Xservers
(the definition of [server-Second] is the additional one)</para>
        <para>In case you use single XFree configuration file
<programlisting>..............................
# Definition of the standard X server.
[server-Standard]
name=Standard server
command=/usr/X11R6/bin/X0 :0 -layout first-Xserver -deferglyphs 16 -ac vt7
flexible=true

[server-Second]
name=Second server
command=/usr/X11R6/bin/X1 :1 -layout second-Xserver -deferglyphs 16 vt9
flexible=true
..............................   </programlisting>
</para>
      </sect2>
    </sect1>
  </chapter>
  <chapter id="automation">
    <title>Tweaking it</title>
    <para>adding customization and automation </para>
    <sect1 id="automation_multy_snd-cards">
      <title>Using independent sound cards </title>
      <para></para>
      <para></para>
      <note>
        <para>in case you do not use devfs, you may need to create additional device files, take a look at  </para>
        <para><ulink url="http://www.tldp.org/HOWTO/Sound-HOWTO/index.html">The Linux Sound HOWTO</ulink>, for information how to setup additional sound cards</para>
      </note>
      <sect2>
        <title>Using arts demon (artsd)</title>
        <para>we have to specify different sound device for the different Xsessions / Displays </para>
        <para>this is done by using the following options of artsd</para>
        <itemizedlist>
          <listitem>
            <para>by OSS-free sound driver </para>
            <programlisting>-D /dev/dsp[n]</programlisting>
            <para>where n is the number of the sound card</para>
          </listitem>
          <listitem>
            <para>by Alsa sound driver  </para>
            <programlisting>-a alsa -D hw:[n],0</programlisting>
            <para>where n is sound card id  </para>
          </listitem>
        </itemizedlist>
        <para></para>
        <para>add this lines to your Window Manager start-up script</para>
        <para>(of course with the proper arguments for your setup)</para>
        <programlisting>real_display=`echo $DISPLAY | sed "s/://" | sed "s/\..*//"`
case "$real_display" in
        0)
        artsd -F 10 -S 4096 -D /dev/dsp -s 5 -m artsmessage -l 3 -f &amp;
        ;;
        1)
        artsd -F 10 -S 4096 -D /dev/dsp1 -s 5 -m artsmessage -l 3 -f &amp;
        ;;
        2)
        artsd -F 10 -S 4096 -a alsa -D hw:4,0 -s 5 -m artsmessage -l 3 -f &amp;
        ;;
esac</programlisting>
        <para>and at the end of the file:</para>
        <programlisting>artsshell -q terminate</programlisting>
        <para><filename>here is example for 
/usr/X11R6/bin/startenlightenment</filename></para>
        <programlisting>#!/bin/sh
#   License: GPL

real_display=`echo $DISPLAY | sed "s/://" | sed "s/\..*//"`
case "$real_display" in
        0)
        artsd -F 10 -S 4096 -D /dev/dsp -s 5 -m artsmessage -l 3 -f &amp;
        ;;
        1)
        artsd -F 10 -S 4096 -D /dev/dsp1 -s 5 -m artsmessage -l 3 -f &amp;
        ;;
        2)
        artsd -F 10 -S 4096 -a alsa -D hw:2,0 -s 5 -m artsmessage -l 3 -f &amp;
        ;;
esac

/usr/X11R6/bin/enlightenment
artsshell -q terminate</programlisting>
        <para></para>
        <para>this will start 3 arts demons for 3 X servers</para>
        <orderedlist>
          <listitem>
            <para>demon will use the first OSS sound device for the 1st X server</para>
          </listitem>
          <listitem>
            <para>demon will use the second OSS sound device for the 2nd X server</para>
          </listitem>
          <listitem>
            <para>demon will use the ??? Alsa sound device for the 3rd X server</para>
          </listitem>
        </orderedlist>
      </sect2>
      <sect2>
        <title>Using esound demon (esd)</title>
        <para>we have to specify different sound device for the different Xsessions / Displays </para>
        <para>this is done by using the following options of esd</para>
        <itemizedlist>
          <listitem>
            <para>by OSS-free sound driver or Alsa's OSS emulation</para>
            <programlisting>-D /dev/dsp[n]</programlisting>
            <para>where n is the number of the sound card</para>
          </listitem>
          <listitem>
            <para>by Alsa sound driver  </para>
            <programlisting></programlisting>
            <para>??? is it possible ???</para>
          </listitem>
        </itemizedlist>
        <para></para>
        <para>add this lines to your Window Manager start-up script</para>
        <para>(of course with the proper arguments for your setup)</para>
        <programlisting>real_display=`echo $DISPLAY | sed "s/://" | sed "s/\..*//"`
case "$real_display" in
        0)
        esd -d /dev/dsp -as 5 &amp;
        ;;
        1)
        esd -d /dev/dsp1 -as 5 &amp;
        ;;
        2)
        esd -d /dev/dsp2 -as 5 &amp;
        ;;
esac</programlisting>
        <para>and at the end of the file:</para>
        <programlisting>esd -terminate</programlisting>
        <para><filename>here is example for 
/usr/X11R6/bin/startenlightenment</filename></para>
        <programlisting>#!/bin/sh
#   License: GPL

real_display=`echo $DISPLAY | sed "s/://" | sed "s/\..*//"`
case "$real_display" in
        0)
        esd -d /dev/dsp -as 5 &amp;
        ;;
        1)
        esd -d /dev/dsp1 -as 5 &amp;
        ;;
        2)
        esd -d /dev/dsp2 -as 5 &amp;
        ;;
esac

/usr/X11R6/bin/enlightenment
esd -terminate</programlisting>
        <para></para>
        <para>this will start 3 esound demons for 3 X servers</para>
        <orderedlist>
          <listitem>
            <para>demon will use the first OSS sound device for the 1st X server</para>
          </listitem>
          <listitem>
            <para>demon will use the second OSS sound device for the 2nd X server</para>
          </listitem>
          <listitem>
            <para>demon will use the ??? Alsa sound device for the 3rd X server</para>
          </listitem>
        </orderedlist>
      </sect2>
    </sect1>
    <sect1 id="automation_login_screen">
      <title>Customizing the login screen</title>
      <para></para>
      <para></para>
      <sect2>
        <title>Using xdm</title>
        <para> copy <filename>/etc/X11/xdm/Xsetup_0</filename> to<filename>/etc/X11/xdm/Xsetup_1</filename></para>
        <para>for additional X servers create the files<filename>/etc/X11/xdm/Xsetup_[n]</filename>, where n is the number of the X server starting from 0</para>
        <orderedlist>
          <listitem>
            <para>modify the line containing the background image, to adjust the path to your image for the 2nd X server</para>
            <programlisting>....
if [ -r /usr/share/mdk/backgrounds/default.png -a -x /usr/bin/qiv ]; then
    /usr/bin/qiv -z /usr/share/mdk/backgrounds/default.png
else
    /usr/X11R6/bin/xsetroot -solid "#21449C"
fi
....</programlisting>
            <para>modified</para>
            <programlisting>....
if [ -r /usr/share/mdk/backgrounds/flower.jpg -a -x /usr/bin/qiv ]; then
    /usr/bin/qiv -z /usr/share/mdk/backgrounds/flower.jpg
else
    /usr/X11R6/bin/xsetroot -solid "#21449C"
fi
....</programlisting>
            <para>you can also specify a different background color, with :</para>
            <programlisting>....
#if [ -r /usr/share/mdk/backgrounds/flower.jpg -a -x /usr/bin/qiv ]; then
#    /usr/bin/qiv -z /usr/share/mdk/backgrounds/flower.jpg
#else
    /usr/X11R6/bin/xsetroot -solid "[your color]"
#fi
....</programlisting>
          </listitem>
          <listitem>
            <para>comment out the lines which may affect the primary X server</para>
            <para>from</para>
            <programlisting>....
if [ -x /etc/X11/xinit.d/numlock ]; then
    /etc/X11/xinit.d/numlock &amp;
fi
....</programlisting>
            <para>to </para>
            <programlisting>....
#if [ -x /etc/X11/xinit.d/numlock ]; then
#    /etc/X11/xinit.d/numlock &amp;
#fi
....</programlisting>
          </listitem>
          <listitem>
            <para>inform xdm about the existence of Xsetup_1 by modify /etc/X11/xdm/xdm-config </para>
            <programlisting>......
! The following three resources set up display :0 as the console.
DisplayManager._0.setup:        /etc/X11/xdm/Xsetup_0
DisplayManager._0.startup:      /etc/X11/xdm/GiveConsole
DisplayManager._0.reset:        /etc/X11/xdm/TakeConsole
DisplayManager._0.startAttempts: 1
!
......</programlisting>
            <para>modified</para>
            <programlisting>......
! The following three resources set up display :0 as the console.
DisplayManager._1.setup:        /etc/X11/xdm/Xsetup_1
DisplayManager._0.setup:        /etc/X11/xdm/Xsetup_0
DisplayManager._0.startup:      /etc/X11/xdm/GiveConsole
DisplayManager._0.reset:        /etc/X11/xdm/TakeConsole
DisplayManager._0.startAttempts: 1
!
......</programlisting>
          </listitem>
          <listitem>
            <para>repeat the procedure for each additional X server</para>
          </listitem>
          <listitem>
            <para>check for additional customizing options </para>
            <para><ulink url="http://www.linuxjournal.com/article.php?sid=3325">Linux-Journal Issue 68: Linux Apprentice: Customizing the XDM Login Screen</ulink></para>
          </listitem>
        </orderedlist>
        <para><ulink url=""></ulink></para>
      </sect2>
      <sect2>
        <title>Using kdm</title>
        <para></para>
        <itemizedlist>
          <listitem>
            <para>not really sure </para>
            <para><filename>/usr/share/config/kdm/kdmrc</filename></para>
            <para>from</para>
            <programlisting>......
[X-:0-Core]
Authorize=true
AutoLogin1st=true
AutoLoginEnable=false
Reset=/etc/X11/xdm/TakeConsole
Setup=/etc/X11/xdm/Xsetup_0
Startup=/etc/X11/xdm/GiveConsole

[X-:1-Core]
Authorize=true
......</programlisting>
            <para>to </para>
            <programlisting>......
[X-:0-Core]
Authorize=true
AutoLogin1st=true
AutoLoginEnable=false
Reset=/etc/X11/xdm/TakeConsole
Setup=/etc/X11/xdm/Xsetup_0
Startup=/etc/X11/xdm/GiveConsole

[X-:1-Core]
Authorize=true
#AutoLogin1st=true
#AutoLoginEnable=false
#Reset=/etc/X11/xdm/TakeConsole
Setup=/etc/X11/xdm/Xsetup_1
#Startup=/etc/X11/xdm/GiveConsole

#[X-:1-Core]
#Authorize=true
......</programlisting>
          </listitem>
          <listitem>
            <para>check for additional customizing options in the kde help center  </para>
          </listitem>
          <listitem>
            <para></para>
            <programlisting></programlisting>
            <para></para>
          </listitem>
        </itemizedlist>
      </sect2>
      <sect2>
        <title>Using gdm</title>
        <para>this doesn't work on my current setup with gdm-2.4.1.3, the theme overwrites the background</para>
        <para>but it should work on some older 2.0 versions</para>
        <orderedlist>
          <listitem>
            <para>copy the file <filename>/etc/X11/gdm/Init/Default</filename> to</para>
            <para><filename>/etc/X11/gdm/Init/:0</filename></para>
            <para>and <filename>/etc/X11/gdm/Init/:1 </filename></para>
          </listitem>
          <listitem>
            <para>add this lines to use the background which kdm uses </para>
            <para>of course you can use another image file as well, just change the full path to it</para>
            <programlisting>if [ -r /usr/share/mdk/backgrounds/default.png -a -x /usr/bin/qiv ]; then
    /usr/bin/qiv -z /usr/share/mdk/backgrounds/default.png
else
    /usr/X11R6/bin/xsetroot -solid "#21449C"
fi</programlisting>
            <para>you can also specify a different background color, with :</para>
            <programlisting>/usr/X11R6/bin/xsetroot -solid "[your color]"</programlisting>
            <para>modified</para>
            <para><filename>/etc/X11/gdm/Init/:0 </filename></para>
            <programlisting>#!/bin/sh

if [ -r /usr/share/mdk/backgrounds/default.png -a -x /usr/bin/qiv ]; then
    /usr/bin/qiv -z /usr/share/mdk/backgrounds/default.png
else
    /usr/X11R6/bin/xsetroot -solid "#21449C"
fi
if [ -x /etc/X11/xinit/fixkeyboard ]; then
    /etc/X11/xinit/fixkeyboard
fi

exit 0</programlisting>
            <para><filename>/etc/X11/gdm/Init/:1 </filename></para>
            <programlisting>#!/bin/sh

if [ -r /usr/share/mdk/backgrounds/flower.jpg -a -x /usr/bin/qiv ]; then
    /usr/bin/qiv -z /usr/share/mdk/backgrounds/flower.jpg
else
    /usr/X11R6/bin/xsetroot -solid "#21449C"
fi

if [ -x /etc/X11/xinit/fixkeyboard ]; then
    /etc/X11/xinit/fixkeyboard
fi

exit 0</programlisting>
          </listitem>
          <listitem>
            <para>repeat the procedure for each additional X server, using files <filename>/etc/X11/gdm/Init/:[n] </filename>, where n is the number of the display</para>
          </listitem>
          <listitem>
            <para>check for additional customizing options </para>
            <para><ulink url="http://www.ibiblio.org/oswg/oswg-nightly/oswg/en_US.ISO_8859-1/articles/gdm-reference/gdm-reference/">Gnome Display Manager Reference Manual</ulink></para>
          </listitem>
        </orderedlist>
      </sect2>
    </sect1>
    <sect1 id="first_x_server">
      <title>1st X server configuration file</title>
      <para>a small part of the Mandrake init scripts</para>
      <para>( you can append it to yours if you are missing something similar)</para>
      <programlisting>-----------------------------------------------------------------------------------
# (pixel) a kind of profile for XF86Config
# if no XFree=XXX given on kernel command-line, restore XF86Config.standard
for i in XF86Config XF86Config-4; do
    if [ -L "/etc/X11/$i" ]; then
        XFree=`sed -n 's/.*XFree=\(\w*\).*/\1/p' /proc/cmdline`
        [ -n "$XFree" ] || XFree=standard
        [ -r "/etc/X11/$i.$XFree" ] &amp;&amp; ln -sf "$i.$XFree" "/etc/X11/$i"
    fi
done
-----------------------------------------------------------------------------------</programlisting>
      <para>move your XF86Config-4 file( the one for standard kernel) to XF86Config-4.standard,
create a link from it to XF86Config-4, move the XF86Config-4 file(the one for backstreet ruby) to
XF86Config-4.bruby. For ruby/ backstreet ruby kernels add to the append line in /etc/lilo.conf
or on boot prompt XFree=bruby, leave the standard kernel as is.</para>
      <para>Results:</para>
      <para>booting with "XFree=standard" or without "XFree=" ( boot prompt or lilo.conf) will result in linking XF86Config-4.standard to XF86Config-4, booting with "XFree=bruby" will link XF86Config-4.bruby to XF86Config-4, so in both occasions XFree can be started with the proper configuration file for the first X server.</para>
      <para>And what about the other X servers? :</para>
      <para>Well under standard kernel you can not use several independent X servers, so ...</para>
      <para>you use the other XFree configuration files only under ruby/ backstreet ruby --
no need for different configuration files under standard &amp; bruby kernel.</para>
    </sect1>
    <sect1 id="auto_dm_confs">
      <title>Number X servers started by Display managers</title>
      <para>Well its a modified version of the previous approach:</para>
      <para>add this to your init scripts (i bet it is missing :) ) :</para>
      <programlisting>---------------------------------------------------------------------------------------
#
#the same like XF86Config but for gdm.conf &amp; Xservers
#
for i in xdm/Xservers gdm/gdm.conf; do
    if [ -L "/etc/X11/$i" ]; then
        DumbCon=`sed -n 's/.*dumbcon=\([0-9]*\).*/\1/p' /proc/cmdline`
        [ -n "$DumbCon" ] || DumbCon=0
        [ -r "/etc/X11/$i.$DumbCon" ] &amp;&amp; ln -sf "/etc/X11/$i.$DumbCon" "/etc/X11/$i"
    fi
done
echo "Setting up display managers for `expr $DumbCon + 1` Xservers"
---------------------------------------------------------------------------------------</programlisting>
      <para>it will adjust the proper /etc/X11/xdm/Xservers &amp; /etc/X11/gdm/gdm.config according to the boot line argument dumbcon=n ( remember n+1= number of X users/sessions)</para>
      <para>you have to create the configuration files following this assumptions:</para>
      <para>"i" stays for  "/etc/X11/xdm/Xserver" and "/etc/X11/gdm/gdm.conf"</para>
      <itemizedlist>
        <listitem>
          <para> i.0 is used for a single X server, when dumbcon=n is not specified,
or dumbcon=0</para>
        </listitem>
        <listitem>
          <para> i.1 is used by the display manager when dumbcon=1 is specified</para>
        </listitem>
        <listitem>
          <para> i.2 is used by the display manager when dumbcon=2 is specified</para>
        </listitem>
        <listitem>
          <para> i.3 is used by the display manager when dumbcon=3 is specified</para>
        </listitem>
      </itemizedlist>
      <para>and so on ..</para>
      <para>so :</para>
      <itemizedlist>
        <listitem>
          <para>i.0 should contain the definition only of your original standard X server,</para>
        </listitem>
        <listitem>
          <para>i.1 should contain the definitions for 2 X servers</para>
        </listitem>
        <listitem>
          <para>i.2 should contain the definitions for 3 X servers</para>
        </listitem>
        <listitem>
          <para>.......</para>
        </listitem>
      </itemizedlist>
      <para>so if you boot without dumbcon=n or with dumbcon=0 (for example a standard kernel),
your display manager will start a single X server with the corresponding XF86Config file,</para>
      <para>if you start with dumbcon=1 the display manager will start automatically 2 X servers, </para>
      <para>if you start with dumbcon=2  when booting is finished you'll get 3 login prompts on your
3 displays.</para>
      <para>Have in mind that each X server should have it's own configuration file, and it should be specified in the display manager configuration file properly -- take a look at the configuration files before restarting with activated display manager and this addition to your init scripts.</para>
    </sect1>
    <sect1 id="dyn_switch_num_x_serv">
      <title>Dynamically switching the number of X servers</title>
      <para>There is a very experimental GUI / CLI for dynamically switching the number of running X servers. It uses the previously mentioned in section 6.2 automatic configuration of the display managers, python, dialog for the CLI, and Xdialog for the GUI.</para>
      <para>Once it gets a bit more tested and bug-free, you could use it under backstreet ruby for example to switch between 2, 3 or more X servers and a single X server using Xinerama, so when your PC is not used by more then one user, you could use the other monitors under Xinerama, or one more funny example : your are simulating net gaming with a number of friends on your bruby Linux PC, you have invested a bit more in an additional graphic card which is already configured, but you don't have enough money right now to buy one more monitor and keyboard/mice pair. One friend of yours comes and says " Hey guys, that's cool. Can i join? " . What would you answer? Using  the GUI  could result in the following answer from your side: "No problem, just bring your monitor and keyboard/mice."</para>
      <para>If you are feeling hacker and want to try out this BUGGY GUI/ CLI check the current status here :
   <ulink url="http://varna.demon.co.uk/~svetlio/ruby-contrib/bruby-python/">http://varna.demon.co.uk/~svetlio/ruby-contrib/bruby-python/</ulink></para>
      <para>but remember it's not very tested, and if not configured properly it can cause you serious troubles, so please wait till it gets stable if your feeling not that familiar with Linux. If you feel comfortable under Linux, and think of you as a hacker, please help in testing it and making it better, bug-free, easy to configure.
</para>
      <para></para>
    </sect1>
  </chapter>
  <chapter id="problems">
    <title>Known problems</title>
    <sect1 id="hard_problems">
      <title id="software">Hardware problems</title>
      <para>Well not exactly problems, but some graphic cards do not work well, or even at all in multi-user environment.</para>
      <para>If you are building such system from the begging, check the video compatibility list before buying video hardware.</para>
    </sect1>
    <sect1 id="soft_problems">
      <title>Software problems</title>
      <para>for details on solving the problems see the following chapter "Special notes on some distributions"</para>
      <sect2 id="inco_progs">
        <title>Incompatible userspace programs</title>
        <orderedlist>
          <listitem>
            <para>gpm: freezy mouse under XFree86. With current XFree86 you are losing VGA virtual consoles any way</para>
            <para>Recommended disable.</para>
          </listitem>
          <listitem>
            <para>RedHat 8.0/ 9, SuSE 8.1 -  /bin/sysfont:  </para>
            <para>You can use redhat 7.3 consolechars instead.</para>
          </listitem>
          <listitem>
            <para>SuSE 8.1 - /etc/init.d/hwscan:</para>
            <para>recommended disable, if you have to install new hardware and want to use it</para>
            <para>boot with standard kernel and start it manually</para>
          </listitem>
        </orderedlist>
      </sect2>
      <sect2 id="tweaks">
        <title>Tweaks needed</title>
        <para></para>
        <orderedlist>
          <listitem>
            <para>Mandrake 9.1 - /etc/init.d/numlock:</para>
            <para>You should change the lines including  "/dev/tty[0-8]" to " /dev/tty[0-7]"</para>
          </listitem>
          <listitem>
            <para>SuSE 8.1 - /etc/init.d/kbd:</para>
          </listitem>
        </orderedlist>
      </sect2>
    </sect1>
  </chapter>
  <chapter id="distro_spec">
    <title>Special notes on some distributions</title>
    <sect1 id="distro_spec-mdk">
      <title>Mandrake </title>
      <para>well almost everything is easy to accomplish</para>
      <para>(probably because i use it since 2-3 years at least)</para>
      <orderedlist>
        <listitem>
          <para>just the small tweak in /etc/init.d/numlock </para>
          <programlisting>--- /etc/init.d/numlock.orig	2003-04-11 00:58:55.000000000 +0200
+++ /etc/init.d/numlock	2003-03-19 13:03:30.000000000 +0100
@@ -21,14 +21,14 @@
 	echo
 	touch $SYSCONF_FILE
 	
-	for tty in /dev/tty[0-8]; do
+	for tty in /dev/tty[0-7]; do
 		setleds -D +num &lt; $tty
 	done

 	;;
   stop)
 	gprintf "Disabling numlocks on ttys: "
-	for tty in /dev/tty[0-8]; do
+	for tty in /dev/tty[0-7]; do
 		setleds -D -num &lt; $tty
 	done
 	echo_success</programlisting>
        </listitem>
      </orderedlist>
    </sect1>
    <sect1 id="distro_spec-rh">
      <title>Red Hat </title>
      <orderedlist>
        <listitem>
          <para>replacing sysfont with consolechars</para>
          <para>&lt; needs to be written &gt;</para>
          <para>rebuild console-tools-19990829-40.src.rpm  using : </para>
          <para><command>rpmbuild --rebuild console-tools-19990829-40.src.rpm </command></para>
          <para>( you can find the source rpm on rpmfind.net)</para>
          <para>and then install it:</para>
          <para><command>rpm -Uvh /usr/src/redhat/RPMS/i386/console-tools-19990829-40.i386.rpm </command></para>
          <para>i still seem to have some kind of problem, because i get all the time on console:</para>
          <para><computeroutput>findfont no such file or directory
unable to setfont xxx</computeroutput></para>
          <para>but the everything else seems OK.</para>
        </listitem>
      </orderedlist>
    </sect1>
    <sect1 id="distro_spec-deb">
      <title>Debian </title>
      <para>&lt; needs to be written &gt;</para>
      <para>&lt; no reports yet, i should ask Andreas &gt;</para>
    </sect1>
    <sect1 id="distro_spec-suse">
      <title>SuSE </title>
      <orderedlist>
        <listitem>
          <para>/etc/init.d/kbd</para>
          <para>add this line in the very beginning of the file</para>
          <programlisting>KBD_TTY="tty0 tty2 tty3 tty4 tty5 tty6 tty7"</programlisting>
          <para>after modifications</para>
          <programlisting>#! /bin/sh
# Copyright (c) 1995-2001 SuSE GmbH Nuernberg, Germany.
#
# Author:   Burchard Steinbild &lt;bs@suse.de&gt;
#           Werner Fink &lt;werner@suse.de&gt;
#
# /etc/init.d/kbd
#
#   and symbolic its link
#
# /sbin/rckbd
#
### BEGIN INIT INFO
# Provides:       kbd
# Required-Start: $remote_fs
# Required-Stop:
# X-SuSE-Should-Start:  fbset serial
# X-SuSE-Should-Stop:
# Default-Start:  1 2 3 5 S
# Default-Stop:
# Description:    Keyboard settings (don't disable!)
### END INIT INFO

. /etc/rc.status
. /etc/sysconfig/console
. /etc/sysconfig/keyboard

MACHINE=`/bin/uname -m 2&gt; /dev/null`
if [ "$MACHINE" = "sparc" -o "$MACHINE" = "sparc64" ]; then
   # Test if we have a serial console.
   (test -c /dev/tty1 &amp;&amp; &gt; /dev/tty1 ) &gt; /dev/null 2&gt;&amp;1 || exit 0
fi

# The variable NON_SUSE_KERNEL determines whether we need to chvt
# to a console before some console settings apply.
# We have no magic to find out about this (at boot time), so we
# leave it to the user to read this comment and put NON_SUSE_KERNEL="yes"
# into /etc/sysconfig/console

KBDBASE="/usr/share/kbd"

KBD_TTY="tty0 tty2 tty3 tty4 tty5 tty6 tty7"
KTABLE=${KEYTABLE%.map*}
KTABLE=${KTABLE##*/}
#
# first search the wanted keytable.
#
if [ $MACHINE = ppc -o $MACHINE = ppc64 ]; then
        test -f /proc/cpuinfo || mount -n -t proc proc /proc 2&gt;/dev/null
        while read line; do
......
......</programlisting>
        </listitem>
        <listitem>
          <para>replacing sysfont with consolechars</para>
          <para>&lt; needs to be written &gt;</para>
          <para>actually might not be needed, </para>
          <para>modifying /etc/init.d/kbd  solves the problem for me</para>
        </listitem>
        <listitem>
          <para>hwscan causes problems some time</para>
          <para>recommended disable, if you have to install new hardware and want to use it</para>
          <para>boot with standard kernel and start it manually</para>
        </listitem>
      </orderedlist>
    </sect1>
    <sect1 id="distro_spec-others">
      <title>xxx specific parts/ problems/ solutions</title>
      <para>&lt; needs to be written &gt;</para>
    </sect1>
  </chapter>
  <chapter id="final_words">
    <title>Final words</title>
    <para>You really got to the end? :) </para>
    <para>or just used the link? :(</para>
    <para>


</para>
    <para>Have some comments?</para>
    <para>-- send them to Svetoslav Slavtchev<email>galia (at) st-peter.stw.uni-erlangen.de</email></para>
    <para>Got troubles understanding the How-To? Some parts are not clear?</para>
    <para>-- drop a line to the above address</para>
    <para>Got problems configuring your system to run multiple independent X sessions,
using this How-To? </para>
    <para>-- send your problems to the above address</para>
    <para>You got it running !!! Congratulations !!!</para>
    <para>-- drop a line, give some details on your configuration and attach your XFree configuration files.</para>
  </chapter>
  <appendix id="app_vid_comp">
    <title>Video compatibility list</title>
    <para>this is a extract from the video compatibility list at the bruby home page</para>
    <sect1 id="app_vid_comp_fine">
      <title>Graphic card pairs/ triples/ ... which work perfectly </title>
      <sect2>
        <title id="app_vid_comp_x_orig">Modified X server not needed</title>
        <para></para>
        <para>Voodoo Graphics (glide) + Voodoo 3 (pci)(tdfx)</para>
        <para>Voodoo Graphics (glide) + Riva TNT2 M64 (agp)(nvidia)</para>
        <para></para>
      </sect2>
      <sect2>
        <title id="app_vid_comp_x_mod">Modified X server needed</title>
        <para></para>
        <para>ATI Radeon 7000(AGP)+ Matrox Mystique (PCI)</para>
        <para>AGP S3 Inc. 86c368[Trio 3D/2X]+Matrox MGA1064SG[Mystique] (PCI)</para>
        <para></para>
        <para>Nvidia cards</para>
        <para></para>
        <para>Riva TNT (PCI+PCI+AGP)</para>
        <para>Riva TNT2 M64 (pci)(nvidia) + Riva TNT2 M64 (pci)(nvidia)</para>
        <para>Nvidia GeForce2MX(PCI)+GeForce2MX(PCI)+GeForce2MX(PCI)+GeForce2MX(PCI)</para>
        <para></para>
        <para>Works fine. DRI + Nvidia GLX works too. </para>
        <para></para>
        <para>Voodoo 3 (pci)(tdfx) + Riva TNT2 M64 (agp)(nvidia)</para>
        <para>ATI Radeon 7500(AGP) + Nvidia TNT2(PCI)</para>
      </sect2>
    </sect1>
    <sect1 id="app_vid_comp_glitches">
      <title>Graphic card pairs/ triples/ ... which work, but there are some glitches </title>
      <itemizedlist>
        <listitem>
          <para>Generaly the X server driving the AGP card have to be started first</para>
        </listitem>
        <listitem>
          <para>AGP sever restart leads to system crash. Set in gdm.conf AllwaysRestartServer=false</para>
        </listitem>
        <listitem>
          <para>the new X server patch (XFree-4.3-prefbusid) fixes most of the problems</para>
          <para>the first and the last combination are reported to work without major problems with XFree86-prefbusid</para>
        </listitem>
      </itemizedlist>
      <para>Nividia GeForce4MX440(AGP)+TNT2M64(PCI)+TNT2M64(PCI)</para>
      <para>Matrox MGAG400(AGP)+Matrox MGA1064SG[Mystique]PCI</para>
      <para>Matrox MGAG550DH(AGP)+Riva TNTM64(PCI)</para>
      <para>Matrox MGAG550DH(AGP)+Geforce4 420(PCI)</para>
    </sect1>
  </appendix>
  <appendix id="examples">
    <title>Example configuration files</title>
    <para>for more examples visit:</para>
    <para><ulink url="http://varna.demon.co.uk/~svetlio/examples/">http://varna.demon.co.uk/~svetlio/examples/</ulink></para>
    <sect1 id="examples_xf_confs">
      <title>XFree86</title>
      <para></para>
      <sect2 id="examples_1st_xserver">
        <title>1st XFree server configuration file</title>
        <programlisting># File generated by XFdrake.

# **********************************************************************
# Refer to the XF86Config(4/5) man page for details about the format of
# this file.
# **********************************************************************

Section "Files"

    RgbPath	"/usr/X11R6/lib/X11/rgb"

# Multiple FontPath entries are allowed (they are concatenated together)
# By default, Mandrake 6.0 and later now use a font server independent of
# the X server to render fonts.


EndSection

# **********************************************************************
# Server flags section.
# **********************************************************************

Section "ServerFlags"

    # Uncomment this to cause a core dump at the spot where a signal is
    # received.  This may leave the console in an unusable state, but may
    # provide a better stack trace in the core dump to aid in debugging
    #NoTrapSignals

    # Uncomment this to disable the &lt;Crtl&gt;&lt;Alt&gt;&lt;BS&gt; server abort sequence
    # This allows clients to receive this key event.
    #DontZap

    # Uncomment this to disable the &lt;Crtl&gt;&lt;Alt&gt;&lt;KP_+&gt;/&lt;KP_-&gt; mode switching
    # sequences.  This allows clients to receive these key events.
    #DontZoom

    # This  allows  the  server  to start up even if the
    # mouse device can't be opened/initialised.
    AllowMouseOpenFail

EndSection

# **********************************************************************
# Input devices
# **********************************************************************

# **********************************************************************
# Keyboard section
# **********************************************************************

Section "InputDevice"

    Identifier "Keyboard1"
    Driver      "Keyboard"
    Option "AutoRepeat"  "250 30"

    Option "XkbRules" "xfree86"
    Option "XkbModel" "pc105"
    Option "XkbLayout" "de(nodeadkeys)"

EndSection

# **********************************************************************
# Pointer section
# **********************************************************************

Section "InputDevice"

    Identifier  "Mouse1"
    Driver      "mouse"
    Option "Protocol"    "IMPS/2"
#    Option "Device"      "/dev/psaux"
    Option "Device"      "/dev/input/mouse1"
    Option "ZAxisMapping" "4 5"

# ChordMiddle is an option for some 3-button Logitech mice
    Option "Emulate3Buttons"
#    Option "ChordMiddle"

EndSection



Section "Module"

# This loads the DBE extension module.
    Load	"dbe"
    Load	"GLcore"
#    Load	"dga"
    Load	"glx"
    Load	"extmod"
    Load	"dri"
# pass two from mga mailing-lists
#    Load	"pex5"
#    Load	"xie"
    Load	"bitmap"
    Load	"record"
    Load	"vbe"
    Load	"int10"
# end pass two mga mailing-lists


# This loads the Video for Linux module.
    Load        "v4l"


# This loads the miscellaneous extensions module, and disables
# initialisation of the XFree86-DGA extension within that module.

    SubSection	"extmod"
	#Option	"omit xfree86-dga"
    EndSubSection

# This loads the Type1 and FreeType font modules

    Load	"type1"
    Load	"freetype"
EndSection

Section "DRI"
    Mode	0666
EndSection

# **********************************************************************
# Monitor section
# **********************************************************************

# Any number of monitor sections may be present

Section "Monitor"
    Identifier "Generic|Monitor that can do 1600x1200 at 70 Hz"
    VendorName "Unknown"
    ModelName  "Unknown"


# HorizSync is in kHz unless units are specified.
# HorizSync may be a comma separated list of discrete values, or a
# comma separated list of ranges of values.
# NOTE: THE VALUES HERE ARE EXAMPLES ONLY.  REFER TO YOUR MONITOR'S
# USER MANUAL FOR THE CORRECT NUMBERS.
    HorizSync  30-98


# VertRefresh is in Hz unless units are specified.
# VertRefresh may be a comma separated list of discrete values, or a
# comma separated list of ranges of values.
# NOTE: THE VALUES HERE ARE EXAMPLES ONLY.  REFER TO YOUR MONITOR'S
# USER MANUAL FOR THE CORRECT NUMBERS.
    VertRefresh 50-160


# This is a set of extended mode timings typically used for laptop,
# TV fullscreen mode or DVD fullscreen output.
# These are available along with standard mode timings.

# Sony Vaio C1(X,XS,VE,VN)?
# 1024x480 @ 85.6 Hz, 48 kHz hsync
ModeLine "1024x480"    65.00 1024 1032 1176 1344   480  488  494  563 -hsync -vsync

# 768x576 @ 79 Hz, 50 kHz hsync
ModeLine "768x576"     50.00  768  832  846 1000   576  590  595  630
# 768x576 @ 100 Hz, 61.6 kHz hsync
ModeLine "768x576"     63.07  768  800  960 1024   576  578  590  616


EndSection


Section "Monitor"
    Identifier "monitor2"
    VendorName "Unknown"
    ModelName  "Unknown"

    HorizSync   30-98
    VertRefresh 50-160
EndSection


Section "Monitor"
    Identifier "monitor3"
    VendorName "Unknown"
    ModelName  "Unknown"

    HorizSync   31.5-60.0
    VertRefresh 56.0-75.0
EndSection



# **********************************************************************
# Graphics device section
# **********************************************************************

Section "Device"
    Identifier "Generic VGA"
    Driver     "vga"
EndSection


Section "Device"
    Identifier  "g550_1"
    VendorName  ""
    BoardName   ""
    Driver      "mga"
    # Clock lines


    # Uncomment following option if you see a big white block        
    # instead of the cursor!
    #    Option      "sw_cursor"
    Option	"AGPMode" "4"
#    Option      "HWCursor" "Off"
    Option      "HWCursor" "On"
    Option	"MGASDRAM" "On"
    Option      "DPMS"  "Off"
    # Screen 0
    BusID       "PCI:1:0:0"
EndSection


Section "Device"
    Identifier  "g550_2"
    VendorName  ""
    BoardName   ""
    Driver      "mga"
    # Clock lines


    # Uncomment following option if you see a big white block        
    # instead of the cursor!
    #    Option      "sw_cursor"
    Option	"AGPMode" "4"
    Option	"MGASDRAM" "On"
#    Option      "HWCursor" "Off"
    Option      "HWCursor" "On"
    Option      "DPMS"  "Off"
    # Screen 1
    BusID       "PCI:1:0:0"
EndSection



# **********************************************************************
# Screen sections
# **********************************************************************

Section "Screen"
    Identifier "screen1"
    Device      "g550_1"
    Monitor     "monitor2"
    DefaultColorDepth 16
    Subsection "Display"
        Depth       8
        Modes       "1280x1024" "1024x768" "800x600" "640x480"
        ViewPort    0 0
    EndSubsection
    Subsection "Display"
        Depth       15
        Modes       "1280x1024" "1024x768" "800x600" "640x480"
        ViewPort    0 0
    EndSubsection
    Subsection "Display"
        Depth       16
        Modes       "1280x1024" "1024x768" "800x600" "640x480"
        ViewPort    0 0
    EndSubsection
    Subsection "Display"
        Depth       24
        Modes       "1280x1024" "1024x768" "800x600" "640x480"
        ViewPort    0 0
    EndSubsection
EndSection


Section "ServerLayout"
    Identifier "layout1"
    Screen     "screen1"

    InputDevice "Mouse1" "CorePointer"
    InputDevice "Keyboard1" "CoreKeyboard"
EndSection</programlisting>
      </sect2>
      <sect2 id="examples_2nd_xserver">
        <title>2nd XFree server configuration file</title>
        <programlisting># File generated by XFdrake.

# **********************************************************************
# Refer to the XF86Config(4/5) man page for details about the format of
# this file.
# **********************************************************************

Section "Files"

    RgbPath	"/usr/X11R6/lib/X11/rgb"
    ModulePath  "/usr/X11R6/libNV/modules"
# Multiple FontPath entries are allowed (they are concatenated together)
# By default, Mandrake 6.0 and later now use a font server independent of
# the X server to render fonts.


EndSection

# **********************************************************************
# Server flags section.
# **********************************************************************

Section "ServerFlags"

    # Uncomment this to cause a core dump at the spot where a signal is
    # received.  This may leave the console in an unusable state, but may
    # provide a better stack trace in the core dump to aid in debugging
    #NoTrapSignals

    # Uncomment this to disable the &lt;Crtl&gt;&lt;Alt&gt;&lt;BS&gt; server abort sequence
    # This allows clients to receive this key event.
    #DontZap

    # Uncomment this to disable the &lt;Crtl&gt;&lt;Alt&gt;&lt;KP_+&gt;/&lt;KP_-&gt; mode switching
    # sequences.  This allows clients to receive these key events.
    #DontZoom

    # This  allows  the  server  to start up even if the
    # mouse device can't be opened/initialised.
    AllowMouseOpenFail

EndSection

# **********************************************************************
# Input devices
# **********************************************************************

# **********************************************************************
# Keyboard section
# **********************************************************************

Section "InputDevice"

    Identifier "Keyboard1"
    Driver      "Keyboard"
    Option "AutoRepeat"  "250 30"

    Option "XkbRules" "xfree86"
    Option "XkbModel" "pc105"
    Option "XkbLayout" "de(nodeadkeys)"

EndSection

# **********************************************************************
# Pointer section
# **********************************************************************

Section "InputDevice"

    Identifier  "Mouse1"
    Driver      "mouse"
    Option "Protocol"    "PS/2"
    Option "Device"      "/dev/input/mouse0"
    Option "Emulate3Buttons"
#    Option "ZAxisMapping" "4 5"

# ChordMiddle is an option for some 3-button Logitech mice

#    Option "ChordMiddle"

EndSection


Section "Module"

# This loads the DBE extension module.
    Load	"dbe"
    Load	"glx"
    Load	"vbe"
    Load	"int10"

# This loads the Video for Linux module.
#    Load        "v4l"


# This loads the miscellaneous extensions module, and disables
# initialisation of the XFree86-DGA extension within that module.

    SubSection	"extmod"
	#Option	"omit xfree86-dga"
    EndSubSection

# This loads the Type1 and FreeType font modules

    Load	"type1"
    Load	"freetype"
EndSection

#Section "DRI"
#    Mode	0666
#EndSection

# **********************************************************************
# Monitor section
# **********************************************************************

# Any number of monitor sections may be present

Section "Monitor"
    Identifier "Generic|Monitor that can do 1600x1200 at 70 Hz"
    VendorName "Unknown"
    ModelName  "Unknown"


# HorizSync is in kHz unless units are specified.
# HorizSync may be a comma separated list of discrete values, or a
# comma separated list of ranges of values.
# NOTE: THE VALUES HERE ARE EXAMPLES ONLY.  REFER TO YOUR MONITOR'S
# USER MANUAL FOR THE CORRECT NUMBERS.
    HorizSync  30-98


# VertRefresh is in Hz unless units are specified.
# VertRefresh may be a comma separated list of discrete values, or a
# comma separated list of ranges of values.
# NOTE: THE VALUES HERE ARE EXAMPLES ONLY.  REFER TO YOUR MONITOR'S
# USER MANUAL FOR THE CORRECT NUMBERS.
    VertRefresh 50-160


# This is a set of extended mode timings typically used for laptop,
# TV fullscreen mode or DVD fullscreen output.
# These are available along with standard mode timings.

# Sony Vaio C1(X,XS,VE,VN)?
# 1024x480 @ 85.6 Hz, 48 kHz hsync
ModeLine "1024x480"    65.00 1024 1032 1176 1344   480  488  494  563 -hsync -vsync

# 768x576 @ 79 Hz, 50 kHz hsync
ModeLine "768x576"     50.00  768  832  846 1000   576  590  595  630
# 768x576 @ 100 Hz, 61.6 kHz hsync
ModeLine "768x576"     63.07  768  800  960 1024   576  578  590  616


EndSection


Section "Monitor"
    Identifier "monitor2"
    VendorName "Unknown"
    ModelName  "Unknown"

#    HorizSync   30-98
#    VertRefresh 50-160

    HorizSync   30-50
    VertRefresh 50-120
EndSection



# **********************************************************************
# Graphics device section
# **********************************************************************

Section "Device"
    Identifier "Generic VGA"
    Driver     "vga"
EndSection

Section "Device"
    Identifier  "nv"
    VendorName  ""
    BoardName   ""
    Driver      "nvidia"
    # Clock lines


    # Uncomment following option if you see a big white block
    # instead of the cursor!
    #    Option      "sw_cursor"
    Option	"UseInt10Module" "off"
    Option	"ConnectedMonitor" "CRT"
    Option	"IgnoreEDID" "off"
    Option	"HWCursor" "on"

    Option      "DPMS"  "Off"
    Option	"NoLogo" "On"
    BusID       "PCI:0:10:0"
EndSection


# **********************************************************************
# Screen sections
# **********************************************************************

Section "Screen"
    Identifier "screen1"
    Device      "nv"
    Monitor     "monitor2"
    DefaultColorDepth 24
    Subsection "Display"
        Depth       8
        Modes       "800x600" "640x480"
        ViewPort    0 0
    EndSubsection
    Subsection "Display"
        Depth       15
        Modes       "800x600" "640x480"
        ViewPort    0 0
    EndSubsection
    Subsection "Display"
        Depth       16
        Modes       "800x600" "640x480"
        ViewPort    0 0
    EndSubsection
    Subsection "Display"
        Depth       24
        Modes       "1024x768" "800x600" "640x480"
        ViewPort    0 0
    EndSubsection
    Subsection "Display"
        Depth       32
        Modes       "1280x1024" "800x600" "640x480"
        ViewPort    0 0
    EndSubsection
EndSection


Section "ServerLayout"
    Identifier "layout1"
    Screen     "screen1"

    InputDevice "Mouse1" "CorePointer"

    InputDevice "Keyboard1" "CoreKeyboard"

EndSection
</programlisting>
      </sect2>
    </sect1>
    <sect1 id="examples_dm">
      <title>Display managers</title>
      <para></para>
      <sect2 id="examples_xdm_kdm">
        <title>xdm and kdm</title>
        <para><filename>/etc/X11/xdm/Xservers.0</filename></para>
        <programlisting># $XConsortium: Xserv.ws.cpp,v 1.3 93/09/28 14:30:30 gildea Exp $
#
#
# $XFree86: xc/programs/xdm/config/Xserv.ws.cpp,v 1.1.1.1.12.2 1998/10/04 15:23:14 hohndel Exp $
#
# Xservers file, workstation prototype
#
# This file should contain an entry to start the server on the
# local display; if you have more than one display (not screen),
# you can add entries to the list (one per line).  If you also
# have some X terminals connected which do not support XDMCP,
# you can add them here as well.  Each X terminal line should
# look like:
#	XTerminalName:0 foreign
#
:0 local /bin/nice -n -10 /usr/X11R6/bin/X -deferglyphs 16</programlisting>
        <para><filename>/etc/X11/xdm/Xservers.1</filename></para>
        <programlisting># $XConsortium: Xserv.ws.cpp,v 1.3 93/09/28 14:30:30 gildea Exp $
#
#
# $XFree86: xc/programs/xdm/config/Xserv.ws.cpp,v 1.1.1.1.12.2 1998/10/04 15:23:14 hohndel Exp $
#
# Xservers file, workstation prototype
#
# This file should contain an entry to start the server on the
# local display; if you have more than one display (not screen),
# you can add entries to the list (one per line).  If you also
# have some X terminals connected which do not support XDMCP,
# you can add them here as well.  Each X terminal line should
# look like:
#	XTerminalName:0 foreign
#
:0 local /bin/nice -n -10 /usr/X11R6/bin/X0 :0 -deferglyphs 16 vt7
:1 local /bin/nice -n -10 /usr/X11R6/bin/X1 :1 -xf86config /etc/X11/XF86Config-4.X1 -deferglyphs 16 vt9
</programlisting>
        <para>not really used by me</para>
        <para><filename>/etc/X11/xdm/Xservers.2</filename></para>
        <programlisting># $XConsortium: Xserv.ws.cpp,v 1.3 93/09/28 14:30:30 gildea Exp $
#
#
# $XFree86: xc/programs/xdm/config/Xserv.ws.cpp,v 1.1.1.1.12.2 1998/10/04 15:23:14 hohndel Exp $
#
# Xservers file, workstation prototype
#
# This file should contain an entry to start the server on the
# local display; if you have more than one display (not screen),
# you can add entries to the list (one per line).  If you also
# have some X terminals connected which do not support XDMCP,
# you can add them here as well.  Each X terminal line should
# look like:
#	XTerminalName:0 foreign
#
:0 local /bin/nice -n -10 /usr/X11R6/bin/X0 :0 -deferglyphs 16 vt7
:1 local /bin/nice -n -10 /usr/X11R6/bin/X1 :1 -xf86config /etc/X11/XF86Config-4.X1 -deferglyphs 16 vt9
:2 local /bin/nice -n -10 /usr/X11R6/bin/X2 :2 -xf86config /etc/X11/XF86Config-4.X2 -deferglyphs 16 vt17
</programlisting>
      </sect2>
      <sect2 id="examples_gdm">
        <title>gdm</title>
        <para><filename>/etc/X11/gdm/gdm.conf.0</filename></para>
        <programlisting># GDM Configuration file.  You can use gdmsetup program to graphically
# edit this, or you can optionally just edit this file by hand.  Note that
# gdmsetup does not tweak every option here, just the ones most users
# would care about.  Rest is for special setups and distro specific
# tweaks.  If you edit this file, you should send the HUP or USR1 signal to
# the daemon so that it restarts: (Assuming you have not changed PidFile)
#   kill -USR1 `cat /var/run/gdm.pid`
# (HUP will make gdm restart immediately while USR1 will make gdm not kill
# existing sessions and will only restart gdm after all users log out)
#
# You can also use the gdm-restart and gdm-safe-restart scripts which just
# do the above for you.
#
# Have fun! - George

[daemon]
# Automatic login, if true the first local screen will automatically logged
# in as user as set with AutomaticLogin key.
AutomaticLoginEnable=false
AutomaticLogin=
# Timed login, useful for kiosks.  Log in a certain user after a certain
# amount of time
TimedLoginEnable=false
TimedLogin=
TimedLoginDelay=30
# A comma separated list of users that will be logged in without having
# to authenticate on local screens (not over xdmcp).  Note that 'root'
# is ignored and will always have to authenticate.
LocalNoPasswordUsers=
# If you are having trouble with using a single server for a long time and
# want gdm to kill/restart the server, turn this on
AlwaysRestartServer=false
# The gdm configuration program that is run from the login screen, you should
# probably leave this alone
Configurator=/usr/sbin/gdmsetup --disable-sound --disable-crash-dialog
GnomeDefaultSession=/usr/share/gnome/default.session
# The chooser program.  Must output the chosen host on stdout, probably you
# should leave this alone
Chooser=/usr/bin/gdmchooser
# Default path to set.  The profile scripts will likely override this
DefaultPath=/bin:/usr/bin:/usr/bin/X11:/usr/X11R6/bin:/usr/local/bin:/usr/bin
# Default path for root.  The profile scripts will likely override this
RootPath=/sbin:/usr/sbin:/bin:/usr/bin:/usr/bin/X11:/usr/X11R6/bin:/usr/local/bin:/usr/bin
DisplayInitDir=/etc/X11/gdm/Init
# Greeter for local (non-xdmcp) logins.  Change gdmlogin to gdmgreeter to
# get the new graphical greeter.
Greeter=/usr/bin/gdmgreeter
# Greeter for xdmcp logins, usually you want a less graphically intensive
# greeter here so it's better to leave this with gdmlogin
RemoteGreeter=/usr/bin/gdmlogin
# User and group that gdm should run as.  Probably should be gdm and gdm and
# you should create these user and group.  Anyone found running this as
# someone too privilaged will get a kick in the ass.  This should have
# access to only the gdm directories and files.
User=gdm
Group=gdm
# To try to kill all clients started at greeter time or in the Init script.
# doesn't always work, only if those clients have a window of their own
KillInitClients=true
LogDir=/var/lib/gdm
# You should probably never change this value unless you have a weird setup
PidFile=/var/run/gdm.pid
PostSessionScriptDir=/etc/X11/gdm/PostSession/
PreSessionScriptDir=/etc/X11/gdm/PreSession/
# Distributions:  If you have some script that runs an X server in say
# VGA mode, allowing a login, could you please send it to me?
FailsafeXServer=
# if X keeps crashing on us we run this script.  The default one does a bunch
# of cool stuff to figure out what to tell the user and such and can
# run an X configuration program.
XKeepsCrashing=/etc/X11/gdm/XKeepsCrashing
# Reboot, Halt and suspend commands, you can add different commands
# separated by a semicolon and gdm will use the first one it can find
RebootCommand=/sbin/shutdown -r now;/usr/sbin/shutdown -r now
HaltCommand=/usr/bin/poweroff;/sbin/poweroff;/sbin/shutdown -h now;/usr/sbin/shutdown -h now
SuspendCommand=
# Probably should not touch the below this is the standard setup
ServAuthDir=/var/lib/gdm
SessionDir=/etc/X11/gdm/Sessions/
# Better leave this blank and HOME will be used.  You can use syntax ~/ below
# to indicate home directory of the user
UserAuthDir=
# Fallback if home directory not writable
UserAuthFBDir=/tmp
UserAuthFile=.Xauthority
# The X server to use if we can't figure out what else to run.
StandardXServer=/usr/X11R6/bin/X
# The maximum number of flexible X servers to run.
FlexibleXServers=5
# the X nest command
Xnest=/usr/X11R6/bin/Xnest -name Xnest
# Automatic VT allocation.  Right now only works on Linux.  This way
# we force X to use specific vts.  turn VTAllocation to false if this
# is causing problems.
FirstVT=7
VTAllocation=true

[security]
# If any distributions ship with this one off, they should be shot
# this is only local, so it's only for say kiosk use, when you
# want to minimize possibility of breakin
AllowRoot=true
# If you want to be paranoid, turn this one off
AllowRemoteRoot=true
# This will allow remote timed login
AllowRemoteAutoLogin=false
# 0 is the most anal, 1 allows group write permissions, 2 allows all write permissions
RelaxPermissions=0
RetryDelay=3
# Maximum size of a file we wish to read.  This makes it hard for a user to DoS us
# by using a large file.
UserMaxFile=65536
# Maximum size of the session file.  This is larger because it matters less as we
# never keep it all in memory.  Just has an upper limit so that we don't go into too
# long of a loop
SessionMaxFile=524388

# XDMCP is the protocol that allows remote login.  If you want to log into
# gdm remotely (I'd never turn this on on open network, use ssh for such
# remote usage that).  You can then run X with -query &lt;thishost&gt; to log in,
# or -indirect &lt;thishost&gt; to run a chooser.  Look for the 'Terminal' server
# type at the bottom of this config file.
[xdmcp]
# Distributions: Ship with this off.  It is never a safe thing to leave
# out on the net.  Alternatively you can set up /etc/hosts.allow and
# /etc/hosts.deny to only allow say local access.
Enable=false
# Honour indirect queries, we run a chooser for these, and then redirect
# the user to the chosen host.  Otherwise we just log the user in locally.
HonorIndirect=true
# Maximum pending requests
MaxPending=4
MaxPendingIndirect=4
# Maximum open XDMCP sessions at any point in time
MaxSessions=16
# Maximum wait times
MaxWait=15
MaxWaitIndirect=15
# How many times can a person log in from a single host.  Usually better to
# keep at 1 to fend off DoS attacks by running many logins from a single
# host
DisplaysPerHost=1
# The port.  177 is the standard port so better keep it that way
Port=177
# Willing script, none is shipped and by default we'll send
# hostname system id.  But if you supply something here, the
# output of this script will be sent as status of this host so that
# the chooser can display it.  You could for example send load,
# or mail details for some user, or some such.
Willing=/etc/X11/gdm/Xwilling

[gui]
# The 'theme'.  By default we're using the default gtk theme
# Of course assuming that gtk got installed in the same prefix,
# if not change this.
GtkRC=/usr/share/themes/Default/gtk/gtkrc
# Maximum size of an icon, larger icons are scaled down
MaxIconWidth=128
MaxIconHeight=128

[greeter]
# Greeter has a nice title bar that the user can move
TitleBar=true
# Configuration is available from the system menu of the greeter
ConfigAvailable=true
# Face browser is enabled.  This only works currently for the
# standard greeter as it is not yet enabled in the graphical greeter.
Browser=true
# The default picture in the browser
DefaultFace=/usr/share/mdk/faces/default.png
# These are things excluded from the face browser, not from logging in
Exclude=bin,daemon,adm,lp,sync,shutdown,halt,mail,news,uucp,operator,nobody,gdm,postgres,pvm,rpm
# As an alternative to the above this is the minimum uid to show
MinimalUID=500
# If user or user.png exists in this dir it will be used as his picture
GlobalFaceDir=/usr/share/faces/
# Icon we use
Icon=/usr/share/pixmaps/gdm.png
# File which contains the locale we show to the user.  Likely you want to use
# the one shipped with gdm and edit it.  It is not a standard locale.alias file,
# although gdm will be able to read a standard locale.alias file as well.
LocaleFile=/etc/X11/gdm/locale.alias
# Logo shown in the standard greeter
Logo=/usr/share/pixmaps/gdm-screen.png
# The standard greeter should shake if a user entered the wrong username or
# password.  Kind of cool looking
Quiver=true
# The system menu is shown in the greeter
SystemMenu=true
# Note to distributors, if you wish to have a different Welcome string
# and wish to have this translated you can have entries such as
# Welcome[cs]=Vitejte na %n
# Just make sure the string is in utf-8
Welcome=Welcome to %n
# Don't allow user to move the standard greeter window.  Only makes sense
# if TitleBar is on
LockPosition=false
# Set a position rather then just centering the window.  If you enter
# negative values for the position it is taken as an offset from the
# right or bottom edge.
SetPosition=false
PositionX=0
PositionY=0
# Xinerama screen we use to display the greeter on.  Not for true
# multihead, currently only works for Xinerama.
XineramaScreen=0
# Background settings for the standard greeter:
# Type can be 0=None, 1=Image, 2=Color
BackgroundType=2
BackgroundImage=
BackgroundScaleToFit=true
BackgroundColor=#21449c
# XDMCP session should only get a color, this is the sanest setting since
# you don't want to take up too much bandwidth
BackgroundRemoteOnlyColor=true
# Program to run to draw the background in the standard greeter.  Perhaps
# something like an xscreensaver hack or some such.
BackgroundProgram=
# if this is true then the background program is run always, otherwise
# it is only run when the BackgroundType is 0 (None)
RunBackgroundProgramAlways=false
# Show the chooser (you can choose a specific saved gnome session) session
ShowGnomeChooserSession=false
# Show the Failsafe sessions.  These are much MUCH nicer (focus for xterm for
# example) and more failsafe then those supplied by scripts so distros should
# use this rather then just running an xterm from a script.
ShowGnomeFailsafeSession=false
ShowXtermFailsafeSession=false
# Always use 24 hour clock no matter what the locale.
Use24Clock=false
# Use circles in the password field.  Looks kind of cool actually
UseCirclesInEntry=false
# These two keys are for the new greeter.  Circles is the standard
# shipped theme
GraphicalTheme=mdk
GraphicalThemeDir=/usr/share/gdm/themes/

# The chooser is what's displayed when a user wants an indirect XDMCP
# session
[chooser]
# Default image for hosts
DefaultHostImg=/usr/share/pixmaps/nohost.png
# Directory with host images, they are named by the hosts: host or host.png
HostImageDir=/usr/share/hosts/
# Time we scan for hosts (well only the time we tell the user we are
# scanning actually)
ScanTime=3
# A comma separated lists of hosts to automatically add (if they answer to
# a query of course).  You can use this to reach hosts that broadcast cannot
# reach.
Hosts=
# Broadcast a query to get all hosts on the current network that answer
Broadcast=true

[debug]
# This will enable debugging into the syslog, usually not neccessary
# and it creates a LOT of spew of random stuff to the syslog.  However it
# can be useful in determining when something is going very wrong.
Enable=false

[servers]
# These are the standard servers.  You can add as many you want here
# and they will always be started.  Each line must start with a unique
# number and that will be the display number of that server.  Usually just
# the 0 server is used.
0=Standard
#1=Standard
# Note the VTAllocation and FirstVT keys on linux.  Don't add any vt&lt;number&gt;
# arguments if VTAllocation is on, and set FirstVT to be the first vt
# available that your gettys don't grab (gettys are usually dumb and grab
# even a vt that has already been taken).  Using 7 will work pretty much for
# all linux distributions.  VTAllocation is not currently implemented on
# anything but linux since I don't own any non-linux systems.  Feel free to
# send patches.  X servers will just not get any extra arguments then.
#
#Note: If you want to run an X terminal you could add an X server such as this
#0=Terminal -query serverhostname
# or for a chooser (optionally serverhostname could be localhost)
#0=Terminal -indirect serverhostname

# Definition of the standard X server.
[server-Standard]
name=Standard server
command=/usr/X11R6/bin/X0 :0 -deferglyphs 16 vt7

flexible=true

# To use this server type you should add -query host or -indirect host
# to the command line
[server-Terminal]
name=Terminal server
# Add -terminate to make things behave more nicely
command=/usr/X11R6/bin/X -terminate
# Make this not appear in the flexible servers (we need extra params
# anyway, and terminate would be bad for xdmcp)
flexible=false
# Not local, we do not handle the logins for this X server
handled=false</programlisting>
        <para><filename>/etc/X11/gdm/gdm.conf.1</filename></para>
        <programlisting># GDM Configuration file.  You can use gdmsetup program to graphically
# edit this, or you can optionally just edit this file by hand.  Note that
# gdmsetup does not tweak every option here, just the ones most users
# would care about.  Rest is for special setups and distro specific
# tweaks.  If you edit this file, you should send the HUP or USR1 signal to
# the daemon so that it restarts: (Assuming you have not changed PidFile)
#   kill -USR1 `cat /var/run/gdm.pid`
# (HUP will make gdm restart immediately while USR1 will make gdm not kill
# existing sessions and will only restart gdm after all users log out)
#
# You can also use the gdm-restart and gdm-safe-restart scripts which just
# do the above for you.
#
# Have fun! - George

[daemon]
# Automatic login, if true the first local screen will automatically logged
# in as user as set with AutomaticLogin key.
AutomaticLoginEnable=false
AutomaticLogin=
# Timed login, useful for kiosks.  Log in a certain user after a certain
# amount of time
TimedLoginEnable=false
TimedLogin=
TimedLoginDelay=30
# A comma separated list of users that will be logged in without having
# to authenticate on local screens (not over xdmcp).  Note that 'root'
# is ignored and will always have to authenticate.
LocalNoPasswordUsers=
# If you are having trouble with using a single server for a long time and
# want gdm to kill/restart the server, turn this on
AlwaysRestartServer=false
# The gdm configuration program that is run from the login screen, you should
# probably leave this alone
Configurator=/usr/sbin/gdmsetup --disable-sound --disable-crash-dialog
GnomeDefaultSession=/usr/share/gnome/default.session
# The chooser program.  Must output the chosen host on stdout, probably you
# should leave this alone
Chooser=/usr/bin/gdmchooser
# Default path to set.  The profile scripts will likely override this
DefaultPath=/bin:/usr/bin:/usr/bin/X11:/usr/X11R6/bin:/usr/local/bin:/usr/bin
# Default path for root.  The profile scripts will likely override this
RootPath=/sbin:/usr/sbin:/bin:/usr/bin:/usr/bin/X11:/usr/X11R6/bin:/usr/local/bin:/usr/bin
DisplayInitDir=/etc/X11/gdm/Init
# Greeter for local (non-xdmcp) logins.  Change gdmlogin to gdmgreeter to
# get the new graphical greeter.
Greeter=/usr/bin/gdmgreeter
# Greeter for xdmcp logins, usually you want a less graphically intensive
# greeter here so it's better to leave this with gdmlogin
RemoteGreeter=/usr/bin/gdmlogin
# User and group that gdm should run as.  Probably should be gdm and gdm and
# you should create these user and group.  Anyone found running this as
# someone too privilaged will get a kick in the ass.  This should have
# access to only the gdm directories and files.
User=gdm
Group=gdm
# To try to kill all clients started at greeter time or in the Init script.
# doesn't always work, only if those clients have a window of their own
KillInitClients=true
LogDir=/var/lib/gdm
# You should probably never change this value unless you have a weird setup
PidFile=/var/run/gdm.pid
PostSessionScriptDir=/etc/X11/gdm/PostSession/
PreSessionScriptDir=/etc/X11/gdm/PreSession/
# Distributions:  If you have some script that runs an X server in say
# VGA mode, allowing a login, could you please send it to me?
FailsafeXServer=
# if X keeps crashing on us we run this script.  The default one does a bunch
# of cool stuff to figure out what to tell the user and such and can
# run an X configuration program.
XKeepsCrashing=/etc/X11/gdm/XKeepsCrashing
# Reboot, Halt and suspend commands, you can add different commands
# separated by a semicolon and gdm will use the first one it can find
RebootCommand=/sbin/shutdown -r now;/usr/sbin/shutdown -r now
HaltCommand=/usr/bin/poweroff;/sbin/poweroff;/sbin/shutdown -h now;/usr/sbin/shutdown -h now
SuspendCommand=
# Probably should not touch the below this is the standard setup
ServAuthDir=/var/lib/gdm
SessionDir=/etc/X11/gdm/Sessions/
# Better leave this blank and HOME will be used.  You can use syntax ~/ below
# to indicate home directory of the user
UserAuthDir=
# Fallback if home directory not writable
UserAuthFBDir=/tmp
UserAuthFile=.Xauthority
# The X server to use if we can't figure out what else to run.
StandardXServer=/usr/X11R6/bin/X0
# The maximum number of flexible X servers to run.
FlexibleXServers=5
# the X nest command
Xnest=/usr/X11R6/bin/Xnest -name Xnest
# Automatic VT allocation.  Right now only works on Linux.  This way
# we force X to use specific vts.  turn VTAllocation to false if this
# is causing problems.
FirstVT=7
VTAllocation=false

[security]
# If any distributions ship with this one off, they should be shot
# this is only local, so it's only for say kiosk use, when you
# want to minimize possibility of breakin
AllowRoot=true
# If you want to be paranoid, turn this one off
AllowRemoteRoot=true
# This will allow remote timed login
AllowRemoteAutoLogin=false
# 0 is the most anal, 1 allows group write permissions, 2 allows all write permissions
RelaxPermissions=0
RetryDelay=3
# Maximum size of a file we wish to read.  This makes it hard for a user to DoS us
# by using a large file.
UserMaxFile=65536
# Maximum size of the session file.  This is larger because it matters less as we
# never keep it all in memory.  Just has an upper limit so that we don't go into too
# long of a loop
SessionMaxFile=524388

# XDMCP is the protocol that allows remote login.  If you want to log into
# gdm remotely (I'd never turn this on on open network, use ssh for such
# remote usage that).  You can then run X with -query &lt;thishost&gt; to log in,
# or -indirect &lt;thishost&gt; to run a chooser.  Look for the 'Terminal' server
# type at the bottom of this config file.
[xdmcp]
# Distributions: Ship with this off.  It is never a safe thing to leave
# out on the net.  Alternatively you can set up /etc/hosts.allow and
# /etc/hosts.deny to only allow say local access.
Enable=false
# Honour indirect queries, we run a chooser for these, and then redirect
# the user to the chosen host.  Otherwise we just log the user in locally.
HonorIndirect=true
# Maximum pending requests
MaxPending=4
MaxPendingIndirect=4
# Maximum open XDMCP sessions at any point in time
MaxSessions=16
# Maximum wait times
MaxWait=15
MaxWaitIndirect=15
# How many times can a person log in from a single host.  Usually better to
# keep at 1 to fend off DoS attacks by running many logins from a single
# host
DisplaysPerHost=1
# The port.  177 is the standard port so better keep it that way
Port=177
# Willing script, none is shipped and by default we'll send
# hostname system id.  But if you supply something here, the
# output of this script will be sent as status of this host so that
# the chooser can display it.  You could for example send load,
# or mail details for some user, or some such.
Willing=/etc/X11/gdm/Xwilling

[gui]
# The 'theme'.  By default we're using the default gtk theme
# Of course assuming that gtk got installed in the same prefix,
# if not change this.
GtkRC=/usr/share/themes/Default/gtk/gtkrc
# Maximum size of an icon, larger icons are scaled down
MaxIconWidth=128
MaxIconHeight=128

[greeter]
# Greeter has a nice title bar that the user can move
TitleBar=true
# Configuration is available from the system menu of the greeter
ConfigAvailable=true
# Face browser is enabled.  This only works currently for the
# standard greeter as it is not yet enabled in the graphical greeter.
Browser=true
# The default picture in the browser
DefaultFace=/usr/share/mdk/faces/default.png
# These are things excluded from the face browser, not from logging in
Exclude=bin,daemon,adm,lp,sync,shutdown,halt,mail,news,uucp,operator,nobody,gdm,postgres,pvm,rpm
# As an alternative to the above this is the minimum uid to show
MinimalUID=500
# If user or user.png exists in this dir it will be used as his picture
GlobalFaceDir=/usr/share/faces/
# Icon we use
Icon=/usr/share/pixmaps/gdm.png
# File which contains the locale we show to the user.  Likely you want to use
# the one shipped with gdm and edit it.  It is not a standard locale.alias file,
# although gdm will be able to read a standard locale.alias file as well.
LocaleFile=/etc/X11/gdm/locale.alias
# Logo shown in the standard greeter
Logo=/usr/share/pixmaps/gdm-screen.png
# The standard greeter should shake if a user entered the wrong username or
# password.  Kind of cool looking
Quiver=true
# The system menu is shown in the greeter
SystemMenu=true
# Note to distributors, if you wish to have a different Welcome string
# and wish to have this translated you can have entries such as
# Welcome[cs]=Vitejte na %n
# Just make sure the string is in utf-8
Welcome=Welcome to %n
# Don't allow user to move the standard greeter window.  Only makes sense
# if TitleBar is on
LockPosition=false
# Set a position rather then just centering the window.  If you enter
# negative values for the position it is taken as an offset from the
# right or bottom edge.
SetPosition=false
PositionX=0
PositionY=0
# Xinerama screen we use to display the greeter on.  Not for true
# multihead, currently only works for Xinerama.
XineramaScreen=0
# Background settings for the standard greeter:
# Type can be 0=None, 1=Image, 2=Color
BackgroundType=2
BackgroundImage=
BackgroundScaleToFit=true
BackgroundColor=#21449c
# XDMCP session should only get a color, this is the sanest setting since
# you don't want to take up too much bandwidth
BackgroundRemoteOnlyColor=true
# Program to run to draw the background in the standard greeter.  Perhaps
# something like an xscreensaver hack or some such.
BackgroundProgram=
# if this is true then the background program is run always, otherwise
# it is only run when the BackgroundType is 0 (None)
RunBackgroundProgramAlways=false
# Show the chooser (you can choose a specific saved gnome session) session
ShowGnomeChooserSession=false
# Show the Failsafe sessions.  These are much MUCH nicer (focus for xterm for
# example) and more failsafe then those supplied by scripts so distros should
# use this rather then just running an xterm from a script.
ShowGnomeFailsafeSession=false
ShowXtermFailsafeSession=false
# Always use 24 hour clock no matter what the locale.
Use24Clock=false
# Use circles in the password field.  Looks kind of cool actually
UseCirclesInEntry=false
# These two keys are for the new greeter.  Circles is the standard
# shipped theme
GraphicalTheme=mdk
GraphicalThemeDir=/usr/share/gdm/themes/

# The chooser is what's displayed when a user wants an indirect XDMCP
# session
[chooser]
# Default image for hosts
DefaultHostImg=/usr/share/pixmaps/nohost.png
# Directory with host images, they are named by the hosts: host or host.png
HostImageDir=/usr/share/hosts/
# Time we scan for hosts (well only the time we tell the user we are
# scanning actually)
ScanTime=3
# A comma separated lists of hosts to automatically add (if they answer to
# a query of course).  You can use this to reach hosts that broadcast cannot
# reach.
Hosts=
# Broadcast a query to get all hosts on the current network that answer
Broadcast=true

[debug]
# This will enable debugging into the syslog, usually not neccessary
# and it creates a LOT of spew of random stuff to the syslog.  However it
# can be useful in determining when something is going very wrong.
Enable=false

[servers]
# These are the standard servers.  You can add as many you want here
# and they will always be started.  Each line must start with a unique
# number and that will be the display number of that server.  Usually just
# the 0 server is used.
0=Standard
1=2nd

# Note the VTAllocation and FirstVT keys on linux.  Don't add any vt&lt;number&gt;
# arguments if VTAllocation is on, and set FirstVT to be the first vt
# available that your gettys don't grab (gettys are usually dumb and grab
# even a vt that has already been taken).  Using 7 will work pretty much for
# all linux distributions.  VTAllocation is not currently implemented on
# anything but linux since I don't own any non-linux systems.  Feel free to
# send patches.  X servers will just not get any extra arguments then.
#
#Note: If you want to run an X terminal you could add an X server such as this
#0=Terminal -query serverhostname
# or for a chooser (optionally serverhostname could be localhost)
#0=Terminal -indirect serverhostname

# Definition of the standard X server.
[server-Standard]
name=Standard server
command=/usr/X11R6/bin/X0 :0 -deferglyphs 16 vt7
flexible=true

# Definition of the second X server.
[server-2nd]
name=2nd server
command=/usr/X11R6/bin/X1 :1 -xf86config /etc/X11/XF86Config-4.X1 -deferglyphs 16 vt9
flexible=true

# To use this server type you should add -query host or -indirect host
# to the command line
[server-Terminal]
name=Terminal server
# Add -terminate to make things behave more nicely
command=/usr/X11R6/bin/X -terminate
# Make this not appear in the flexible servers (we need extra params
# anyway, and terminate would be bad for xdmcp)
flexible=false
# Not local, we do not handle the logins for this X server
handled=false</programlisting>
      </sect2>
    </sect1>
  </appendix>
  <appendix id="scripts">
    <title>Scripts</title>
    <sect1 id="scripts_wrapper">
      <title>wrapper for starting X using Nvidia libGL.so</title>
      <programlisting>#!/bin/bash
#########################################################
### /usr/X11R6/bin/XNV                                ###
### script to start XFree with different LIBRARY_PATH ###
### in order to use Nvidia GL libraries and           ###
### XFree GL libraries at the same time               ###
#########################################################
  
export LD_LIBRARY_PATH=/usr/X11R6/libNV
exec /usr/X11R6/bin/X0 $*</programlisting>
    </sect1>
    <sect1 id="scripts_nv_inst">
      <title>for installing Nvidia drivers for parallel use with DRI</title>
      <programlisting>#!/bin/bash
########################################################
### /usr/sbin/ruby_NVinstaller                       ###
### for usage call it with -h or --help parameter    ###
########################################################

if [[ -z $1 ]] || [ "$1" == "-h" ] || [ "$1" == "--help" ] ;then
echo
echo "Usage :"
echo "$0 full path to Nvidia installer"
echo "eg. $0 /root/NVIDIA-Linux-x86-1.0-4349.run"
exit 1
fi

if [[ -z $OPENWINHOME ]];then
echo
echo "OPENWINHOME not defined!!!"
echo "Please set the environment variable OPENWINHOME"
echo "pointing to your XFree prefix eg. /usr/X11R6"
echo "for bash shell :"
echo "export OPENWINHOME=/usr/X11R6"
exit 1
fi

cd $OPENWINHOME
echo
echo "backup file for XFree's GL libraries "
echo "is $OPENWINHOME/libGL-backup.tar"
if [ -x libGL-backup.tar ]; then
	echo "old backup exist, deleting" &amp;&amp; rm libGL-backup.tar
fi
echo
find lib -name "libGL.*" -o -name "libGLcore*" \
	-o -name "libglx.*" | xargs tar  rpf   libGL-backup.tar \
	&amp;&amp; echo "backup finished"
echo
echo "now running Nvidia installer"
echo "`which $1` --no-opengl-headers --xfree86-prefix=/usr/X11R6NV --opengl-prefix=/usr/X11R6NV"
echo
`which $1` --no-opengl-headers --xfree86-prefix=/usr/X11R6NV --opengl-prefix=/usr/X11R6NV
RETVAL=$?
if [ $RETVAL -eq 0 ]; then

echo
echo "Nvidia installer finished,"
echo "now coping files to /usr/X11R6/libNV/"
echo
cd /usr/X11R6NV/lib &amp;&amp;  tar c * | tar xvC /usr/X11R6/libNV/
echo
echo "restoring backuped GL libraries"
echo
cd $OPENWINHOME
tar xvfp libGL-backup.tar &amp;&amp; ldconfig &amp;&amp; echo "GL libraries restored" &amp;&amp; rm libGL-backup.tar
fi

if [ $RETVAL -ne 0 ]; then
	echo
	echo "installer aborted, not restoring backup"
	echo "deleting backup files" &amp;&amp;  rm libGL-backup.tar
fi

echo
echo "script finished"
</programlisting>
    </sect1>
  </appendix>
</book>

