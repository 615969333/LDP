<?xml version='1.0' encoding='ISO-8859-1'?>
<sect1 id="gettingready">

<title>Getting ready for SquashFS</title>

<sect2 id="acquiring">
<title>Acquiring SquashFS</title>

<para>
The SquashFS home site is located at <ulink url="http://squashfs.sourceforge.net/">http://squashfs.sourceforge.net/</ulink>.
The current release is <emphasis>1.3r2</emphasis>. You can always get the latest version at the SquashFS SourceForge <ulink url="http://sourceforge.net/project/showfiles.php?group_id=63835">project page</ulink>.
</para>

</sect2>


<sect2 id="preparing">
<title>Preparing a SquashFS-capable kernel</title>

<para>
In order to read SquashFS, you need it supported in your kernel - just as if it was a <filename>reiserfs</filename>
or <filename>ext3</filename> file system. You have to make sure there is an appropriate patch for your kernel version - it should be located in
<filename>linux-2.x.y</filename> subdirectory of the SquashFS source tree. Also, remember that in most cases you will need a
<emphasis>clean</emphasis> (original) Linux kernel source from <ulink url="http://kernel.org/">kernel.org</ulink>. If your
kernel source is from a distro vendor, it may be already pre-patched with custom vendor patches, and patching with a SquashFS patch
may raise errors, as SquashFS patches are made against <emphasis>original</emphasis> Linux kernels.
</para>

<para>
With the 2.x.y kernel source and a proper 2.x.y SquashFS patch present, all you have to do is (we'll assume that
you have your Linux kernel source in <filename>/usr/src/linux</filename> and that you have the SquashFS source in
<filename>/usr/src/squashfs</filename>):
</para>

<para>
Change to the SquashFS source directory and
copy the kernel patch (we'll assume it's named <filename>squashfs1.3r2-patch</filename> as of the 1.3r2 release) to <filename>/usr/src/linux</filename>.
</para>

<programlisting>
	bash# cd /usr/src/squashfs
	bash# cp linux-2.x.y/squashfs1.3r2-patch /usr/src/linux
</programlisting>

<para>
Go into the directory <filename>/usr/src/linux</filename>:
</para>

<programlisting>
	bash# cd /usr/src/linux
</programlisting>

<para>Patch the Linux kernel:</para>

<programlisting>
	bash# patch -p1 &lt; squashfs1.3r2-patch
</programlisting>

<para>Configure your kernel:</para>

<programlisting>
	bash# make menuconfig
</programlisting>

<para>In the <quote><emphasis>File systems</emphasis></quote> section, make sure you enable <quote><emphasis>Squashed filesystem</emphasis>.</quote> If you want
to be able to mount the squashed file system via a <emphasis>loopback device</emphasis> in future, you should
enable <quote><emphasis>Loopback device support</emphasis></quote> in the <quote><emphasis>Block devices</emphasis></quote> section.
</para>

<para>Now you may compile the kernel and modules:</para>

<programlisting>
	bash# make dep &amp;&amp; make bzImage &amp;&amp; make modules &amp;&amp; make modules_install
</programlisting>

<para>Install your new kernel (name it <filename>bzImage-sqsh</filename>
for convenience, if you like):</para>

<programlisting>
	bash# cp arch/i386/boot/bzImage /boot/bzImage-sqsh
</programlisting>

<para>
Modify your boot loader's configuration file to include your new kernel and install the boot loader.
Now you may reboot with your new kernel. When it boots, check that everything went fine:
</para>

<programlisting>
	bash# cat /proc/filesystems
</programlisting>

<para>
You should see the <computeroutput>squashfs</computeroutput> line among other file systems. This means you have successfully enabled SquashFS in your kernel.
</para>

</sect2>


<sect2 id="mksquashfs">
<title>Compiling <command>mksquashfs</command></title>

<para>
Now you need to compile <command>mksquashfs</command> - the tool for creating squashed file systems.
</para>

<programlisting>
	bash# cd /usr/src/squashfs/squashfs-tools
</programlisting>

<para>
Compile and install <command>mksquashfs</command>:
</para>

<programlisting>
	bash# make
	bash# cp mksquashfs /usr/sbin
</programlisting>

<para>
If everything went fine, typing <command>mksquashfs</command> at the Bash prompt should print it's <quote>usage</quote> message.
</para>

</sect2>

</sect1>
