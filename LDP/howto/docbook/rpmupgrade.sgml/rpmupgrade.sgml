<?xml version=1.0 standalone=no?>
<!DOCTYPE ARTICLE PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"/usr/share/sgml/docbook/xml-dtd-4.1/docbookx.dtd">
<article>
  <articleinfo>
    <title>Binary RPM download and upgrade</title>

    <author>
      <firstname>Steven</firstname>

      <surname>Sanfratello</surname>
    </author>

    <copyright>
      <year>2002</year>

      <holder>Steven Sanfratello</holder>
    </copyright>

    <pubdate role="rcs">$Date$</pubdate>

    <releaseinfo>$Id: rpmupgrade.sgml,v 1.2 2001/12/13 16:46:42
    steve Exp $</releaseinfo>

    <abstract>
      <para>The GNU/Linux world asserts that the operating system
      can be downloaded from the Internet and installed for no
      money. It is easiest to install GNU/Linux on a fresh
      partition. But in my readings I was always left wondering if
      it is also possible to upgrade an existing distribution
      without destroying it? Here is a description of upgrading a
      GNU/Linux distribution to the next major release from the
      same distributor, using the downloaded binary rpm
      packages.</para>

      <para>Upgrading using downloaded, binary 
      <acronym>rpm</acronym>

      packages has its advantages and disadvantages. It took me
      about a week and a half to download a little over 600
      Megabytes, using a 56K modem. A few days after that I was
      done upgrading the packages. Things did not go smoothly for
      me. But I'll explain how to correct the pitfalls that I
      encountered, so that you will spend less time when you
      upgrade.</para>
    </abstract>
  </articleinfo>

  <sect1 id="introdction">
    <title>Introduction</title>

    <indexterm>
      <primary>Introduction</primary>
    </indexterm>

    <sect2>
      <title>Purpose of this document</title>

      <para>If you are considering taking advantage of the freely
      downloadable versions of Linux you should know that it takes
      some effort and know-how to accomplish. This HOWTO gives you
      real picture of the effort required before you start the
      process. In that way it will help you decide if the big
      download and upgrade is worth the trouble.</para>

      <para>Whether you decide to download or you obtain the rpm
      packages on disk, then this will explain what it takes to do
      the upgrade. Most commercial distributions are packaged as
      binary rpms, so I thought that a HOWTO on a major upgrade
      would be useful. The most important factor when upgrading the
      rpms is choosing the right order 
      <emphasis>(hint: start with the libraries.)</emphasis>
      </para>

      <para>If you're having problems using your installation
      program because it isn't reducing the packages down to fit on
      your harddisk, this method gives you control over the
      packages to eliminate what you don't need. That control will
      also allow you to customize your install. While several
      installation programs give you this level of control, some do
      not.</para>

      <para>I'll give you a description of what I went through to
      set up and upgrade my system, so that you can get an idea of
      what's involved when doing similar upgrades to your
      system.</para>
    </sect2>

    <sect2>
      <title>How long does it really take?</title>

      <sidebar>
        <para>Over all, it took about one and a half weeks to
        download the packages. The binary rpms total size was a
        little over 600 Megabytes. It took a few more days to do
        the upgrading.</para>

        <para>A more automated 
        <acronym>FTP</acronym>

        proceedure would reduce the download time significantly.
        The 
        <acronym>FTP</acronym>

        server dissconnected me often. I found that this was the
        biggest time waster in the whole process. The timeout
        before notifying me that the server wasn't responding,
        added to the time it took me to notice and check that
        message, added to the time it takes to reconnect,
        multiplied by a disconnect every 20 to 60 minutes totaled
        many wasted hours. Not to mention the time of waiting for
        the downloads. A program that reconnects to an FTP server
        automatically would be a big help in reducing the
        downloading time.</para>
      </sidebar>

      <para>
      <application>ncftp</application>

      has a feature to download files in the background:</para>

      <para>
        <prompt>ncftp&gt;</prompt>

        <command>bgget</command>
      </para>

      <para>which would make the download easier and possibly
      faster too.</para>

      <sidebar>
        <para>Upgrading would go smoother and quicker for a person
        with more experience upgrading. For me, this was a
        discovery effort, so there were many pitfalls for me. I am
        writing this to help you avoid those pitfalls and so your
        experience should go quicker than mine.</para>
      </sidebar>
    </sect2>

    <sect2>
      <title>The benifits and costs of upgrading this way</title>

      <informaltable>
        <tgroup cols="2" align="left">
          <thead>
            <row>
              <entry align="center">Benifits</entry>

              <entry align="center">Costs</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Downloading the packages is free.</entry>

              <entry>But the big cost is the time it takes to
              download and the space it takes to store
              them.</entry>
            </row>

            <row>
              <entry>You don't have to buy the 
              <acronym>CD</acronym>

              s.</entry>

              <entry>The purchase price of the CD could contribute
              towards future upgrades of the distribution.</entry>
            </row>

            <row>
              <entry>Upgrading each package by hand gives you
              control over your system. You'll have the opportunity
              to choose which components you want and which you
              don't want. Not all of the installation software
              available gives you that much control.</entry>

              <entry>That control requires some knowledge of what
              to do and what not to do. (Be careful that anything
              that you do can be undone, so that you can recover
              from your mistakes.)</entry>
            </row>

            <row>
              <entry>This control could be very helpful when you
              have to squeeze Linux into a small harddisk or if you
              just want to tailor Linux to your needs.</entry>

              <entry>If you don't need the control, it is much
              easier to get a commercial installer.</entry>
            </row>

            <row>
              <entry>Upgrading one package at a time also gives you
              a deeper understanding about the components of your
              system and how they fit together.</entry>

              <entry>
              </entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </sect2>

    <sect2>
      <title>What I'm assuming about you.</title>

      <itemizedlist>
        <listitem>
          <para>You'll need to know what rpm (Red Hat Package
          Manager) is and have some basic experience using the
          packages. (See 
          <xref endterm="rpmhowto" linkend="rpmhowto" />

          )</para>
        </listitem>

        <listitem>
          <para>You have a working Linux with rpm installed.</para>
        </listitem>

        <listitem>
          <para>If you are going to do the download, I assume that
          you have more time on your hands than money (like me). Or
          that you have a high speed Internet connection.</para>
        </listitem>

        <listitem>
          <para>The upgrading will take some familiarity with Linux
          and some knowledge of the what each package does. This
          knowledge can be obtained from the package information,
          of course.</para>

          <para>
            <prompt>$</prompt>

            <command>rpm</command>

            <parameter>-qi</parameter>
          </para>

          <para>
            <prompt>$</prompt>

            <command>rpm</command>

            <parameter>-ql</parameter>
          </para>
        </listitem>

        <listitem>
          <para>You have to use that knowledge when choosing the
          right packages to satisfy rpm dependencies. Normally
          these will have similar names, which makes it simple to
          do.</para>
        </listitem>

        <listitem>
          <para>One solution probably won't work for everyone so
          you'll have to be aware of what your doing and understand
          why you're doing it.</para>
        </listitem>
      </itemizedlist>
    </sect2>
  </sect1>

  <sect1 id="download">
    <title>Download</title>

    <sect2>
      <title>Licensing of rpm packages</title>

      <para>There are several different licenses that cover a
      complete Linux OS. The most famous one is the GNU GENERAL
      PUBLIC LICENSE ( 
      <acronym>GPL</acronym>

      ) which allows the free distribution of derivative works of
      GPL programs. ( 
      <application>rpm</application>

      itself is covered by this license. When used as a library
      it's covered under the LGPL.) According to the GPL a
      derivative work is, "a work containing the Program or a
      portion of it, either verbatim or with modifications." Binary
      rpm packages are derivative of the original program. If the
      original program was covered by the 
      <acronym>GPL</acronym>

      then so is the rpm package of it. Also, "Our General Public
      Licenses are designed to make sure that you have the freedom
      to distribute copies of free software (and charge for this
      service if you wish), that you receive source code or can get
      it if you want it, that you can change the software or use
      pieces of it in new free programs; and that you know you can
      do these things." This permits the free distribution of 
      <acronym>GPL</acronym>

      software. Not all Linux software in a distribution is
      licensed under the 
      <acronym>GPL</acronym>

      , though.</para>

      <para>So, this HOWTO refers to downloading GPL software.
      Software that isn't covered under the GPL may require
      different steps to respect those licensing requirments and
      those differences will not be addressed at this time, for the
      sake of simplcity. The easiest way to tell if a package is
      under the GPL is to look for it being mentioned in the
      Copyright field of the rpm information.</para>
    </sect2>

    <sect2>
      <title>Can linux be downloaded?</title>

      <para>Yes, it can, if you have the disk space to keep all of
      the files. 
      <acronym>FTP</acronym>

      is a good download method. 
      <acronym>HTTP</acronym>

      can be used also but is more difficult because it limits you
      to downloading one file at a time. Here are some of the
      basics of 
      <application>ncftp</application>

      and some pitfalls to avoid to make your downloading
      easier.</para>

      <para>A quick summary of some 
      <application>ncftp</application>

      commands follows but see the info on 
      <command>ncftp(1)</command>

      for all of the details of each command.</para>
    </sect2>

    <sect2>
      <title>ncftp features</title>

      <para>The 
      <application>ncftp</application>

      program is a nice tool. It can get the binary files off the
      remote server and into the current working directory. 
      <itemizedlist mark="-">
        <listitem>
          <para>It is also possible to download files as a
          background process using the bgget command allowing 
          <emphasis>unattended downloads</emphasis>

          .</para>
        </listitem>

        <listitem>
          <para>You can write download commands into scripts
          allowing 
          <emphasis>unattended downloads</emphasis>

          . But I won't elaborate on that.</para>
        </listitem>

        <listitem>
          <para>For files that weren't completely downloaded, 
          <application>ncftp</application>

          is capable of resuming the download from where it left
          off rather than starting the file from the
          beginning.</para>
        </listitem>

        <listitem>
          <para>To abort a get command with two 
          <keycombo>
            <keycap>Ctrl-C</keycap>
          </keycombo>

          keystrokes. This will stop your download and get you out
          of ncftp quickly.</para>
        </listitem>

        <listitem>
          <para>Use wild cards to get larger blocks of files. 
          <application>ncftp</application>

          is also capable of getting directories,
          recursively.</para>
        </listitem>
      </itemizedlist>
      </para>
    </sect2>

    <sect2>
      <title>Time savers: Skip unnecessary files and tweak
      time-outs</title>

      <para>You probably will not want to spend the time getting
      all the files from the remote directory. For instance you can
      skip any of the 
      <application>X</application>

      servers that aren't meant for your video card. If you want to
      save a big chunk of time and disk space you can skip the
      destop packages but most home users won't want to do that.
      Home users can skip many of the server packages, though. Base
      your choices on the packages of your current system, but
      understand that your distributor may have introduced some now
      and necessary packages that cannot be skipped.</para>

      <tip>
        <para>Generate a list of your current system's packages
        with one simple command:</para>

        <para>
          <prompt>$</prompt>

          <command>rpm</command>

          <parameter>-qa</parameter>

          <filename>currentrpms</filename>
        </para>
      </tip>

      <para>There's a way you can get ncftp to skip over some files
      while getting files using a wild cards. Create an empty file
      in your local directory which has the same name as the file
      that you want to skip. Create a name for every file that you
      want to skip. If you have the 
      <varname>auto-resume</varname>

      disabled, when ncftp comes to that file during</para>

      <para>
        <prompt>ncftp&gt;</prompt>

        <command>get</command>
      </para>

      <para>it will ask how you want to handle it. You can choose
      to 
      <computeroutput>[ 
      <keycap>S</keycap>

      ]kip</computeroutput>

      it.</para>

      <para>To create the empty files in your local directory you
      can first list the remote filesystem to see their exact
      names.</para>

      <para>
        <prompt>ncftp&gt;</prompt>

        <command>ls</command>
      </para>

      <para>Then use ' ' to create an empty file with the same
      name.</para>

      <para>
        <prompt>$</prompt>

        <command>touch</command>

        <filename>FILE</filename>
      </para>

      <para>
      <application>X</application>

      allows you to highlight the file name and copy it with the 
      <mousebutton>middle mouse button</mousebutton>

      . You'll have to prevent 
      <application>ncftp</application>

      from completing the download of these files by disabling the
      auto resume.</para>

      <para>
        <prompt>ncftp&gt;</prompt>

        <command>set auto-resume no</command>
      </para>
    </sect2>

    <sect2 id="saver-trade-off">
      <title>Time saver trade off</title>

      <para>If ncftp is set to automatically resume downloading
      then it will defeat the purpose of creating the empty files.
      You will not save any downloading time. So disable the auto
      resume feature.</para>

      <para>
        <prompt>ncftp&gt;</prompt>

        <command>set auto-resume no</command>
      </para>

      <para>The 
      <emphasis>trade-off</emphasis>

      of setting 
      <application>ncftp</application>

      in this way is that you'll have to tell 
      <application>ncftp</application>

      to 
      <computeroutput>[ 
      <keycap>S</keycap>

      ]kip</computeroutput>

      each empty file, as they are encountered. It also means that
      you will have to attend to the download process yourself in
      order to answer these questions.</para>

      <sidebar>
        <para>It is up to you if you want use this to save download
        time, or not. I chose to use it because there were several
        dozen files that I wanted to skip. In the end, I'm not sure
        if saving the download time was worth the effort.</para>
      </sidebar>
    </sect2>

    <sect2>
      <title>Local timeouts and Server disconnects</title>

      <para>The FTP server might have a tendency to kick you off
      after every few files you download, even if there are only a
      few users logged onto it. Sometimes you might even get
      disconnected in the middle of a large (10-20 Megabyte)
      file.</para>

      <tip>
        <para>That is when the resume feature of 
        <application>ncftp</application>

        really comes in handy.</para>
      </tip>

      <para>These disconnects get very frustrating and time
      consuming. When the server does kick you, 
      <application>ncftp</application>

      will wait for a timeout before it informs you of the
      disconnection. The variable which controls that timeout is
      called 
      <varname>control-timeout</varname>

      (isn't that clever of them?) I found that the default timeout
      was way too long and slowing me down. This setting delays how
      long 
      <application>ncftp</application>

      will take before announcing that the server wasn't
      responding. You'll probably want to decrease both your 
      <varname>connect-timeout</varname>

      and 
      <varname>control-timeout</varname>

      in order to speed up the download process. The more reliable
      your connection with the server then the smaller you can make
      them. As you download each chunk of files, turn them down
      slowly and pay attention to see if decreasing your timeout
      makes your connection less reliable. If that happens then you
      have gone too low.</para>

      <tip>
        <para>See the 
        <application>ncftp</application>

        man pages for descriptions of the timeout variables, there
        are 3 of them.</para>
      </tip>

      <sidebar>
        <para>My timeout variables are set as so: 
        <simplelist>
          <member>connect-timeout : 20</member>

          <member>control-timeout : 10</member>

          <member>xfer-timeout : 3600</member>
        </simplelist>
        </para>
      </sidebar>
    </sect2>
  </sect1>

  <sect1 id="partitions">
    <title>Partitions</title>

    <sect2>
      <title>You've got one partition but consider making
      more.</title>

      <para>You may find as you're upgrading that having a separate
      partition for backups can be very handy. You can choose to
      stick with just one partition for Linux but consider the
      possible flexibility that adding one or more spare partitions
      might give you when upgrading.</para>

      <para>A spare partition can perserve backups during an
      installation. Backup the /etc and /home directories for
      example. Or it can hold your downloaded rpm packages. 
      <application>mount</application>

      it to a temporary point while restoring the backups. After
      restoring from the backups, that partition can be erased and
      remounted at a more permanent point, integrating it into the
      running system. If the partition is large enough to fit both
      the backups and the files that are normally installed in that
      mount point, then it can be mounted as normal during
      installation and won't need to be erased. This was my
      case.</para>

      <para>If you decide to create a spare partition for backups
      you have the choice of making one big partition or several
      smaller ones. Installing on one partition is simpler than
      multiple ones. If you only use one partition now, it will be
      possible to divide the partition into smaller partitions
      after the installation. But non-destructive repartitioning
      (programs like 
      <application>fips</application>

      or 
      <application>Partition Magic</application>

      ) will be necessary if that partition has data on it.</para>

      <para>Having one, large spare partition is convienient
      because it can fit all of the backup data in one place. 
      <emphasis>But</emphasis>

      that can have the disadvantage of being wastefully large when
      trying to integrate it into your new installation. For
      instance with Linux fully installed on the other partition,
      where would you mount the spare partition? The big mount
      points like 
      <filename>/usr</filename>

      and 
      <filename>/home</filename>

      , are already be installed and mounted. What other
      directories need a large partition?</para>

      <para>On the other hand, multiple partitions can give some
      flexibility during the backup and installation that a large
      one dosen't have. It will be more complicated to break up
      your backup data across several spare partitions but when the
      partitions are remounted you'll have more options of where to
      mount them. Mount the spare partitions as extra swap space, 
      <filename>/opt</filename>

      , 
      <filename>/etc</filename>

      , or many other of the smaller directories. It will be easier
      to mount the spare partitions at these points since they're a
      little less crucial to a running system as directories like 
      <filename>/</filename>

      or 
      <filename>/usr</filename>

      . If you find that you didn't give some mount point a big
      enough partition and you'd like to give it some more space
      then a small spare partition can be mounted somewhere under
      that original mount point, in order to expand it.</para>

      <sidebar id="expandrootpartition"
      xreflabel="Expanding the root partition">
        <para>For instance, I had 
        <filename>/</filename>

        mounted on too small a partition. It ran out of space a
        couple of times after the upgrade. But I had a spare
        partition which was mounted to a temporary point called 
        <filename>/extra</filename>

        . When I saw that the 
        <filename>/var</filename>

        directory was the cause of the 
        <filename>/</filename>

        partition getting filled, I was able to mount the spare
        partition as 
        <filename>/var</filename>

        on the seperate partition. That freed up some space on the 
        <filename>/</filename>

        partition and gave the new 
        <filename>/var</filename>

        partition more room to grow.</para>
      </sidebar>

      <para>It is up to you if you want to give Linux one partition
      for convienience or if you want to try multiple partitions
      for flexiblity. There isn't a single correct answer for all
      systems</para>

      <tip>
        <para>There is a detailed HOWTO ( 
        <xref endterm="partitionhowto" linkend="partitionhowto" />

        ) on partitioning if you'd like to learn more about them
        and thier use.</para>
      </tip>

      <sidebar>
        <para>My situation wasn't ideal but it will be a good
        example to explain some ideas. While upgrading my Linux I
        made a mistake that completely prevented my kernel from
        booting. The mistake was improperly upgrading the 
        <application>glibc</application>

        libraries. As a result of that I had to re-install my old
        version of Linux before being able to use the upgrade rpms.
        I was lucky to have a seperate partition (my Windows
        partition) to keep the downloaded rpms while I re-installed
        Linux. The spare partition saved me from having to destroy
        over 600 Mbytes of downloads. Because of that spare
        partition, I was able to re-partition, re-format and
        re-install Linux without loosing any of the downloaded
        rpms.</para>

        <para>When I installed, I was so pleased at the value of
        having an extra partition that I decided to make several
        partitions on the Linux side of my harddrive to give me the
        most flexibility for the next time that I
        re-installed.</para>
      </sidebar>
    </sect2>

    <sect2>
      <title>Partitioning tools</title>

      <sidebar>
        <para>I chose to create several partitions. I'll explain
        what partitions I made and my reasons for making them. Read
        on and decide for yourself if you think that my examples
        are are worth trying on your system.</para>
      </sidebar>

      <para>When you have multiple partitions in Linux the
      partitions should be appropriatly sized for the directory
      that they'll be mounted as. You can estimate those sizes
      based on my setup, but it would be better if you based those
      sizes on your existing installation. To check the size of a
      directory issue the command:</para>

      <para>
        <prompt>$</prompt>

        <command>du</command>

        <parameter>-sh</parameter>

        <filename>[FILE]</filename>
      </para>

      <para>One possible approach is to use one (or more than one)
      partition for holding your backup data. Use the remaining
      ones to complete the Linux installation. This, of course,
      assumes that your harddrive is large enough to fit all of
      this. Check your installation requirements to get an idea of
      how much space you'll need to install Linux. Compare that to
      your harddrive space devoted to Linux and maybe you'll find
      that the difference leaves you enough room to backup on the
      same harddrive. This is a very convienent way to temporarily
      backup during an upgrade or install.</para>

      <sidebar>
        <para>Half of my 8 gigabyte drive is devoted to Windows and
        the other half to Linux. The first primary partition ( 
        <medialabel>/dev/hda1</medialabel>

        ) was used to backup the rpm packages, when first
        downloading them. While re-installing, I also used one of
        the Linux partitions for backup. The second primary
        partition ( 
        <medialabel>/dev/hda2</medialabel>

        ) reserves the physical space for the logical partitions.
        Those logical partitions are the ones that are mounted by
        Linux. This second primary partition is never mounted
        directly.</para>
      </sidebar>

      <tip>
        <para>Use 
        <application>fdisk</application>

        or your distribution's installation program, to display and
        manipulate the partition information.</para>

        <para>
          <prompt>#</prompt>

          <command>fdisk</command>

          <medialabel>DISK</medialabel>
        </para>

        <para>Run 
        <application>fdisk</application>

        as root and display the partition information.</para>

        <para>
          <prompt>Command (m for help):</prompt>

          <command>p</command>
        </para>

        <para>Quit the program without writing any changes.</para>

        <para>
          <prompt>Command (m for help):</prompt>

          <command>q</command>
        </para>
      </tip>

      <tip>
        <para>The mount point information can be obtained from the
        file 
        <filename>/etc/fstab</filename>

        or with 
        <application>mount</application>

        using no arguments.</para>

        <para>
          <prompt>$</prompt>

          <command>mount</command>
        </para>
      </tip>

      <tip>
        <para>Check how much free space is on your
        partitions.</para>

        <para>
          <prompt>$</prompt>

          <command>df</command>

          <parameter>-h</parameter>
        </para>
      </tip>

      <caution>
        <para>Whichever partition(s) hold your backups, make sure
        that you do not reformat or resize it during installation,
        those would destroy your backups.</para>
      </caution>

      <tip>
        <para>You can use 
        <application>top</application>

        or 
        <application>kpm</application>

        to monitor how much swap space your system uses.</para>
      </tip>
    </sect2>

    <sect2>
      <title>For example</title>

      <sidebar>
        <table>
          <title>Here is how my logical partitions are mounted
          their sizes:</title>

          <tgroup cols="5">
            <thead>
              <row>
                <entry>Partition</entry>

                <entry>Mount point</entry>

                <entry>Size</entry>

                <entry>Used space</entry>

                <entry>Used percentage</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry>/dev/hda5</entry>

                <entry>/home</entry>

                <entry>
                  <property>963 Mbytes</property>
                </entry>

                <entry>
                  <property>596 Mbytes</property>
                </entry>

                <entry>65%</entry>
              </row>

              <row>
                <entry>/dev/hda6</entry>

                <entry>/boot</entry>

                <entry>
                  <property>15.9 Mbytes</property>
                </entry>

                <entry>
                  <property>3.32 Mbyes</property>
                </entry>

                <entry>22%</entry>
              </row>

              <row>
                <entry>/dev/hda7</entry>

                <entry>/usr</entry>

                <entry>
                  <property>1.97 Gbytes</property>
                </entry>

                <entry>
                  <property>1.18 Gbytes</property>
                </entry>

                <entry>63%</entry>
              </row>

              <row>
                <entry>/dev/hda8</entry>

                <entry>swap (not mounted)</entry>

                <entry>
                  <property>64.2 Mbytes</property>
                </entry>

                <entry>
                  <property>27.0 Kbytes</property>
                </entry>

                <entry>4.2%</entry>
              </row>

              <row>
                <entry>/dev/hda9</entry>

                <entry>/var</entry>

                <entry>
                  <property>64.4 Mbytes</property>
                </entry>

                <entry>
                  <property>44.8 Mbytes</property>
                </entry>

                <entry>74%</entry>
              </row>

              <row id="optpartition" xreflabel="/opt partition">
                <entry>/dev/hda10</entry>

                <entry>/opt</entry>

                <entry>
                  <property>884 Mbytes</property>
                </entry>

                <entry>
                  <property>352 Mbytes</property>
                </entry>

                <entry>42%</entry>
              </row>

              <row>
                <entry>/dev/hda11</entry>

                <entry>/</entry>

                <entry>
                  <property>135 Mbytes</property>
                </entry>

                <entry>
                  <property>59.8 Mbytes</property>
                </entry>

                <entry>47%</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </sidebar>

      <para>This table gives you an idea of how big Linux is with
      XFree86, KDE 2 and lots of other goodies. I'll quickly
      discuss each of these partitions so that you can understand
      them and you can come up with your own strategy.</para>
    </sect2>

    <sect2>
      <title>Why all of those partitions?</title>

      <para>My 
      <filename>/home</filename>

      partition was used for backup during installation. During
      installation this can be mounted as the normal 
      <filename>/home</filename>

      directory. This is the directory that holds all of the user
      accounts and the users' personal data. Make sure that none of
      the existing directories on that partition have the same
      names as any of the users that you will be adding during
      installation. If they have the same name then your data could
      get overwritten. Also don't name any of the directories as 
      <filename>/home/httpd</filename>

      which belongs to 
      <application>apache</application>

      . Once mounted, the upgrade process can start from these
      backups. Use temporary names for the backups of the user
      accounts and allow the installation to create new users.
      Restore the data to the new user directories after upgrading
      the rest of system.</para>

      <para>The 
      <filename>/boot</filename>

      partition holds the kernel image and associated files and
      possibly the boot loader ( 
      <application>grub</application>

      ). It tends to be small and can be useful for positioning the
      kernel below cylinder 1024 on large hard disks in order to
      avoid the well documented BIOS limition which impedes booting
      a kernel image located at or above that cylinder. This
      partition will be too small to be much use for
      backups.</para>

      <para>The 
      <filename>/usr</filename>

      partition will be the largest because it holds the majority
      of your programs. It has the size to be useful for backup but
      since so much will be placed here during installation, it
      might be complicated to figure out how much space to leave
      for the programs. Of course, if this partition is larger than
      the total amount specified by the installation requirments
      than it should be fine to use the remaining space for backup
      since this directory will surely be smaller than that
      specification.</para>

      <para>The swap partition and the 
      <filename>/extra</filename>

      partition were sized and positioned very specifically. There
      is a rule of thumb in Linux to have a swap partition that is
      twice as large as the amount of installed RAM. With 64 Mbytes
      of RAM that would mean that I'd need about a 128 Mbyte swap
      file. This is the upper limit of the size of a swap
      partition. My sytem dosn't usually use much swap space so I
      broke that in to two partitions. This gave me the option of
      later changing that partition to a swap partition, but to be
      about to mount it and use it for file space for now.</para>

      <note>
        <para>Note: The 
        <filename>/extra</filename>

        was remounted as 
        <filename>/var</filename>

        as explained in 
        <xref endterm="expandrootpartition"
        linkend="expandrootpartition" />

        and that is why 
        <filename>/extra</filename>

        dosen't appear in the previous table.</para>
      </note>

      <sidebar>
        <para>I made the 
        <filename>/extra</filename>

        and swap partitions about 64 Mbytes a piece. If I found
        that I needed more swap space I could convert the 
        <filename>/extra</filename>

        partition to a swap partition. For the time being, I can
        mount the 
        <filename>/extra</filename>

        partition and use it for storage. Finally, I also
        positioned the 
        <filename>/extra</filename>

        between the 
        <filename>/</filename>

        and 
        <filename>/opt</filename>

        partitions so that the 
        <filename>/extra</filename>

        partition could be combined with either one of those
        partitions to expand their size.</para>
      </sidebar>

      <para>The 
      <filename>/opt</filename>

      partition holds some more programs. And in that way, it has
      the same problems in using it for a backup partition as the 
      <filename>/usr</filename>

      partition. You'll need to have and idea of how much space the
      upgraded programs will take up and the remaining space is
      available for backup data. Contributing to the 352 Mbytes (as
      shown in the table above. See 
      <xref endterm="optpartition" linkend="optpartition" />

      .) of my 
      <filename>/opt</filename>

      partition are 
      <application>acroread-4.0</application>

      , 
      <application>KDE</application>

      , 
      <application>KDE 2</application>

      and 
      <application>rvplayer5.0</application>

      .</para>

      <note>
        <para>Note that if you have 
        <application>Netscape</application>

        it also gets installed in 
        <filename>/opt</filename>

        .</para>
      </note>
    </sect2>

    <sect2>
      <title>Starting with a fresh install</title>

      <orderedlist>
        <title>What are the good reasons for erasing your Linux and
        starting with a fresh install?</title>

        <titleabbrev>Why perform a fresh install?</titleabbrev>

        <listitem>
          <para>Your distribution may want you to.</para>
        </listitem>

        <listitem>
          <para>Linux has a mess of programs and files that you
          don't want to keep and would love an easy way to get rid
          of them.</para>
        </listitem>

        <listitem>
          <para>Installing on a new harddrive.</para>
        </listitem>

        <listitem>
          <para>You've got no files that you care about
          loosing.</para>
        </listitem>

        <listitem>
          <para>You don't have time to do anything more than the
          minimum effort and your backups are complete and
          up-to-date.</para>
        </listitem>
      </orderedlist>
    </sect2>

    <sect2>
      <title>Summary</title>

      <para>In conclusion, there are many possible ways of
      re-arranging your data between various partitions. The
      advantage this gives is to keep an undisturbed copy of the
      data while doing a complete install. This was just one
      possible scheme and gives you an idea of how much space is
      needed for Linux in the various directories. Gathering this
      type of information from your existing system before
      installing will be very useful if you decide to re-partition
      the drive.</para>

      <caution>
        <para>If you repartition a drive that has data in one or
        more partitions make sure that you don't change the size of
        any of the partitions holding data. If you do the data will
        be destroyed with any standard partitioning program like 
        <application>fdisk</application>

        . If you accidentally change the size of a partition which
        is holding backup data, don't panic. All you have to do is
        either quit the application, or have it re-read the
        partitioning information from the disk. In 
        <application>fdisk</application>

        quit without writing and start over again.</para>

        <para>
          <prompt>Command (m for help):</prompt>

          <command>q</command>
        </para>
      </caution>
    </sect2>
  </sect1>

  <sect1 id="baseinstall">
    <title>Install the base packages</title>

    <sect2>
      <title>Just about to upgrade</title>

      <para>Let's just get on the same page now. There have been
      many paths you could have taken to get to this point. Now,
      assume that you have a working Linux system, all of your
      partitioning of the harddrive is done. The Linux should be on
      that harddrive. That Linux should have a working copy of 
      <application>rpm</application>

      with its database of packages up-to-date, relative to the
      Linux system.</para>
    </sect2>

    <sect2>
      <title>Determining which packages are the base
      packages</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>The dangers of upgrading the base libraries</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>'rpm -U' verses 'rpm -i'</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>The dangers of upgrading the kernel</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>Ways to recover from mistakes</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>Characteristics of a distribution which would be a
      good choice for upgrading?</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>Switching distributions by upgrading to new
      one</title>

      <para>
      </para>
    </sect2>
  </sect1>

  <sect1 id="upgrade">
    <title>Upgrade the remaining packages</title>

    <sect2>
      <title>Pitfall when upgrading the rpm package</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>Full speed ahead</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>rpm warnings (dependancy problems and
      conflicts)</title>

      <para>
      </para>
    </sect2>
  </sect1>

  <sect1 id="restore">
    <title>Restoring and Cleaning up</title>

    <sect2>
      <title>/home directory</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>Old packages</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>new packages</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>/etc directory</title>

      <para>
      </para>
    </sect2>
  </sect1>

  <sect1 id="rpmtips">
    <title>rpm command line tips</title>

    <sect2>
      <title>Why do I need to read this when I'm using a graphical
      frontend for rpm?</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>Query information : 'rpm -qi'</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>Summarize a group : 'rpm -qg'</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>Summarize your system : 'rpm -qia'</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>Summarize your upgrades : 'rpm -qip'</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>Keeping track of your progress : 'rpm -qa' and
      'ls'</title>

      <para>
      </para>
    </sect2>
  </sect1>

  <sect1 id="caldera3-1">
    <title>Caldera 3.1 tips</title>

    <sect2>
      <title>Lost packages between 2.4 and 3.1</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>Replaced packages between 2.4 and 3.1</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>Fixes</title>

      <para>
      </para>
    </sect2>
  </sect1>

  <sect1 id="packageorder">
    <title>Suggestions for package order</title>

    <para>
    </para>
  </sect1>

  <sect1 id="othertools">
    <title>Other upgrade tools</title>

    <sect2>
      <title>ncftp</title>

      <para>Here are some basic commnads in the ncftp command
      prompt, which you will find useful when downloading the
      rpms.</para>

      <itemizedlist>
        <listitem>
          <para>Set ncftp for binary transfers with binary. (This
          command isn't necessary because binary is the default
          transfer type.</para>
        </listitem>

        <listitem>
          <para>There are commnands to change through the local and
          remote directory (lcd, cd).</para>
        </listitem>

        <listitem>
          <para>Listing files in the local and remote directories
          (lls, ls).</para>
        </listitem>

        <listitem>
          <para>Set a named bookmark for the server and directory
          once you've found it, so that it's easy to open it the
          next time.</para>
        </listitem>

        <listitem>
          <para>get files using a wildcard.</para>
        </listitem>

        <listitem>
          <para>See the files in your working directory and
          prompting you if you'd like to [O]verwrite, [S]kip, or
          [R]esume the download of that file.</para>
        </listitem>
      </itemizedlist>
    </sect2>

    <sect2>
      <title>glint</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>kpackage</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>ls</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>cp</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>PHI</title>

      <para>
      </para>
    </sect2>

    <sect2>
      <title>Caldera Upgrader</title>

      <para>
      </para>
    </sect2>
  </sect1>

  <sect1 id="copyrightlicense">
    <title>Copyright Notice and License</title>

    <para>Copyright (C)&#169; 2002 by Steven Sanfratello. This
    document may be distributed only subject to the terms and
    conditions set forth in the LDP License at
    http://linuxdoc.org/COPYRIGHT.html.</para>

    <para>The copyright notice contained in the latest version of
    this document will supercede the prior copyright notices and
    apply to all prior versions of this document.</para>

    <sect2>
      <title>When this document is packaged with the whole Linux
      Documentation Project documentation:</title>

      <para>For the sakes of compatability, cooperation and ease of
      use and when this document is included as a part of the whole
      LDP project documentation during modifications,
      distributions, translations or copying of the LDP, the Linux
      Documentation Project License located at 
      <ulink url="http://linuxdoc.org/COPYRIGHT.html">
      http://linuxdoc.org/COPYRIGHT.html</ulink>

      governs the use of this document and should be included with
      the package of documents. Exceptions to the LDPL may be
      granted by the LDP maintainers, but only when this document
      is included as a part of the LDP documents as a whole.</para>
    </sect2>

    <sect2>
      <title>When this document is not packaged with the whole
      Linux Documentation Project documentation:</title>

      <para>Any significant omission of part of the LDP may cause
      this copyright notice to apply.</para>

      <para>Copyright &#169; by Steven Sanfratello. Permission is
      granted to distribute, copy, share this document in the
      original form. Conversions to standard formats such as from
      the original SGML to HTML, Postscript, Portable Document
      Format, plain text or the like is freely granted.</para>

      <para>Modifications to the content such as translations from
      the original English to other human languages, rewordings,
      deletions, additions reformatting, restructuring or any
      similar modifications must obtain explicit, written
      permission from the author. Retain this permission. These
      modifications are welcomed and encouraged, for so long as we
      can keep the document coordinated and correct.</para>

      <para>Contact Steven Sanfratello through 
      <email>nevets72@a1isp.net</email>

      and failing that, try contacting me through the LDP
      discussion list at 
      <email>discuss@linuxdoc.org</email>

      .</para>

      <para>If you are profiting, in any way, from use or
      distribution of this document please consider giving
      something back to the author or to the Linux community and
      then act on those considerations.</para>
    </sect2>
  </sect1>

  <sect1 id="faq">
    <title>FAQ</title>

    <qandaset>
      <qandaentry>
        <question>
          <para>
          </para>

<!-- one of (CALLOUTLIST GLOSSLIST ITEMIZEDLIST ORDEREDLIST SEGMENTEDLIST SIMPLELIST VARIABLELIST CAUTION IMPORTANT NOTE TIP WARNING LITERALLAYOUT PROGRAMLISTING PROGRAMLISTINGCO SCREEN SCREENCO SCREENSHOT SYNOPSIS CMDSYNOPSIS FUNCSYNOPSIS CLASSSYNOPSIS FIELDSYNOPSIS CONSTRUCTORSYNOPSIS DESTRUCTORSYNOPSIS METHODSYNOPSIS FORMALPARA PARA SIMPARA ADDRESS BLOCKQUOTE GRAPHIC GRAPHICCO MEDIAOBJECT MEDIAOBJECTCO INFORMALEQUATION INFORMALEXAMPLE INFORMALFIGURE INFORMALTABLE EQUATION EXAMPLE FIGURE TABLE PROCEDURE ANCHOR BRIDGEHEAD REMARK HIGHLIGHTS INDEXTERM) -->
        </question>

        <answer>
        </answer>
      </qandaentry>
    </qandaset>
  </sect1>

  <bibliography>
    <title>Bibliography</title>

    <biblioentry>
      <title id="upgradehowto">"Upgrading Your linux Distribution
      mini-HOWTO"</title>

      <authorgroup>
        <author>
          <firstname>Greg</firstname>

          <surname>Louis</surname>
        </author>
      </authorgroup>
    </biblioentry>

    <biblioentry>
      <title id="rpmslackwarehowto">"RPM+Slackware
      Mini-Howto"</title>

      <authorgroup>
        <author>
          <firstname>Dave</firstname>

          <surname>Whitinger</surname>
        </author>
      </authorgroup>
    </biblioentry>

    <biblioentry>
      <title id="rpmhowto">"RPM HOWTO"</title>

      <authorgroup>
        <author>
          <firstname>Donnie</firstname>

          <surname>Barnes</surname>
        </author>
      </authorgroup>
    </biblioentry>

    <biblioentry>
      <title id="rpmman">rpm(8) (a man page)</title>
    </biblioentry>

    <biblioentry>
      <title id="installationstratigieshowto">"Linux Installation
      Strategies"</title>

      <authorgroup>
        <author>
          <firstname>Tobby</firstname>

          <surname>Banerjee</surname>
        </author>
      </authorgroup>
    </biblioentry>

    <biblioentry>
      <title id="redhatinstallguide">"THE COMPLETE redhat LINUX
      INSTALLATION GUIDE 5.2"</title>

      <publisher>
        <publishername>Red Hat Software, Inc.</publishername>
      </publisher>

      <corpauthor>Red Hat Software, Inc.</corpauthor>

      <pagenums>24-25</pagenums>

      <copyright>
        <year>&#169; 1995, 1996, 1997, 1998</year>

        <holder>Red Hat Software, Inc.</holder>
      </copyright>

      <isbn>1-57595-199-1B</isbn>
    </biblioentry>

    <biblioentry>
      <title id="partitionhowto">Linux Partition HOWTO</title>

      <authorgroup>
        <author>
          <firstname>Tony</firstname>

          <surname>Harris</surname>
        </author>

        <author>
          <firstname>Kristian</firstname>

          <surname>Koehntopp</surname>
        </author>
      </authorgroup>
    </biblioentry>

    <biblioentry>
      <title id="ncftpman">ncftp(1) Man page</title>
    </biblioentry>
  </bibliography>

  <bibliography>
    <title>Related HOWTOs</title>

    <biblioentry>
      <title id="installationhowto">The Linux Installation
      HOWTO</title>

      <authorgroup>
        <author>
          <firstname>Eric Steven</firstname>

          <surname>Raymond</surname>
        </author>
      </authorgroup>
    </biblioentry>

    <biblioentry>
      <title id="swapspacehowto">Linux Swap Space
      Mini-HOWTO</title>

      <authorgroup>
        <author>
          <firstname>Rahul U.</firstname>

          <surname>Joshi</surname>
        </author>
      </authorgroup>
    </biblioentry>
  </bibliography>
</article>

