<!-- $Id$ -->

<chapter id="ch-packetfilter">
  <title>Packet Filtering</title>
  <para>
    It is not an uncommon story today to hear how people were first exposed to
    linux.  Many found linux an excellent and reliable masquerading firewall
    in the mid-1990s and slowly became more and more accustomed to working
    with linux as a result of the low cost.
  </para>
  <para>
    The capabilities of packet filtering code available today dwarfs those
    of early linux (<command>ipfwadm</command>, anybody?) yet
    retains the reliability and expressive flexibility of the older tools.
  </para>
  <para>
    For networks and machines directly connected to the Internet, packet
    filtering is usually no longer an option, but a serious need. Here we'll
    cover some of the Linux options and make some suggestions for further
    reading.
  </para>
  <para>
    In this chapter, we'll begin with an <link linkend="pf-intro">introduction
    to packet filtering</link> and then we'll discuss packet filtering from
    the perspective of a <link linkend="pf-host">single machine</link> and
    naturally also from the perspective of <link linkend="pf-network">a router
    or firewall</link>.
  </para>
  <para>
  </para>
  <section id="pf-intro">
    <title>Introduction to Packet Filtering</title>
    <para>
      Packet filtering is one part of a good security stance for any network.
      As the embodiment and expression of the acceptable flow of traffic from
      one network to another, a packet filter allows the administrator to
      enforce the organizational (or network) security policy on the
      network.  There is tremendous value from a security perspective in
      enforcing these traffic flows, instead of allowing arbitrary traffic
      flow.
    </para>
    <para>
      The use of packet filtering to enforce these traffic flows is not
      restricted to routers and firewalls alone.  Standalone servers and
      workstations can use these very same tools to protect themselves.  There
      are a couple of common approaches to the packet filtering question.  I
      subscribe to the notion that one should drop or deny all unwanted
      traffic by default and then allow only specific traffic.
    </para>
    <para>
      There are a number of techniques to accommodate this, and as always in
      the security business, there are convenience and security tradeoffs.
    </para>
    <para>
      For the remainder of the chapter, I'll try to focus on my practical
      application of packet filtering techniques and commands rather than a
      more general introduction to the dangers of exposed hosts and networks.
      I will assume the reader has enough familiarity with the concepts of
      packet filtering to put the material into context.
    </para>
    <para>
      FIXME; this would be a good place for some links to external content on
      packet filters, network security; firewalling; and so forth.
    </para>
  </section>
  <section id="pf-netfilter">
    <title>Netfilter and Packet Filtering</title>
    <para>
      packet filtering engine in kernel 2.2 (skip history, adequately
      documented elsewhere)
    </para>
    <para>
      packet filtering engine as part of netfilter in kernel 2.4, backwards
      compatible support for ipchains
    </para>
    <para>
      differences between the packet traversal in ipchains and iptables.
      link to Stef Coene's KPTD (kernel 2.4).  Anybody know of a link to a
      KPTD for kernel 2.2?
    </para>
    <para>
    </para>
    <para>
    </para>
    <section id="pf-iptables">
      <title>Packet Filtering with <command>iptables</command></title>
      <para>
      </para>
    </section>
    <section id="pf-ipchains">
      <title>Packet Filtering with <command>ipchains</command></title>
      <para>
      </para>
    </section>
  </section>
  <section id="pf-host">
    <title>Protecting a Host</title>
    <para>
      Host protection in the past was typically performed with application
      layer checks on the originating IP or hostname.  This was (and still is)
      frequently accomplished with libwrap, which verifies whether or not to
      allow a connection based on the contents of the system wide
      configuration files <filename>/etc/hosts.allow</filename> and
      <filename>/etc/hosts.deny</filename>.
    </para>
    <para>
      Host protection is one part of protecting a host, by preventing inbound
      packets from reaching higher layers.  This is no substitute for tight
      application layer security.  Strong network and host-level packet
      filters mitigate a host's exposure when it is connected to
      a network.
    </para>
    <para>
    </para>
    <section id="pf-host-ipchains">
      <title>Protecting a Host with <command>ipchains</command></title>
      <para>
        FIXME
      </para>
    </section>
    <section id="pf-host-iptables">
      <title>Protecting a Host with <command>iptables</command></title>
      <para>
      </para>
      <para>
      </para>
      <para>
      </para>
      <para>
      </para>
      <example id="ex-pf-iptables-reject">
        <title>Blocking a destination and using the <option>REJECT</option>
          target, cf. <xref linkend="ex-tools-ip-route-add-prohibit"/></title>
       <programlisting>
<prompt>[root@masq-gw]# </prompt><userinput>iptables -I FORWARD -p tcp -d 209.10.26.51 --dport 22 -j REJECT</userinput>
<prompt>[root@tristan]# </prompt><userinput>ssh 209.10.26.51</userinput>
<computeroutput>ssh: connect to address 209.10.26.51 port 22: Connection refused</computeroutput>
<prompt>[root@masq-gw]# </prompt><userinput>tcpdump -nnq -i eth2</userinput>
<computeroutput>tcpdump: listening on eth2
22:16:59.111947 192.168.99.35.51991 &gt; 209.10.26.51.22: tcp 0 (DF)
22:16:59.112270 192.168.99.254 &gt; 192.168.99.35: icmp: 209.10.26.51 tcp port 22 unreachable (DF) [tos 0xc0]</computeroutput>
        </programlisting>
      </example>
      <para>
      </para>
    </section>
  </section>
  <section id="pf-network">
    <title>Protecting a Network</title>
    <para>
      FIXME
    </para>
    <section id="pf-net-masq">
      <title>Protecting a Masqueraded Network</title>
      <para>
        FIXME
      </para>
    </section>
    <section id="pf-net-ipchains">
      <title>Protecting a Network with <command>ipchains</command></title>
      <para>
        FIXME
      </para>
    </section>
    <section id="pf-net-iptables">
      <title>Protecting a Network with <command>iptables</command></title>
      <para>
        FIXME
      </para>
    </section>
  </section>
</chapter>
