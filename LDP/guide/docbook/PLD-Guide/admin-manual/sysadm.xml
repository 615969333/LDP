    <chapter>
      <title>System administration</title>
      <section>
	<title>RPM package management</title>
	<section>
	  <title>Using RPM</title>
	  <para>configuring rpm (limit languages, etc)</para>
	</section>
	<section>
	  <title>Managing packages with <application>apt</application></title>
	  <para>
	    Apt is powerfull package installer/updater originally
	    written for Debian and its .deb package system, adapted for
	    RPM based systems by Conectiva people. Apt can be used to install
	    packages from various sources (filesystem, cdrom, nfs, http).
	    Here the net method is described (ftp or http).
	  </para>
	  <para>
	    To use apt first make sure you have
	    <application>apt</application> rpm package installed. Then
	    you usually need to edit
	    <filename>/etc/apt/sources.list</filename> (there are some
	    examples in this file, in most cases it is enough to
	    uncomment one of them). Example entry for i586 system:
	    <programlisting>rpm ftp://ftp.pld.org.pl/apt PLD-1.0/i586 base supported</programlisting>
	    You might also check some setup
	    values in <filename>/etc/apt/apt.conf</filename>
	    See 
	    <citerefentry>
	      <refentrytitle>sources.list</refentrytitle>
	      <manvolnum>5</manvolnum>
	    </citerefentry>
	    and
	    <citerefentry>
	      <refentrytitle>apt.conf</refentrytitle>
	      <manvolnum>5</manvolnum>
	    </citerefentry>
	    for details.
	  </para>
	  <para>
	    Apt is driven by <command>apt-get</command> command. First
	    time you run apt, issue <command>apt-get update</command>
	    (this command will only download list of packages from
	    server).  Then you can install/upgrade particular packages
	    (and all packages they depend on) with 
	    <command>apt-get install package1 package2 ...</command> 
	    or upgrade whole system with
	    <command>apt-get upgrade</command>. 
	    See
	    <citerefentry>
	      <refentrytitle>apt-get</refentrytitle>
	      <manvolnum>8</manvolnum>
	    </citerefentry>.
	  </para>
	  <note>
	    <para>
	      Apt is very strict about dependencies.
	      If you had ever issued --force and --nodeps options to rpm program,
	      then you may get a lot of messages about broken dependecies
	      when you run apt first time. That means your rpm database is messy.
	      In that case it is wise to run 
	      <command>apt-get check</command> to see more details and then
	      fix your database by hand, installing, removing or updating
	      packages that cause problems. Once done, that cleaning is not
	    necessary anymore as long as you use apt.
	    </para>
	  </note>
	</section>
	<section>
	  <title>Managing packages with <application>poldek</application></title>
	  <para>
	    Poldek is batch-mode rpm package installer/udpater written
	    by Pawel Gajda as a part of PLD installer.
	    It is software in beta stage.
	  </para>
	  <para>
	    To use poldek you need <application>poldek</application> rpm package.
	    Poldek can be used in full batch mode - every option can be passed 
	    in command line - or it can use config file,
	    either <filename>/etc/poldek.conf</filename> (system wide config), 
	    or <filename>~/.poldekrc</filename> (user config). Poldek can be run by 
	    ordinary user, installation of packages in that case can be done with 
	    <command>sudo</command> (can be set in user config). 
  	    Running poldek from root does not require <command>sudo</command>.
	  </para>
	  <para>
	    Program supports various sources of packages: filesystem, ftp, http, rsync.
	    Simple config for source requires only one line, like that:
	    <programlisting>
source = ftp://ftp.pld.org.pl/PLD-1.0/i686/PLD/RPMS/
	    </programlisting>
	    See example configs in poldek doc directory.
	  </para>
	  <para>
	    You may install/upgrade selected packages with 
	    <command>poldek -i package1 package2 ...</command>
	    or upgrade whole system with <command>poldek --upgrade-dist</command>.
	    Run with no arguments <command>poldek</command> enters it's nice interactive mode
	    (with TAB name completion and command history available). Try it. It's really cool!
	  </para>
	  <para>
	    If you use poldek with remote source (e.g. ftp), it may be sometimes necessary to 
	    issue command <command>poldek --update</command>
	    to reload poldek index files from server.
	  </para>
	  <para>
	    See extensive man page for details:
	    <citerefentry>
	      <refentrytitle>poldek</refentrytitle>
	      <manvolnum>8</manvolnum>
	    </citerefentry>.
	</para>
	<caution>
	  <para>
	    If you use lilo, and do <emphasis>not</emphasis> use rc-boot,
	    it is advisable to add <programlisting>hold = kernel</programlisting> 
	    to poldek config, otherwise it may happen during massive upgrade 
	    that kernel is also upgraded. If you didn't notice that it had happened,
	    lilo wouldn't be aware of new kernel installed!
	  </para>
	  <para>
	    If you use rc-boot, bootloader should be automatically upgraded.
	  </para>
	</caution>
	</section>
	<section>
	  <title>Managing packages with <application>wuch</application></title>
	  <para>
	    Wuch is an interactive package manager written by Pawel Kolodziej.
	    It has also some batch mode. The software is in beta stage.
	  </para>
	  <para>
	    To run wuch you need <application>wuch</application> package.
	    Wuch stores its configuration in <filename>/etc/wuch.conf</filename>.
	    Example wuch.conf:
	    <programlisting>
root_dir=/
source=Primary PLD ftp server,ftp,ftp.pld.org.pl,/PLD-1.0/i586/PLD/,RPMS,inst</programlisting>
	    For more details see comments in initial wuch.conf.
	  </para>
	  <para>	  
	    Unfortunatelly, program is not very well documented (you may 
	    find some docs in program sources), nevertheless
	    it has very simple and intuitive interface.
	    Simply type <command>wuch</command> and enjoy.
	  </para>
	</section>
      </section>
      <section>
	<title>Managing users</title>
	<para>
	PLD provides both standart <command>useradd</command> command (from shadow package),
	as well as interactive script <command>adduser</command> (from package adduser).
        </para>
      </section>
      <section>
	<title>Viewing logfiles</title>
	<para></para>
      </section>
      <section>
	<title>Backup</title>
	<para></para>
      </section>
      <section>
	<title>Rescue procedure</title>
	<para></para>
      </section>
    <section>
      <title>Managing bootloaders with rc-boot</title>
      <para>
	PLD comes with simple utility called <emphasis>rc-boot</emphasis>. 
	This package
	provides an uniform interface to install and update bootloader.
	With rc-boot this task can be done with simple running 
	<command>rc-boot</command> command;
	what bootloader should rc-boot use, and what are bootloader options,
	this is specified in uniform way
	in rc-boot config files instead of particular bootloader's config files.
	Basic rc-boot behaviour is controlled by file 
	<filename>/etc/sysconfig/rc-boot/config</filename>.
	To know what linux kernels or other systems should be available
	at boot time, rc-boot needs also <quote>image description</quote>
	files residing in 
	directory <filename>/etc/sysconfig/rc-boot/config/</filename>.
	Newly installed system should contain at least one these file,
	that is, the file describing default system kernel,
	but in general it is possible to have more of them.
	Image description files can be written by the user, but the main idea of
	rc-boot was that they come with particular packages that need to be 
	handled by bootloader. These packages are primarily kernel packages,
	but can be also other packages like memtest86 etc.
      </para>
      <para>
	It is used for easy kernel upgrades:
	as was just mentioned, each kernel rpm package comes with 
	<quote>boot image description</quote> file.
	During kernel package installation, rc-boot is automatically invoked to ensure that
	newly installed kernel will be seen by bootloader at next boot-up.
      </para>
      <note>
	<para>
	  rc-boot support works only if rc-boot is installed (thats obvious),
	  but it must also be enabled. This is done in it's main config file.
	  For details refer to 
	  <citerefentry>
	    <refentrytitle>rc-boot</refentrytitle>
	    <manvolnum>8</manvolnum>
	  </citerefentry>.
	</para>
      </note>
    </section>
    </chapter>


<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-omittag:nil
sgml-shorttag:nil
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-default-dtd-file:"../dbxbook4.1.2.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
sgml-declaration:nil
sgml-validate-command:"rxp -sxV %s %s"
sgml-parent-document:("PLD-Guide.xml" "book" "section")
End:
-->
