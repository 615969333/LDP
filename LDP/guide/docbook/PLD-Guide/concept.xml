<section id="Concept">
	<title>Concept of PLD</title>
	<section id="Goals"><title>Goals</title>
	<orderedlist inheritnum="ignore" continuation="restarts">
		<listitem>
			<para>
				FHS 2.x supported as directory structure
				specification
			</para>
		</listitem>
		<listitem>
			<para>
				termcap and libtermcap usage avoided (no
				package in PLD requires termcap any more)
			</para>
		</listitem>
		<listitem>
			<para>
				fantastic rc-inetd package provided, which is very simple, but also much more elastic than others. (unification of inet-services management)
			</para>
		</listitem>
		<listitem>
			<para>
				automatic system updates supported and ready, including restarting updated services, proper hadling of config files, even modified ones
			</para>
		</listitem>
		<listitem>
			<para>
				no packages are forced during installation (eg. MTAs and other daemons). We assume that some packages may be preferred over others, user decides on which program to use.
			</para>
		</listitem>
		<listitem>
			<para>
				iproute2 as a basic tool for network interfaces manipulation. PLD runtime scripts are simplier and shorter then, offering larger functionality compared	to RedHat. This version of initscripts can be easily localized, accordingly to the tastes of the user
			</para>
		</listitem>
		<listitem>
			<para>
				support for easy switching to alternative
				authentication methods (and, if you need it,
				cyphering) for network communication, such as
				PAM, GASPI, TSL/SSL etc. It's quite possible
				that soon SASL will take the lead in
				authentication systems. In practice this easy
				adaptation to eg. kerberisation is also
				achieved by means of rc-inetd, which allows
				quick replacement of service daemons with
				their kerberised versions, using eg. socks5
			</para>
		</listitem>
		<listitem>
			<para>
				descriptions and documentation are in other 
				languages provided and easily configured. 
				It is mostly done "on the fly".  Everybody 
				can configure and install chosen software 
				with support for selected languages  only,
				i.e. English and
				German or English and  Polish (resources
				linked to other languages will not be
				installed then). We provide such feature by 
				marking  national resources with %lang()
				macro of RPM packages.
			</para>
		</listitem>
		<listitem>
			<para>
				many different frequently repeated tasks can be automaticly done (with regards to current work methodology and package contents)
			</para>
		</listitem>
	</orderedlist>
	</section>
	<section id="assumptions"><title>Assumptions</title>
	<para>
		There are a few assumptions which follow from package
		preparation procedures:
	</para>
	<orderedlist inheritnum="ignore" continuation="restarts">
		<listitem>
			<para>
				documentation files are compressed using
				gzip
			</para>
		</listitem>
		<listitem>
			<para>
				static libraries are separated into additional
				subpackages (used by people who need it)
			</para>
		</listitem>
		<listitem>
			<para>
				dynamically linked libraries are stripped
				(debug information is found in static
				libraries only)
			</para>
		</listitem>
	</orderedlist>
	</section>
	<section id="methodology"><title>Methodology</title>
	<para>
		The rest of assumptions concerns work methodology:
	</para>
	<orderedlist inheritnum="ignore" continuation="restarts">
		<listitem>
			<para>
				CVS is used to maintain and update resources
			</para>
		</listitem>
		<listitem>
			<para>
				SGML and DocBook are the preferred
				documentation formats
			</para>
		</listitem>
	</orderedlist>
	</section>
</section>