<section id="devel-cvs">
  <title>CVS Repository</title>
  <para>
    All resources of PLD are kept in CVS repository. CVS is designed to
    hold data with possibility of modification by many people (with
    different access rights) allowing effective version control. No one can
    remove resources - they are only moved to other directory (to junk yard
    :-). Also every version is being kept, so you can download distribution
    in state from last month or last hour. Resources marked by STABLE flag
    are being built by correct people with many different optimization
    (i386, i586, i686 etc.) and you can find them as rpm packages on 
    <link linkend="ftp">FTP</link> Server.
  </para>
  <para>
    Read-only access to repository (repo) you can establish in two
    different methods: 
  </para>
  <itemizedlist>
    <listitem>
      <para>
	CVSWeb: <ulink url="http://cvs.pld.org.pl/">
	  http://cvs.pld.org.pl/</ulink> 
      </para>
    </listitem>
    <listitem>
      <para>
	From shell account you can use CVS client
	program. 
      </para>
    </listitem>
  </itemizedlist>
  <para>
    To use second method, first you need to login with empty
    password (if you get 'Error: .cvspass file not exist' please
    type 'touch ~/.cvspass' and try again): 
  </para>
  <screen format="linespecific">
    <prompt>bash$</prompt> <command>cvs -d :pserver:cvs@cvs.pld.org.pl:/cvsroot login</command>
  </screen>
  <para>
    Next, get the module(s) you need: 
  </para>
  <screen format="linespecific">
    <prompt>bash$</prompt> <command>cvs -d :pserver:cvs@cvs.pld.org.pl:/cvsroot 
          get module_name</command>
  </screen>
  <para>
    All resources are grouped in modules. For now in repository
    are among others these modules: 
  </para>
  <table>
    <title>Major modules in PLD CVS Repository</title>
    <tgroup cols="2">
      <tbody>
	<row>
	  <entry><emphasis>Module name</emphasis></entry>
	  <entry><emphasis>Contents</emphasis></entry>
	</row>
	<row>
	  <entry>CVSROOT</entry>
	  <entry>CVS server settings</entry>
	</row>
	<row>
	  <entry>test</entry>
	  <entry>Perform all your tests with cvs
	    program here!</entry>
	</row>
	<row>
	  <entry>SPECS</entry>
	  <entry>Module, that contain SPEC files
	    (files with package definitions for
	    rpm packages manager)</entry>
	</row>
	<row>
	  <entry>SOURCES</entry>
	  <entry>Sources and other files
	    necessary to build rpm
	    packages. Warning: Never 'get'
	    this module! Use 'builder' script (it
	    is in SPECS module). Run the script without
	    parameters to get help.</entry>
	</row>
	<row>
	  <entry>bootdisk</entry>
	  <entry>Bootdisk for installer</entry>
	</row>
	<row>
	  <entry>rc-scripts</entry>
	  <entry>The way system is starting</entry>
	</row>
	<row>
	  <entry>pl_PL</entry>
	  <entry>Polish Manuals Translation
	    Project</entry>
	</row>
	<row>
	  <entry>shadow</entry>
	  <entry>Shadow passwords for
	    Linux</entry>
	</row>
      </tbody>
    </tgroup>
  </table>
  <para>
    There are also several other modules in PLD repo. Most of them 
    are open source project of PLD developers, more or less connected
    with PLD itself. You can use CVSWeb to view complete list.
  </para>
  <para>
    To download contents of some module you should use command: 
  </para>
  <screen format="linespecific">
    <prompt>bash$</prompt> <command>cvs -d :pserver:cvs@cvs.pld.org.pl:/cvsroot 
          get "module" ["module2" ...]</command><footnote><para>Specify module name without the quotes</para></footnote>
  </screen>
</section>
<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-omittag:nil
sgml-shorttag:nil
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-default-dtd-file:"dbxbook4.1.2.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
sgml-declaration:nil
sgml-validate-command:"rxp -sxV %s %s"
sgml-parent-document:("PLD-Guide.xml" "book" "section")
End:
-->
