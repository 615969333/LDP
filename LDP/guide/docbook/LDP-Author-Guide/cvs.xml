<!-- 
I really am trying to either get rid of this section, or at least move
it to an appendix. I haven't suceeded yet, but really I need some sleep.
-->

  <section id="cvs">
  <title>Concurrent Versions System (CVS)</title>
    <para> 
      The LDP is providing CVS access to authors. There are a few
      good reasons for this:
    </para> 

    <orderedlist inheritnum="ignore" continuation="restarts">
      <listitem>
        <para> CVS will keep an off-site backup of your documents. In
        the event that you hand over a document to another author,
        they can just retrieve the document from CVS and continue
        on. In the event you need to go back to a previous version of
        a document, you can retrieve it as well.  </para>
      </listitem>
      <listitem>
        <para> It's great to have many people working on the same
        document. You can have CVS tell you what changes were made
        while you were editing your copy by another author, and
        integrate those changes in.  </para>
      </listitem>
      <listitem>
        <para>CVS keeps a log of what changes were made. These logs (and
        a date stamp) can be placed automatically inside the document
        when you use some special tags that get processed before the
        SGML processor.  </para>
      </listitem>
      <listitem>
        <para> It can provide for a way for a program to automatically
      update the LDP web site with new documentation as it's written
      and submitted. This is not in place yet, but it is a potential
      goal. Currently, CVS updates signal the HOWTO coordinator to
      update the LDP web page, meaning that if you use CVS, you're not
      required to e-mail your SGML code. </para> 
      </listitem>
    </orderedlist>

    <para> If you're completely new to CVS, there are a few web pages
    you may want to look at which can help you out: </para> 

    <itemizedlist>
      <listitem>
        <para> <ulink
        url="http://cvshome.org/docs/blandy.html">http://cvshome.org/docs/blandy.html</ulink>
        </para>
      </listitem>
      <listitem>
        <para> <ulink
        url="http://www.loria.fr/~molli/cvs/doc/cvs_toc.html">http://www.loria.fr/~molli/cvs/doc/cvs_toc.html</ulink></para> 
      </listitem>
	  <listitem>
	  	<para><ulink
		url="http://tldp.org/HOWTO/CVS-RCS-HOWTO.html">http://tldp.org/HOWTO/CVS-RCS-HOWTO.html</ulink>
		</para>
	  </listitem>
    </itemizedlist>
    
	<para>
		You can browse the LDP CVS repository via the web at <ulink
        url="http://cvsview.tldp.org/">http://cvsview.tldp.org/</ulink>.
    </para>

    <section id="getaccount">
      <title> Getting a CVS account </title>
      <para> First you'll need to get an account at the LDP's CVS
      Repository. This is pretty much the root directory that is used
      by CVS, with various projects (HOWTOs, guides, etc.)
      created as subdirectories of it. </para> 
      <para>Please fill the form:
	      <ulink url="http://tldp.org/cvs/">
		      http://tldp.org/cvs/</ulink>
      </para>
      <para>During filling the form we want you to inform us about
      your plans, eg. which HOWTO you maintain. 
      </para>
      <para>Your unique
      CVSROOT directory will be created and you'll get an e-mail with
      a response. Remember your password, it will <emphasis>not</emphasis>
	  be sent in the email. When you get your response, log into your CVSROOT
      and make sure everything is set up properly: </para> 

      <screen format="linespecific">
<prompt>bash$</prompt> <command>export
	CVSROOT=:pserver:<replaceable>your_userid</replaceable>@cvs.tldp.org:/cvsroot</command>
<prompt>bash$</prompt> <command>cvs -d $CVSROOT login</command>
</screen>

      <para> (Replace the <replaceable>your_userid</replaceable> with what
      you were sent in the response e-mail). </para> 
      <para> You will be asked for your password, and then be given
      access to the CVS Repository in read-write mode. Once you've
      used <command moreinfo="none">cvs login</command> once and have
      been given access to the system, your password is stored in
      <filename moreinfo="none">.cvspass</filename> and you will not
      have to use <command moreinfo="none">cvs login</command>
      again. Just set the CVSROOT and continue on. You can get the
      entire repository with this command:  </para> 

      <screen>
<prompt>bash$</prompt> <command>cvs get LDP</command>
</screen>

      <para> Or you can get the source for your own document with
      these commands: </para> 

      <screen format="linespecific">
<prompt>bash$</prompt> <command>cvs get LDP/howto/docbook/YOUR-HOWTO.sgml</command>
<prompt>bash$</prompt> <command>cvs get
guide/docbook/YOURGUIDE</command> 
</screen>
    </section>

	<section id="usingcvs">
	<title>Using CVS</title>
	<para>
		There are a number of documents that can help you get up and
		running with CVS. The <ulink
		url="http://tldp.org/HOWTO/CVS-RCS-HOWTO.html">CVS-RCS-HOWTO Document for Linux (Source Code
		Control System)</ulink> gives an overview of <ulink
		url="http://tldp.org/HOWTO/CVS-RCS-HOWTO-4.html">CVS
		Commands</ulink>
	</para>

	<variablelist>
        <title>CVS Commands: a brief reminder</title>

        <varlistentry>
        <term>$Id&dollar;</term>
        <listitem><para>
			Automatically insert the date and version directly into the
			document when a document is committed. e.g. $Id: cvs.xml,v 1.9
			2002/04/21 09:44:26 serek Exp $
        </para></listitem>
        </varlistentry>


        <varlistentry>
        <term>commit</term>
        <listitem><para>
			This option will upload your changes to the CVS server. If you
			want to bypass the editor screen you can use 
			<command>
				cvs <option>commit</option> <option>-m &quot;comment&quot;</option>
			</command>.</para>
		
		<note><para>You must still email <email>submit@en.tldp.org</email> 
			when you are ready to have your changes
			appear on the live site. Your email should include the relative
			path to the file(s) in the LDP CVS tree that you wish to
			update.
        </para></note>
		
		</listitem>
        </varlistentry>

        <varlistentry>
        <term>add</term>
        <listitem><para>
		You can add new files to your CVS repository. These may be image
		files or additional XML files. First check that your HOWTO is in
		its own directory.           You may want to coordinate with the
		people at <email>submit@en.tldp.org</email> to ensure you can
		add graphics or other files to your HOWTO.
		</para>
		
		<para>
			Copy the files you want to add into your local CVS repository
			(where all of your downloaded/working files are). Then: 
		<command>cvs add <replaceable>filename</replaceable></command>.
			After you've added the files, you still need to commit them to the
			repository (see above).
        </para>
		
		<para>
		If you need to replace an old file name with a new one, you
		still need to use the add command. First remove the copy of the
		file from your local disk. Then remove it from the CVS tree with:
		<command>cvs remove <replaceable>filename</replaceable></command>.
		As with the add command, you need to <quote>commit</quote> your
		removed file. Finally, now that the old file has been removed, add
		your new file using the instructions above (first add and then
		commit the additional file).
		</para>
		</listitem>
        </varlistentry>
	</variablelist>
	</section>
	
      <section id="recovery">
        <title>Recovering old versions</title>
        <para>
          There you are, typing away, when you screw up.  Real bad.
          Doesn't matter what it is, but suffice it to say that you've
          toasted not only the version on your local drive, but
          created a new version on the CVS server.  What you need
          to do is go back in time and resurrect and older
          version of your file.
        </para>
        <para>
          To do this, you'll need to know the version number of the
          file you want to retrieve. <command>cvs diff</command>
          will give a list of revisions if there are differences.  You
          can pick the revision number, subtract one, and that is
          probably the revision you want to look at.
        </para>
        <para>
          The command <command>cvs -Q update -p -r <replaceable>revision</replaceable></command>
          <replaceable>filename</replaceable> will output to stdout
          the contents of the <replaceable>revision</replaceable> version
          of <replaceable>filename</replaceable>.  You can pipe it to
          <command>more</command> or redirect the output to a file.
          Conveniently, you can redirect stdout to a file called
          <replaceable>filename</replaceable>.  Your local file
          is now the revision you want, and <command>cvs update
          </command> will update the CVS server with the new (old)
          version of <replaceable>filename</replaceable>.
        </para>
  </section>
  </section> <!-- cvs -->
