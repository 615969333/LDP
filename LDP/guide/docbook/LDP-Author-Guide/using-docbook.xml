<!-- 
	<!DOCTYPE book PUBLIC '-//OASIS//DTD DocBook XML V4.2//EN'>
-->

<appendix id="usingdocbooktags">
<title>Using DocBook Tags</title>

<!-- To be incorporated at some point
<para>
Bibliographies
http://www.tldp.org/HOWTO/Reading-List-HOWTO/b60.html
    http://www.tldp.org/HOWTO/Software-Proj-Mgmt-HOWTO/b811.html

Date: Wed, 30 Jul 2003 08:44:12 -0700
From: Bob Stayton <email>bobs@sco.com</email>
Subject: Re: &lt;mediaobject&gt; in &lt;articleinfo&gt;
If you are using the XSL stylesheets (not DSSSL), then
the problem you are having is with the titlepage mechanism.

By default, mediaobject is not included in the titlepage,
probably because everyone would want it located in
different places relative to the text.  You can add
it to the titlepage for your articles by customizing
the titlepage spec file and including a regenerated
titlepage xsl module in a stylesheet customization layer.
See this reference for more information on how to
do that:

http://www.sagehill.net/docbookxsl/HtmlCustomEx.html#HTMLTitlePage
</para>
-->

  <section id="writing-docbook">
    <title>Writing With DocBook Elements</title>

    <indexterm zone="writing-docbook">
      <primary>edition</primary>
      <secondary>using DocBook</secondary>
    </indexterm>

    <para>An editor capable of inserting elements according to the
    <acronym>DTD</acronym> will help a lot since it will enforce
    the DTD.
    This way you can be sure that no invalid elements were added
    anywhere in your document.</para>

    <para>In order to ensure that future changes are as easy as possible,
    authors should try to keep compatibility with
    the <acronym>XML</acronym> version of the DocBook DTD.  This means
    keeping element names in upper case, using double quotes in all
    attributes, and not omitting end tags. Most tools that
    automatically insert elements (like psgml+emacs) follow these
    rules automatically or with some fine tuning.</para> 

    <para>Each type of document created has a specific structure, 
	 and examples of documents can be found in the <xref
	 linkend="templates" />.</para>

    <para>Considering the explanation above we can proceed to instructions on 
    how to write a document using DocBook.</para>

    <section id="writing-docbook-commands">
      <title>Useful commands</title>

      <indexterm>
        <primary>edition</primary>
        <secondary>using DocBook</secondary>
        <tertiary>commands</tertiary>
      </indexterm>

      <para><xref linkend="table-useful-commands"/> shows some commands that 
      are useful for generating generic documents. Remember that some
      elements are valid only on some contexts.</para>

      <tip>
        <para>Sometimes the appearance of a particular tag changes
        from one format to another. As a beginner in DocBook writing,
        you may wish to see how your document looks in several formats
        before you publish them.</para>
      </tip>

      <note>
        <para>Since the formatting depends on the output style chosen, it's
        recommended to use as much markup as possible. Even if the appearance
        of the output doesn't seem to change with the standard output
        style, there may be specific output formats that will make
        these tags stand out.</para>
      </note>

      <table id="table-useful-commands">
        <title>Useful commands</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>Description</entry>
              <entry>Command</entry>
              <entry>Result</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>E-mail address</entry>
              <entry><sgmltag class="starttag">email</sgmltag>address@domain<sgmltag
              class="endtag">email</sgmltag></entry>
              <entry><email>address@domain</email></entry>
            </row>
            <row>
              <entry>About the author</entry>
              <entry><sgmltag class="starttag">author</sgmltag>...<sgmltag
              class="endtag">author</sgmltag></entry>
              <entry>(see example below)</entry>
            </row>
            <row>
              <entry>Author's name</entry>
              <entry><programlisting>
<sgmltag class="starttag">firstname</sgmltag>Mary<sgmltag class="endtag">firstname</sgmltag>
<sgmltag class="starttag">othername</sgmltag>Margaret<sgmltag class="endtag">othername</sgmltag>
<sgmltag class="starttag">surname</sgmltag>O'Hara<sgmltag class="endtag">surname</sgmltag>
              </programlisting></entry> 
              <entry><author>
                  <firstname>Mary</firstname>
                  <othername>Margaret</othername>
                  <surname>O'Hara</surname>
                </author></entry>
            </row>
            <row>
              <entry>Keys' name (printings on the keyboard)</entry>
              <entry><sgmltag class="starttag">keycap</sgmltag>F1<sgmltag
              class="endtag">keycap</sgmltag></entry>
              <entry><keycap>F1</keycap></entry>
            </row>
            <row>
              <entry>Symbol represented by the keys</entry>
              <entry><sgmltag class="starttag">keysym</sgmltag>KEY_F1<sgmltag
              class="endtag">keysym</sgmltag></entry>
              <entry><keysym>KEY_F1</keysym></entry>
            </row>
            <row>
              <entry>Key's code</entry>
              <entry><sgmltag class="starttag">keycode</sgmltag>0x3B<sgmltag
              class="endtag">keycode</sgmltag></entry>
              <entry><keycode>0x3B</keycode></entry>
            </row>
            <row>
              <entry>Combinations or sequences of keys</entry>
              <entry><programlisting>
<sgmltag class="starttag">keycombo</sgmltag>
   <sgmltag class="starttag">keycap</sgmltag>Ctrl<sgmltag class="endtag">keycap</sgmltag>
   <sgmltag class="starttag">keycap</sgmltag>S<sgmltag class="endtag">keycap</sgmltag>
<sgmltag class="endtag">keycombo</sgmltag>
              </programlisting></entry> 
              <entry><keycombo>
                  <keycap>Ctrl</keycap>
                  <keycap>S</keycap>
                </keycombo></entry>
            </row>
            <row>
              <entry>Program Menus</entry>
              <entry><sgmltag class="starttag">guimenu</sgmltag>File<sgmltag
              class="endtag">guimenu</sgmltag></entry>
              <entry><guimenu>File</guimenu></entry>
            </row>
            <row>
              <entry>Menu Items</entry>
              <entry><sgmltag
              class="starttag">guimenuitem</sgmltag>Save<sgmltag
              class="endtag">guimenuitem</sgmltag></entry> 
              <entry><guimenuitem>Save</guimenuitem></entry>
            </row>
            <row>
              <entry>Menu Sequences</entry>
              <entry><programlisting>
<sgmltag class="starttag">menuchoice</sgmltag>
   <sgmltag class="starttag">shortcut</sgmltag>
      <sgmltag class="starttag">keycombo</sgmltag>
         <sgmltag class="starttag">keycap</sgmltag>Ctrl<sgmltag class="endtag">keycap</sgmltag>
         <sgmltag class="starttag">keycap</sgmltag>S<sgmltag class="endtag">keycap</sgmltag>
      <sgmltag class="endtag">keycombo</sgmltag>
   <sgmltag class="endtag">shortcut</sgmltag>
   <sgmltag class="starttag">guimenu</sgmltag>File<sgmltag class="endtag">guimenu</sgmltag>
   <sgmltag class="starttag">guimenuitem</sgmltag>Save<sgmltag class="endtag">guimenuitem</sgmltag>
<sgmltag class="endtag">menuchoice</sgmltag>
              </programlisting></entry>
              <entry><menuchoice>
                  <shortcut>
                    <keycombo>
                      <keycap>Ctrl</keycap>
                      <keycap>S</keycap>
                    </keycombo>
                  </shortcut>
                  <guimenu>File</guimenu>
                  <guimenuitem>Save</guimenuitem>
                </menuchoice></entry>
            </row>
            <row>
              <entry>Mouse Button</entry>
              <entry><sgmltag
              class="starttag">mousebutton</sgmltag>left<sgmltag
              class="endtag">mousebutton</sgmltag></entry> 
              <entry><mousebutton>left</mousebutton></entry>
            </row>
            <row>
              <entry>Command Names</entry>
              <entry><sgmltag class="starttag">command</sgmltag>command<sgmltag
              class="endtag">command</sgmltag></entry>
              <entry><command>command</command></entry>
            </row>
            <row>
              <entry>Application Names</entry>
              <entry><sgmltag
              class="starttag">application</sgmltag>application<sgmltag
              class="endtag">application</sgmltag></entry> 
              <entry><application>application</application></entry>
            </row>
            <row>
              <entry>Text Bibliographical Reference</entry>
              <entry><sgmltag
              class="starttag">citation</sgmltag>reference<sgmltag
              class="endtag">citation</sgmltag></entry> 
              <entry><citation>reference</citation></entry>
            </row>
            <row>
              <entry>Quote</entry>
              <entry><programlisting>
<sgmltag class="starttag">blockquote</sgmltag>
   <sgmltag class="starttag">attribution</sgmltag>Text Author<sgmltag class="endtag">attribution</sgmltag>
   <sgmltag class="starttag">para</sgmltag>Quote Text.<sgmltag class="endtag">para</sgmltag>
<sgmltag class="endtag">blockquote</sgmltag>
              </programlisting></entry>
              <entry><para><blockquote>
                    <attribution>Text Author</attribution>
                    <para>Quote Text.</para>
                  </blockquote></para></entry>
            </row>
            <row>
              <entry>Index</entry>
              <entry>(NA)</entry>
              <entry>See <xref linkend="encoding-index"/>.</entry>
            </row>
            <row>
              <entry>File Names</entry>
              <entry><programlisting>
<sgmltag class="starttag">filename</sgmltag>file<sgmltag class="endtag">filename</sgmltag></programlisting></entry>
              <entry><filename>file</filename></entry>
            </row>
            <row>
              <entry>Directories</entry>
              <entry><programlisting>
<sgmltag class="starttag">filename id="directory"</sgmltag>directory<sgmltag class="endtag">filename</sgmltag></programlisting></entry>
              <entry><filename class="directory">directory/</filename></entry>
            </row>
            <row>
              <entry>Emphasize Text<footnote>
                  <para>Text can be enphasized in a few ways. The most 
                  common ways are italics and bold. DocBook, however, supports only
                  italics. The use of bold requires additional settings on the 
                  stylesheet used.</para>
                </footnote>
</entry>
              <entry><programlisting>
<sgmltag class="starttag">emphasis</sgmltag>text<sgmltag class="endtag">emphasis</sgmltag></programlisting></entry>
              <entry><emphasis>text</emphasis></entry>
            </row>
            <row>
              <entry>Footnotes</entry>
              <entry><programlisting>
<sgmltag class="starttag">footnote</sgmltag>
   <sgmltag class="starttag">para</sgmltag>Footnote text<sgmltag class="endtag">para</sgmltag>
<sgmltag class="endtag">footnote</sgmltag></programlisting></entry>
              <entry>(See note at the end of this table for an example)</entry>
            </row>
            <row>
              <entry>URLs</entry>
              <entry><programlisting>
<sgmltag class="starttag">ulink url="http://www.conectiva.com</sgmltag>Conectiva S.A.<sgmltag class="endtag"></sgmltag></programlisting></entry> 
              <entry><ulink url="http://www.conectiva.com">Conectiva S.A.</ulink></entry>
            </row>
            <row>
              <entry>Itemizeda (unnumberd) List</entry>
              <entry><programlisting>
<sgmltag class="starttag">itemizedlist</sgmltag>
   <sgmltag class="starttag">listitem</sgmltag>
      <sgmltag class="starttag">para</sgmltag>item<sgmltag class="endtag">para</sgmltag>
   <sgmltag class="endtag">listitem</sgmltag>
   <sgmltag class="starttag">listitem</sgmltag>
      <sgmltag class="starttag">para</sgmltag>item<sgmltag class="endtag">para</sgmltag>
   <sgmltag class="endtag">listitem</sgmltag>
<sgmltag class="endtag">itemizedlist</sgmltag>
</programlisting></entry>
              <entry><itemizedlist>
                  <listitem>
                    <para>item</para>
                  </listitem>
                  <listitem>
                    <para>item</para>
                  </listitem>
                </itemizedlist></entry>
            </row>
            <row>
              <entry>Ordered (numbered) List</entry>
              <entry><programlisting>
<sgmltag class="starttag">orderedlist</sgmltag>
   <sgmltag class="starttag">listitem</sgmltag>
      <sgmltag class="starttag">para</sgmltag>item<sgmltag class="endtag">para</sgmltag>
   <sgmltag class="endtag">listitem</sgmltag>
   <sgmltag class="starttag">listitem</sgmltag>
      <sgmltag class="starttag">para</sgmltag>item<sgmltag class="endtag">para</sgmltag>
   <sgmltag class="endtag">listitem</sgmltag>
<sgmltag class="endtag">orderedlist</sgmltag>
</programlisting></entry>
              <entry><orderedlist>
                  <listitem>
                    <para>item</para>
                  </listitem>
                  <listitem>
                    <para>item</para>
                  </listitem>
                </orderedlist></entry>
            </row>
            <row>
              <entry>Segmented List</entry>
              <entry><programlisting>
<sgmltag class="starttag">segmentedlist</sgmltag>
   <sgmltag class="starttag">title</sgmltag>Binary to decimal conversion<sgmltag class="endtag">title</sgmltag>
   <sgmltag class="starttag">segtitle</sgmltag>Binary<sgmltag class="endtag">segtitle</sgmltag>
   <sgmltag class="starttag">segtitle</sgmltag>Decimal<sgmltag class="endtag">segtitle</sgmltag>
   <sgmltag class="endtag">seglistitem</sgmltag><sgmltag class="starttag">seg</sgmltag>00<sgmltag class="endtag">seg</sgmltag><sgmltag class="starttag">seg</sgmltag>0<sgmltag class="endtag">seg</sgmltag>
   <sgmltag class="endtag">seglistitem</sgmltag>
   <sgmltag class="starttag">seglistitem</sgmltag><sgmltag class="starttag">seg</sgmltag>01<sgmltag class="endtag">seg</sgmltag><sgmltag class="starttag">seg</sgmltag>1<sgmltag class="endtag">seg</sgmltag>
   <sgmltag class="endtag">seglistitem</sgmltag>
   <sgmltag class="starttag">seglistitem</sgmltag><sgmltag class="starttag">seg</sgmltag>10<sgmltag class="endtag">seg</sgmltag><sgmltag class="starttag">seg</sgmltag>2<sgmltag class="endtag">seg</sgmltag>
   <sgmltag class="endtag">seglistitem</sgmltag>
<sgmltag class="endtag">segmentedlist</sgmltag>
</programlisting></entry>
              <entry><segmentedlist>
                  <title>Binary to Decimal Conversion</title>
                  <segtitle>Binary</segtitle>
                  <segtitle>Decimal</segtitle>
                  <seglistitem>
                    <seg>00</seg>
                    <seg>0</seg>
                  </seglistitem>
                  <seglistitem>
                    <seg>01</seg>
                    <seg>1</seg>
                  </seglistitem>
                  <seglistitem>
                    <seg>10</seg>
                    <seg>2</seg>
                  </seglistitem>
                </segmentedlist></entry>
            </row>
            <row>
              <entry>Variable List</entry>
              <entry><programlisting>
<sgmltag class="starttag">variablelist</sgmltag>
   <sgmltag class="starttag">varlistentry</sgmltag>
      <sgmltag class="starttag">term</sgmltag>Entry 1<sgmltag class="endtag">term</sgmltag>
      <sgmltag class="starttag">listitem</sgmltag>
         <sgmltag class="starttag">para</sgmltag>Description<sgmltag class="endtag">para</sgmltag>
      <sgmltag class="endtag">listitem</sgmltag>
   <sgmltag class="endtag">varlistentry</sgmltag>
   <sgmltag class="starttag">varlistentry</sgmltag>
      <sgmltag class="starttag">term</sgmltag>Entry 2<sgmltag class="endtag">term</sgmltag>
      <sgmltag class="starttag">listitem</sgmltag>
         <sgmltag class="starttag">para</sgmltag>Description<sgmltag class="endtag">para</sgmltag>
      <sgmltag class="endtag">listitem</sgmltag>
   <sgmltag class="endtag">varlistentry</sgmltag>
<sgmltag class="endtag">variablelist</sgmltag>
</programlisting></entry>
              <entry><variablelist>
                  <varlistentry>
                    <term>Entry 1</term>
                    <listitem>
                      <para>Description</para>
                    </listitem>
                  </varlistentry>
                  <varlistentry>
                    <term>Entry 2</term>
                    <listitem>
                      <para>Description</para>
                    </listitem>
                  </varlistentry>
                </variablelist></entry>
            </row>
            <row>
              <entry>Simple Lists</entry>
              <entry><programlisting>
<sgmltag class="starttag">simplelist type="horiz" columns="3"</sgmltag>
   <sgmltag class="starttag">member</sgmltag>1<sgmltag class="endtag">member</sgmltag>
   <sgmltag class="starttag">member</sgmltag>2<sgmltag class="endtag">member</sgmltag>
   <sgmltag class="starttag">member</sgmltag>3<sgmltag class="endtag">member</sgmltag>
   <sgmltag class="starttag">member</sgmltag>4<sgmltag class="endtag">member</sgmltag>
   <sgmltag class="starttag">member</sgmltag>5<sgmltag class="endtag">member</sgmltag>
   <sgmltag class="starttag">member</sgmltag>6<sgmltag class="endtag">member</sgmltag>
<sgmltag class="endtag">simplelist</sgmltag>
<sgmltag class="starttag">simplelist type="inline"</sgmltag>
   <sgmltag class="starttag">member</sgmltag>A<sgmltag class="endtag">member</sgmltag>
   <sgmltag class="starttag">member</sgmltag>B<sgmltag class="endtag">member</sgmltag>
   <sgmltag class="starttag">member</sgmltag>C<sgmltag class="endtag">member</sgmltag>
   <sgmltag class="starttag">member</sgmltag>D<sgmltag class="endtag">member</sgmltag>
   <sgmltag class="starttag">member</sgmltag>E<sgmltag class="endtag">member</sgmltag>
   <sgmltag class="starttag">member</sgmltag>F<sgmltag class="endtag">member</sgmltag>
<sgmltag class="endtag">simplelist</sgmltag>
</programlisting></entry>
              <entry><simplelist columns="3" type="horiz">
                  <member>1</member>
                  <member>2</member>
                  <member>3</member>
                  <member>4</member>
                  <member>5</member>
                  <member>6</member>
                </simplelist><simplelist type="inline">
                  <member>A</member>
                  <member>B</member>
                  <member>C</member>
                  <member>D</member>
                  <member>E</member>
                  <member>F</member>
                </simplelist></entry>
            </row>
            <row>
              <entry>Pictures</entry>
              <entry>(NA)</entry>
              <entry>See <xref linkend="inserting-pictures"/></entry>
            </row>
            <row>
              <entry>Glossary</entry>
              <entry><programlisting>
<sgmltag class="starttag">glossentry</sgmltag>
   <sgmltag class="starttag">glossterm</sgmltag>Term<sgmltag class="endtag">glossterm</sgmltag>
   <sgmltag class="starttag">glossdef</sgmltag>
      <sgmltag class="starttag">para</sgmltag>Definition<sgmltag class="endtag">para</sgmltag>
   <sgmltag class="endtag">glossdef</sgmltag>
<sgmltag class="endtag">glossentry</sgmltag></programlisting></entry>
              <entry>(See the glossary at the end of this document)</entry>
            </row>
            <row>
              <entry>Crossed References</entry>
              <entry><programlisting>
<sgmltag class="starttag">section id="secao"</sgmltag>
...
<sgmltag class="endtag">section</sgmltag>
<sgmltag class="starttag">section id="reference the other section"</sgmltag>
...
<sgmltag class="starttag">para</sgmltag>Please, see<sgmltag
class="starttag">xref linkend="secao" /</sgmltag> for more information.</programlisting></entry>
              <entry>(NA)</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

    </section>

  </section>

  <section id="encoding-index">
    <title>Encoding Indexes</title>

    <indexterm zone="encoding-index"> 
      <primary>edition</primary>
      <secondary>index</secondary>
    </indexterm>

    <para>The generation of indexes depends on the markups inserted in
    the text.</para>

    <para>Such markups will be processed afterwards by an external tool and 
    will generate the index. An example of such a tool is the 
    <filename>collateindex.pl</filename> script (see <xref
    linkend="tools-compile"/>). Details about the process used to generate
    these indexes are shown in <xref linkend="automatic-indexes"/>.</para>

    <para>The indexes have nesting levels. The markup of an index is done by the
    code <xref
    linkend="example-code-index"/>.</para>

    <example id="example-code-index">
      <title>Code for the generation of an index</title>
      <programlisting>
<sgmltag class="starttag">indexterm</sgmltag>
   <sgmltag class="starttag">primary</sgmltag>Main level<sgmltag class="endtag">primary</sgmltag>
   <sgmltag class="starttag">secondary</sgmltag>Second level<sgmltag class="endtag">secondary</sgmltag>
   <sgmltag class="starttag">tertiary</sgmltag>Third level<sgmltag class="endtag">tertiary</sgmltag>
<sgmltag class="endtag">indexterm</sgmltag>
      </programlisting>
    </example>

    <para>It is possible to refer to chapters, sections, and other parts
    of the document using the <glossterm>attribute</glossterm> <sgmltag
    class="attribute">zone</sgmltag>.</para>

    <example id="index-zone">
      <title>Use of the attribute <sgmltag class="attribute">zone</sgmltag></title>
      <programlisting>
<sgmltag class="starttag">section id="encoding-index"</sgmltag>
    <sgmltag class="starttag">title</sgmltag>Encoding Indexes<sgmltag class="endtag">title</sgmltag>

    <sgmltag class="starttag">indexterm zone="encoding-index"</sgmltag>
      <sgmltag class="starttag">primary</sgmltag>edition<sgmltag class="endtag">primary</sgmltag>
      <sgmltag class="starttag">secondary</sgmltag>index<sgmltag class="endtag">secondary</sgmltag>
    <sgmltag class="endtag">indexterm</sgmltag>

    <sgmltag class="starttag">para</sgmltag>The generation of indexes depend on the inserted markups on the text. <sgmltag class="endtag">para</sgmltag>
      </programlisting>
    </example>

    <para>The <xref linkend="index-zone"/> has the code used to generate the 
    entry of this edition on the index. In fact, since the attribute 
    <sgmltag class="attribute">zone</sgmltag> is used, the index statement 
    could be located anywhere in the document or even in a separate file.
    </para> 

    <para>However, to facilitate maintenance the entries for the index were all 
    placed after the text to which it refers.
    </para> 

    <example>
      <title>Usage of values <sgmltag class="attvalue">startofrange</sgmltag> and
      <sgmltag class="attvalue">endofrange</sgmltag> on the attribute<sgmltag
      class="attribute">class</sgmltag></title>
      <programlisting>
    <sgmltag class="starttag">para</sgmltag>Typing the text normally sometimes there's the need of 
   <sgmltag class="starttag">indexterm class="startofrange" id="example-band-index"</sgmltag>
      <sgmltag class="starttag">primary</sgmltag>examples<sgmltag class="endtag">primary</sgmltag>
      <sgmltag class="starttag">secondary</sgmltag>index<sgmltag class="endtag">secondary</sgmltag>
   <sgmltag class="endtag">indexterm</sgmltag>
   mark large amounts of text.<sgmltag class="endtag">para</sgmltag>

   <sgmltag class="starttag">para</sgmltag>Keep inserting the paragraphs normally.<sgmltag class="endtag">para</sgmltag>

   <sgmltag class="starttag">para</sgmltag>Until the end of the section intended
   to be indexed.
   <sgmltag class="starttag">indexterm startref="example-band-index" class="endofrange"</sgmltag>.
   <sgmltag class="endtag">para</sgmltag></programlisting>
    </example>

  </section>

  <section id="inserting-pictures">
    <title>Inserting Pictures</title>

    <indexterm zone="inserting-pictures">
      <primary>graphics</primary>
      <secondary>inserting</secondary>
      <tertiary><sgmltag class="starttag">graphic</sgmltag></tertiary>
    </indexterm>
    <indexterm zone="inserting-pictures">
      <primary>figures</primary>
      <secondary>inserting</secondary>
      <tertiary><sgmltag class="starttag">figure</sgmltag></tertiary>
    </indexterm>


    <para>It is necessary to insert pictures for all media the
      document will be published for.</para>

    <para>If you use the TeX format you'll need the images as a
    PostScript file. For online publishing you can use any kind of
    common image file, such as <acronym>JPG</acronym>, 
    <acronym>GIF</acronym> or <acronym>PNG</acronym>.</para> 

    <para>
      The easiest way to insert pictures is to use the
      <sgmltag class="attribute">fileref</sgmltag> attribute. Usually
      pictures are generated
      in <acronym>JPG</acronym> and in PostScript (PS or EPS).
   </para>

    <example id="ex-picture-fileref">
      <title>Inserting a picture</title>
      <programlisting>
<sgmltag class="starttag">figure</sgmltag>
   <sgmltag class="starttag">title</sgmltag>Picture's Title<sgmltag class="endtag">title</sgmltag>
   <sgmltag class="starttag">graphic fileref="images/file"</sgmltag><sgmltag class="endtag">graphic</sgmltag>
<sgmltag class="endtag">figure</sgmltag>
</programlisting>
    </example>

    <para>Replacing <sgmltag class="starttag">figure</sgmltag> by
    <sgmltag class="starttag">informalfigure</sgmltag> eliminates the need to
    insert a title for the picture.</para>

    <para>There's still the <sgmltag class="attribute">float</sgmltag>
    attribute on which the value <literal>0</literal> indicates that the
    picture should be placed exactly where the tag appears. The
    value <literal>1</literal> allows the picture to be moved to a more
    convenient location (this location can be described on the style
    sheet used or even can be controlled by the application being
    used).</para> 
    
	 <section id="acceptedgfx">
      <title>Graphics formats</title>
      <para> When submitting graphics to the LDP, please submit one
      set of graphics in <filename>.eps</filename>, and another in
      <filename moreinfo="none">.gif</filename>, <filename
      moreinfo="none">.jpg</filename> or <filename moreinfo="none">
      .png</filename>. The preferred format is <filename moreinfo="none">
      .png</filename> or <filename moreinfo="none">.jpg</filename> due to
      patent problems with <filename moreinfo="none">.gif</filename>.
      </para>
      <para>
      You can use <filename moreinfo="none">.jpg</filename> file for
      continuous-tone images such as photos or images with gradual
      changes in color.  Use <filename moreinfo="none">.png</filename>
      for simple images like diagrams, some screen shots, and images
      with a low number of colors.
      </para>
    </section>

    <section id="inserting-figures-mediaobject">
      <title>Alternative Methods</title>

      <indexterm zone="inserting-figures-mediaobject">
        <primary>graphics</primary>
        <secondary>inserting</secondary>
        <tertiary><sgmltag class="starttag">mediaobject</sgmltag></tertiary>
      </indexterm>
      <indexterm zone="inserting-figures-mediaobject">
        <primary>figures</primary>
        <secondary>inserting</secondary>
        <tertiary><sgmltag class="starttag">mediaobject</sgmltag></tertiary>
      </indexterm>

      <para>The first alternative to <xref linkend="ex-picture-fileref"/> is
      to eliminate the <sgmltag class="starttag">figure</sgmltag> or
      <sgmltag class="starttag">informalfigure</sgmltag> elements.</para>

      <para>Another interesting alternative when you have decided to publish 
      the text on media where pictures are not accepted, is the use of a
      wrapper, <sgmltag class="starttag">imageobject</sgmltag>.</para>

      <example id="former-figure-imageobject">
        <title>Using <sgmltag class="starttag">imageobject</sgmltag></title>
        <programlisting>
<sgmltag class="starttag">figure</sgmltag>
   <sgmltag class="starttag">title</sgmltag>Title<sgmltag class="endtag">title</sgmltag>
   <sgmltag class="starttag">mediaobject</sgmltag>
      <sgmltag class="starttag">imageobject</sgmltag>
         <sgmltag class="starttag">imagedata fileref="images/file.eps" format="eps"</sgmltag>
      <sgmltag class="endtag">imageobject</sgmltag>
      <sgmltag class="starttag">imageobject</sgmltag>
         <sgmltag class="starttag">imagedata fileref="images/file.jpg" format="jpg"</sgmltag>
      <sgmltag class="endtag">imageobject</sgmltag>
      <sgmltag class="starttag">textobject</sgmltag>
         <sgmltag class="starttag">phrase</sgmltag>Here there's an image of this example<sgmltag class="endtag">phrase</sgmltag>
      <sgmltag class="endtag">textobject</sgmltag>
      <sgmltag class="starttag">caption</sgmltag><sgmltag class="starttag">para</sgmltag>Image Description. Optional. <sgmltag class="endtag">para</sgmltag><sgmltag class="endtag">caption</sgmltag>
   <sgmltag class="endtag">mediaobject</sgmltag>
<sgmltag class="endtag">figure</sgmltag>
</programlisting>
      </example>

      <para>Files using the following formats are available <simplelist type="inline">
        <member>BMP</member>
        <member>CGM-BINARY</member>
        <member>CGM-CHAR</member>
        <member>CGM-CLEAR</member>
        <member>DITROFF</member>
        <member>DVI</member>
        <member>EPS</member>
        <member>EQN</member>
        <member>FAX</member>
        <member>GIF</member>
        <member>GIF87A</member>
        <member>GIF89A</member>
        <member>IGES</member>
        <member>JPEG</member>
        <member>JPG</member>
        <member>LINESPECIFIC</member>
        <member>PCX</member>
        <member>PIC</member>
        <member>PS</member>
        <member>SGML</member>
        <member>TBL</member>
        <member>TEX</member>
        <member>TIFF</member>
        <member>WMF</member>
        <member>WPG</member>
      </simplelist>.</para>

      <para>This method presents an advantage: a better control of the 
      application. The elements <sgmltag class="starttag">imageobject</sgmltag>
      are consecutively tested until one of them is accepted. If the
      output format does not support images the <sgmltag
      class="starttag">textobject</sgmltag> element will be used. However, the biggest
      advantage in usage of the format <xref
      linkend="former-figure-imageobject"/> is that in DocBook
      <literal>5.0</literal>, the <sgmltag
      class="starttag">graphic</sgmltag> element will cease to exist.</para> 

      <para>As a disadvantage, there is the need for more than one representation
      code of the same information. It is up to the author to decide which
      method to implement illustrations and pictures on the document, but
      for compatibility with future versions <emphasis>I
      recommend</emphasis> the use of this method for pictures and
      graphics.</para> 

    </section>

  </section>

  <section id="listings">
    <title>Listings and program codes</title>

    <indexterm zone="listings">
      <primary>listings</primary>
      <secondary>inserting</secondary>
    </indexterm>

    <para>
      This feature allows authors to show parts of code.  It also
      lets allows the author to insert comments within the code using
      callouts.
    </para> 
    
    <para>This was used to demonstrate how a catalog
    file is configured (see <xref linkend="making-catalogs"/>).
    That code is shown below. If the callout feature 
    is not needed, it is possible to eliminate the areas between 
    <sgmltag class="starttag">areaspec</sgmltag> and <sgmltag
    class="starttag">calloutlist</sgmltag>.</para>

    <programlisting id="ex-listing">
&lt;example id="sample-catalog"&gt;
  &lt;title&gt;Catalog Sample&lt;/title&gt;
  &lt;programlistingco&gt;
    &lt;areaspec&gt;
      &lt;area coords="1" id="ex.catalog.comment"&gt;
      &lt;area coords="5" id="ex.catalog.definition"&gt;
      &lt;area coords="11" id="ex.catalog.eof"&gt;
    &lt;/areaspec&gt;
        &lt;programlisting&gt;
-- Catalogs for the Conectiva S.A. Style --

OVERRIDE YES
 
PUBLIC "-//Conectiva SA//DTD books V1.0//EN" "/home/ldp/estilos/livros.dtd" 

DELEGATE "-//OASIS" "/home/ldp/SGML/dtds/catalog.dtd"

DOCTYPE BOOK /home/ldp/SGML/dtds/docbook/db31/docbook.dtd
 
-- EOF -- 
        &lt;/programlisting&gt;
    &lt;calloutlist&gt;
      &lt;callout arearefs="ex.catalog.comment"&gt;
        &lt;to&gt; Comment. Comments begin with &lt;quote&gt;--&lt;/quote&gt; 
        and follows to the end of the line. &lt;/to&gt; 
      &lt;/callout&gt;
      &lt;callout arearefs="ex.catalog.definition"&gt;
        &lt;to&gt; The public type association 
           &lt;parameter class="option"&gt;"-//Conectiva SA//DTD books V1.0//EN"&lt;/parameter&gt; 
           with the file &lt;filename&gt;books.dtd&lt;/filename&gt; on the directory
           &lt;filename class="directory"&gt;/home/ldp/estilos&lt;/filename&gt;. &lt;/para&gt; 
      &lt;/callout&gt;
      &lt;callout arearefs="ex.catalog.eof"&gt;
        &lt;para&gt; Comment informing the end of the file. &lt;/para&gt;
      &lt;/callout&gt;
    &lt;/calloutlist&gt;
  &lt;/programlistingco&gt;
&lt;/example&gt;
    </programlisting>

    <indexterm zone="ex-listing">
      <primary>listings</primary>
      <secondary>inserting</secondary>
      <tertiary>example</tertiary>
    </indexterm>


    <para>The listings can be directly inserted in the document's body without 
    the need of the <sgmltag class="starttag">example</sgmltag>
    or <sgmltag class="starttag">para</sgmltag> elements.</para>

    <para>The calling coordinates' specifications are done with reference to the
    code line which will be commented upon.</para>

  </section>

<section id="metadata-markup">
<title>Markup for Metadata</title>

<section id="crediting">
	<title>Crediting Translators, Converters and Co-authors</title>

    <para>There are several ways that these folks, as well as other
    contributors to your document, can be given some recognition for the
    help they've given you.</para>

    <section id="crediting-othercredit">
    <title><sgmltag class="starttag">othercredit</sgmltag></title>

      <para>All translators, converters and co-authors 
		should be credited with an
      <sgmltag class="starttag">othercredit</sgmltag> tag entry.
      To properly credit a translator or converter, use the
      <sgmltag class="starttag">othercredit</sgmltag> tag with 
		the <sgmltag class="starttag">role</sgmltag>
      attribute set to <quote>converter</quote> or 
		<quote>translator</quote>,
      as indicated in the example below:</para>

      <programlisting>
<sgmltag class="starttag">othercredit role='converter'</sgmltag>
  <sgmltag class="starttag">firstname</sgmltag>David<sgmltag class="endtag">firstname</sgmltag>
  <sgmltag class="starttag">surname</sgmltag>Merrill<sgmltag class="endtag">surname</sgmltag>
  <sgmltag class="starttag">contrib</sgmltag>Conversion from HTML to DocBook v3.1 (SGML).<sgmltag class="endtag">contrib</sgmltag>
<sgmltag class="endtag">othercredit</sgmltag></programlisting>
    </section>

    <section id="crediting-version">
      <title><sgmltag class="starttag">revremark</sgmltag>s</title>

      <para>Within the <sgmltag class="starttag">revision</sgmltag> 
		tag hierarchy is a tag called <sgmltag 
		class="starttag">revremark</sgmltag>. Within this tag,
      you can make any brief notes you wish about each 
		particular revision of your document.</para>
    </section>
  </section>

    <section id="acceptedrev">
      <title> Revision History </title>
      <para> The <sgmltag class="starttag">revhistory</sgmltag> tag should be
      used to denote the various revisions of the document. Specify the
      date, revision number and comments regarding what has changed.</para>
      <para>
       Revisions should be listed with the most-recent version at the
       top (list in descending order).
      </para>
    </section>

    <section id="accepteddates">
      <title> Date formats </title>
      <para> The <sgmltag class="starttag">pubdate</sgmltag> tag in
      your header should list the publication date of this particular
      version of the document (coincide with the revision date).
      It should be in the following format: </para>
      <programlisting format="linespecific"><sgmltag class="starttag">pubdate</sgmltag>2002-04-25<sgmltag class="endtag">pubdat
e</sgmltag></programlisting>
      <para>
        The date is in the format YYYY-MM-DD, which is one of the
        <ulink url="http://www.w3.org/TR/NOTE-datetime">ISO 8601</ulink> standard
        formats for representing dates.  For you Yanks out there (me too),
        think of it as going from the largest unit of time to
        the smallest.
      </para>
    </section>

    <section id="sampleai">
      <title> Sample Article (or Book) Information Element </title>
      <para> Here is a sample of a complete DocBook (SGML or XML)
      <sgmltag class="starttag">articleinfo</sgmltag>
      element which contains some of the items and constructs previously
      described. </para>
      <programlisting format="linespecific">
&lt;articleinfo&gt;

  &lt;!-- Use "HOWTO", "mini HOWTO", "FAQ" in title, if appropriate --&gt;
  &lt;title&gt;Sample HOWTO&lt;/title&gt;

  &lt;author&gt;
     &lt;firstname&gt;your_firstname&lt;/firstname&gt;
     &lt;surname&gt;your_surname&lt;/surname&gt;
     &lt;affiliation&gt;
        &lt;!-- Valid email...spamblock/scramble if so desired --&gt;
        &lt;address&gt;&lt;email&gt;xxx (at) xxx.xxx&lt;/email&gt;&lt;/address&gt;
     &lt;/affiliation&gt;
   &lt;/author&gt;

   &lt;pubdate&gt;2002-04-25&lt;/pubdate&gt;

   &lt;revhistory&gt;
     &lt;revision&gt;
        &lt;revnumber&gt;1.0&lt;/revnumber&gt;
        &lt;date&gt;2002-04-25&lt;/date&gt;
        &lt;authorinitials&gt;xx&lt;/authorinitials&gt;
        &lt;revremark&gt;first official release&lt;/revremark&gt;
     &lt;/revision&gt;
     &lt;revision&gt;
        &lt;revnumber&gt;0.9&lt;/revnumber&gt;
        &lt;date&gt;2002-04-15&lt;/date&gt;
        &lt;authorinitials&gt;xx&lt;/authorinitials&gt;
        &lt;revremark&gt;first draft&lt;/revremark&gt;
     &lt;/revision&gt;
   &lt;/revhistory&gt;

   &lt;!-- Provide a good abstract; a couple of sentences is sufficient --&gt;
   &lt;abstract&gt;
      &lt;para&gt;
       This is a sample DocBook (SGML or XML) HOWTO which has been
       constructed to serve as a template.
      &lt;/para&gt;
   &lt;/abstract&gt;

&lt;/articleinfo&gt;</programlisting>
    </section>
</section> <!-- end of metadata-markup -->

  <section id="tools-hints">
    <title>Tools &amp; Hints</title>
    
    <section id="tools-makingnotes">
      <title>Making notes on the text while it is being written</title> 
       <indexterm zone="tools-writing">
        <primary>entities</primary>
        <secondary>parameters</secondary>
        <tertiary>usage</tertiary>
      </indexterm>
      
      <para>An important feature while writing a text is the ability
      to check whether or not it will be presented in the final
      draft. It's common to have several parts of the text marked as
      draft, especially when updating an already existing
      document.</para> 
      
      <para>
        DocBook allows the insertions of specific parts of text in
        several places of the document based on the context. Sometimes
        for an upgrading we need to see how the document looks like or
        just have sketches of a new session or chapter, but we don't
        want this sketch to appear in the final draft.
     </para> 
      
      <para>With the use of parameter entities, you can include or eliminate
      these drafts by altering only one line at the beginning of a
      document.</para> 
      
      <example id="ex-entity-parameters">
        <title>Use of parameter entities</title>
        <programlisting>
<sgmltag class="starttag">!entity % review "INCLUDE"</sgmltag>
...
<sgmltag class="starttag">![%review;[
&lt;para&gt;This paragraph will be included on the draft when the entity
"review" is defined with the value "INCLUDE". &lt;/para&gt;
]]</sgmltag>
        </programlisting>
      </example>
      
      <indexterm zone="ex-entity-parameters">
        <primary>entities</primary>
        <secondary>parameters</secondary>
        <tertiary>example</tertiary>
      </indexterm>

      <para>The entity <literal>review</literal> might have several
      texts defined, as in <xref linkend="ex-entity-parameters"/>. When
      the changes to the text are considered final, you need
      only to remove parts of the text between the
      3<superscript>rd.</superscript> and
      6<superscript>th.</superscript> lines.</para>

      <para>To keep the draft definitions and hide the text in
      the final draft, just alter the specification of the entity from
      <literal>INCLUDE</literal> to <literal>IGNORE</literal>.</para> 
    </section>

    <section id="tools-reuse">
      <title>Re-using parts of documents</title>


      <indexterm zone="tools-reuse">
        <primary>documents</primary>
        <secondary>re-use</secondary>
      </indexterm>

      <para>An important feature of <glossterm>external
      entities</glossterm> is re-using text and
      documents.</para>

      <para>This makes it possible to create files with text
        that are used several times (e.g. licenses and company policies)
        or simply include files in the appropriate place.</para>
     
      <para>An example and application of this was used
      previously in <xref linkend="ex-entity-external-index"/>. Another example is
      the <glossterm>DocBook</glossterm> code of this HOWTO.</para>  
    </section>

    <section id="namedfiles">
      <title>Naming separate HTML files</title>
      <para>By default, when separate HTML files are made, the SGML
      processor will assign arbitrary names to the resulting files.
      This can be confusing to readers who may bookmark a page only to
      have it change.  Whatever
      your reasoning, here's how to make separate files named the way
      you want:</para> 
      <para>In your first <sgmltag class="starttag">article</sgmltag>
      tag (which should be the only one) include an id parameter and
      call it index.  This will make your tag look like this:</para> 

      <programlisting format="linespecific">
<sgmltag class="starttag">article id="index"</sgmltag>
</programlisting>

      <para>Do not modify the first 
		<sgmltag class="starttag">chapter</sgmltag>
      tag, as it's usually an introduction and you
      want that on the first page.  For each other <sgmltag
      class="starttag">section</sgmltag> tag, include the id parameter
      and name it.  A name should include only alphanumeric characters,
      and it should be short enough to understand what it is.</para> 

<programlisting format="linespecific">
<sgmltag class="starttag">chapter id="tips"</sgmltag>
</programlisting>
</section>

</section>

</appendix>
