    <section id="usingldpxsl">
      <title>Using the LDP XSL stylesheets</title>
      <para>When working with DocBook XML, the LDP uses a series of 
      XSL<footnote><para>In truth, "XSL" is actually comprised of three
      components: the <emphasis>XSLT</emphasis> transformation language,
      the <emphasis>XPath</emphasis> expression language (used by XSLT), 
      and XSL Formatting Objects (FO) that are used for describing a page.
      The stylesheets are actually written in XSLT and generate either HTML
      or (for print output) FO. The FO file is then run through a FO processor
      to create the actual print (PDF or PostScript) output. See the
      <ulink url="http://www.w3.org/Style/XSL/WhatIsXSL.html">W3C web 
      site</ulink> for more information.</para></footnote>
      stylesheets to process documents into HTML.  These stylesheets create
      output files using the XML toolset that are similar to those produced by
      the SGML tools using <link linkend="usingldpdsssl">ldp.dsl</link>.
      </para>
      <note>
      <para>At the current time, the LDP XSL stylesheets are still in 
      development and may not have all the functionality found in 
      <filename>ldp.dsl</filename>. Specifically, the XSL-FO stylesheet for 
      creating print documents has not yet been created.  If you need PDF
      or other print output, you will need to use the SGML toolset and
      ldp.dsl.</para>
      </note>
      <para>The major difference between using <filename>ldp.dsl</filename>
      and the XSL stylesheets is the way that the generation of multiple
      files is handled, i.e. the creation of a separate file for each chapter,
      section and appendix.  With the SGML tools, such as
      <emphasis>jade</emphasis> or <emphasis>openjade</emphasis>, the tool
      itself was responsible for generating the separate files. Because of
      this, only a single file, <filename>ldp.dsl</filename> was necessary as
      a customization layer for the standard DocBook DSSSL stylesheets.
      </para>
      <para>With the DocBook XSL stylesheets, generation of multiple files is
      controlled <emphasis>by the stylesheet</emphasis>. If you want to
      generate a single file, you call one stylesheet. If you want to generate
      multiple files, you call a different stylesheet.  For that reason the
      LDP XSL stylesheet distribution is comprised of four files:
      </para>
      <orderedlist>
      <listitem>
      <para><filename>ldp-html.xsl</filename> - stylesheet called to generate
      a <emphasis>single</emphasis> file.
      </para>
      </listitem>
      <listitem>
      <para><filename>ldp-html-chunk.xsl</filename><footnote><para>In XSL
      terminology, the process of generating multiple files is referred to
      as "chunking".</para></footnote> - stylesheet called to generate
      multiple files based on chapter, section and appendix elements.
      </para>
      </listitem>
      <listitem>
      <para><filename>ldp-html-common.xsl</filename> - stylesheet containing
      the actual XSLT transformations. It is called by the other two HTML
      stylesheets and is <emphasis>never</emphasis> directly called.
      </para>
      </listitem>
      <listitem>
      <para><filename>ldp-print.xsl</filename> - stylesheet for generation of
      XSL Formatting Objects for print output. <emphasis>(Currently this 
      file is a placeholder and has not been customized.)</emphasis>
      </para>
      </listitem>
      </orderedlist>
      <para>
      You can find the latest copy of the files at <ulink
      url="http://www.linuxdoc.org/authors/tools/ldp-xsl.zip">http://www.linuxdoc.org/authors/tools/ldp-xsl.zip</ulink>.</para>
      <para>Once you have the file, you may need to do some editing of
      the first few lines based on the location of your DocBook XSL
      files.</para>
      <para>Unzip the files into a directory where you will call them.
      like this:</para>

      <informalexample>
        <screen format="linespecific">
&lt;!DOCTYPE style-sheet PUBLIC "-//James Clark//DTD DSSSL Style Sheet//EN" [
&lt;!ENTITY % html "IGNORE">
&lt;![%html;[
&lt;!ENTITY % print "IGNORE">
&lt;!ENTITY docbook.dsl SYSTEM "docbook.dsl<co id="html"/>" CDATA dsssl&gt;
]]&gt;
&lt;!ENTITY % print "INCLUDE">
&lt;![%print;[
&lt;!ENTITY docbook.dsl SYSTEM "docbook.dsl<co id="print"/>" CDATA dsssl>
]]&gt;
]>
</screen>
        <calloutlist>
          <callout arearefs="html">
            <para>Change the first "docbook.dsl" to read <filename
            moreinfo="none">/usr/lib/sgml/stylesheets/nwalsh-modular/html/docbook.dsl</filename></para> 
          </callout>
          <callout arearefs="print">
            <para>Change the second "docbook.dsl" to read <filename
            moreinfo="none">/usr/lib/sgml/stylesheets/nwalsh-modular/print/docbook.dsl</filename></para> 
          </callout>
        </calloutlist>
      </informalexample>
      <para>If you're using another DSSSL, point those two files to
      the location of the HTML and print DSSSL files.  They're usually
      in directories called html and print.</para> 
      <para>With that complete, you can now generate HTML files:</para>

      <screen format="linespecific">
<prompt>bash$</prompt> <command>mkdir HOWTO-HOWTO ; cd HOWTO-HOWTO</command>
<prompt>bash$</prompt> <command> jade -t sgml -i html -d /usr/lib/sgml/stylesheets/ldp.dsl\#html ../HOWTO-HOWTO.sgml</command>
</screen>

      <para>The first command creates a new directory to put your
      files into.  The second command (the jade one) generates
      individual HTML files for each section of your document.  If you
      are going to something like RTF, you can do this:</para> 

      <screen format="linespecific">
<prompt>bash$</prompt> <command>xsltproc /usr/lib/sgml/stylesheets/ldp.dsl ../HOWTO-HOWTO.sgml</command>
</screen>
    </section>
