<appendix id="app3">
<title>Shell Features</title>

<abstract><para>This document gives an overview of common shell features (the same in every shell flavour) and differing shell features (shell specific features).</para></abstract>
<sect1>
<title>Common features</title>
<para>
The following features are standard in every shell.  Note that the stop, suspend, jobs, bg and fg commands are only available on systems that support job control.
</para>
<table frame="all">
  <title>Common Shell Features</title> 
  <tgroup cols="2" align="left" colsep="1" rowsep="1">
  <thead>
    <row>
      <entry>Command</entry>
      <entry>Meaning</entry>
    </row>
  </thead>
  <tbody>
    <row>
      <entry>&gt;</entry>
      <entry>Redirect output</entry>
    </row>

    <row>
      <entry>&gt;&gt;</entry>
      <entry>Append to file</entry>
    </row>
    <row>
      <entry>&lt;</entry>
      <entry>Redirect input</entry>
    </row>
    <row>
      <entry>&lt;&lt;</entry>
         <entry>"Here" document (redirect input)</entry>
</row>
<row>
<entry>|</entry>
         <entry>Pipe output</entry>
</row>
<row>
<entry>&amp;</entry>
         <entry>Run process in background.</entry>
</row>
<row>
<entry>;</entry>
         <entry>Separate commands on same line</entry>
</row>
<row>
<entry>*</entry>
        <entry>Match any character(s) in filename</entry>
</row>
<row>
<entry>?</entry>
        <entry>Match single character in filename</entry>
</row>
<row>
<entry>[ ]</entry>
         <entry>Match any characters enclosed</entry>
</row>
<row>
 <entry>( )</entry>
         <entry>Execute in subshell</entry>
</row>
<row>
<entry>` `</entry>
         <entry>Substitute output of enclosed command</entry>
</row>
<row>
<entry>" "</entry>
         <entry>Partial quote (allows variable and command expansion)</entry>
</row>
<row>
 <entry>' '</entry>
         <entry>Full quote (no expansion)</entry>
</row>
<row>
<entry>\</entry>
         <entry>Quote following character</entry>
</row>
<row>
 <entry>$var</entry>
         <entry>Use value for variable</entry>
</row>
<row>
<entry>$$</entry>
         <entry>Process id</entry>
</row>
<row>
 <entry>$0</entry>
         <entry>Command name</entry>
</row>
<row>
 <entry>$n</entry>
         <entry>nth argument (n from 0 to 9)</entry>
</row>
<row>
<entry>$*</entry>
         <entry>All arguments as a simple word</entry>
</row>
<row>
 <entry><literal>#</literal></entry>
         <entry>Begin comment</entry>
</row>
<row>
 <entry>bg</entry>
         <entry>Background execution</entry>
</row>
<row>
 <entry>break</entry>
         <entry>Break from loop statements</entry>
</row>
<row>
 <entry>cd</entry>
         <entry>Change directories</entry>
</row>
<row>
 <entry>continue</entry>
        <entry>Resume a program loop</entry>
</row>
<row>
 <entry>echo</entry>
         <entry>Display output</entry>
</row>
<row>
 <entry>eval</entry>
         <entry>Evaluate arguments</entry>
</row>
<row>
<entry>exec</entry>
         <entry>Execute a new shell</entry>
</row>
<row>
<entry>fg</entry>
         <entry>Foreground execution</entry>
</row>
<row>
 <entry>jobs</entry>
         <entry>Show active jobs</entry>
</row>
<row>
 <entry>kill</entry>
         <entry>Terminate running jobs</entry>
</row>
<row>
<entry>newgrp</entry>
         <entry>Change to a new group</entry>
</row>
<row>
 <entry>shift</entry>
         <entry>Shift positional parameters</entry>
</row>
<row>
 <entry>stop</entry>
         <entry>Suspend a background job</entry>
</row>
<row>
<entry>suspend</entry>
        <entry>Suspend a foreground job</entry>
</row>
<row>
 <entry>time</entry>
         <entry>Time a command</entry>
</row>
<row> 
<entry>umask</entry>
         <entry>Set or list file permissions</entry>
</row>
<row> 
<entry>unset</entry>
         <entry>Erase variable or function definitions</entry>
</row>
<row>
 <entry>wait</entry>
         <entry>Wait for a background job to finish</entry>
</row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1><title>Differing features</title>

<para>The table below shows major differences between the standard shell (sh), Korn shell (ksh) and the C shell (csh).</para>  
<note><title>Shell compatibility</title>
<para>Since the Bourne again shell is a superset of sh, all sh commands will also work in bash.  Since the Turbo C shell is a superset of csh, all csh commands will work in tcsh.  For more details on these two popular shells, see man the man pages for these shells on your system.</para></note>
<table frame="all"><title>Differing Shell Features</title>
<tgroup cols="4" align="left" colsep="1" rowsep="1">
<thead>
<row>

<entry>sh</entry>
            <entry>ksh</entry>
                        <entry>csh</entry>
                                    <entry>Meaning/Action</entry>
</row>
</thead>
<tbody>
<row> 
<entry>$</entry>
            <entry>$</entry>
                        <entry>%</entry>
                                    <entry>Prompt</entry>
</row>
<row>
<entry> </entry><entry> </entry><entry>&gt;!</entry><entry>Force redirection</entry>
</row>
<row>
<entry> </entry><entry> </entry><entry>&gt;&gt;!</entry><entry>Force append</entry>
</row>

<row>
<entry>&gt; file 2&gt;&amp;1</entry>
            <entry>> file 2&gt;&amp;1</entry>
                        <entry>&gt;&amp; file</entry>
                                    <entry>Combine stdout and stderr</entry>
</row>
<row>
<entry> </entry><entry> </entry>                        <entry>{ }</entry>
<entry>              Expand elements in list</entry>
</row>
<row>
<entry>` `</entry>
            <entry>$( )</entry>
                        <entry>` `</entry>
                                    <entry>Substitute output of enclosed command</entry>
</row>
<row>
 <entry>$HOME</entry>
            <entry>$HOME</entry> 
                        <entry>$home</entry> 
                                    <entry>Home directory</entry>
</row>
<row>
<entry> </entry>            <entry>~</entry>
                        <entry>~</entry>
                                    <entry>Home directory symbol</entry>
</row>
<row>
 <entry>var=value</entry>
            <entry>var=value</entry>
                        <entry>set var=value</entry>
                                    <entry>Variable assignment</entry>
</row>
<row>
 <entry>export var</entry>
            <entry>export var=val</entry>
                        <entry>setenv var val</entry>
                                    <entry>Set environment variable</entry>
</row>
<row><entry> </entry>
            <entry>${nn}</entry><entry> </entry>
                                    <entry>More than 9 args can be referenced</entry>
</row>
<row>
 <entry>"$@"</entry>
            <entry>"$@"</entry><entry> </entry>
                                    <entry>All args as separate words</entry>
</row>
<row> 
<entry><literal>$#</literal></entry>
            <entry><literal>$#</literal></entry>
                        <entry><literal>$#argv</literal></entry>
                                    <entry>Number of arguments</entry>
</row>
<row>
 <entry>$?</entry>
            <entry>$?</entry>
                        <entry>$status</entry>
                                    <entry>Exit status</entry>
</row>
<row>
 <entry>$!</entry>
            <entry>$!</entry><entry> </entry>
                                    <entry>Background exit status</entry>
</row>
<row>
 <entry>$-</entry>
            <entry>$-</entry><entry> </entry>
                                    <entry>Current options</entry>
</row>
<row>
 <entry>.  file</entry>
            <entry>.   file</entry>
                        <entry>source file</entry>
                                    <entry>Read commands in file</entry>
</row>
<row>
<entry> </entry>
            <entry>alias x=y</entry>
                        <entry>alias x y</entry>
                                    <entry>Name x stands for y</entry>
</row>
<row>
 <entry>case</entry>
            <entry>case</entry>
                        <entry>switch/case</entry>
                                    <entry>Choose alternatives</entry>
</row>
<row><entry> </entry>
            <entry>cd ~-</entry>
                        <entry>popd/pushd</entry>
                                    <entry>Switch directories</entry>
</row>
<row>
 <entry>done</entry>
            <entry>done</entry>
                        <entry>end</entry>
                                    <entry>End a loop statement</entry>
</row>
<row>
 <entry>esac</entry>
            <entry>esac</entry>
                        <entry>endsw</entry>
                                    <entry>End case or switch</entry>
</row>
<row>
 <entry>exit [n]</entry>
            <entry>exit [n]</entry>
                        <entry>exit [(expr)]</entry>
                                    <entry>Exit with a status</entry>
</row>
<row>
 <entry>for/do</entry>
            <entry>for/do</entry>
                        <entry>foreach</entry>
                                    <entry>Loop through variables</entry>
</row>
<row><entry> </entry>
            <entry>print -r</entry>
                        <entry>glob</entry>
                                    <entry>Ignore echo escapes</entry>
</row>

<row>
 <entry>hash</entry>
            <entry>alias -t</entry>
                        <entry>hashstat</entry>
                                    <entry>Display hashed commands (tracked aliases)</entry>
</row>
<row>
 <entry>hash cmds</entry>
            <entry>alias -t cmds</entry>
                        <entry>rehash</entry>
                                    <entry>Remember command locations</entry>
</row>
<row> 
<entry>hash -r</entry><entry> </entry>
                        <entry>unhash</entry>
                                    <entry>Forget command locations</entry>
</row>
<row><entry> </entry>
            <entry>history</entry>
                        <entry>history</entry>
                                    <entry>List previous commands</entry>
</row>
<row><entry> </entry>
            <entry>r</entry>
                        <entry>!!</entry>
                                    <entry>Redo previous command</entry>
</row>
<row><entry> </entry>
            <entry>r str</entry>
                        <entry>!str</entry>
                                    <entry>Redo command that starts with str</entry>
</row>
<row><entry> </entry>
            <entry>r x=y cmd</entry>
                        <entry>!cmd:s/x/y/</entry>
                                    <entry>Edit command, then execute</entry>
</row>
<row>
 <entry>if [ $i -eq 5 ]</entry>
            <entry>if ((i==5))</entry>
                        <entry>if ($i==5)</entry>
                                    <entry>Sample if statement</entry>
</row>
<row>
 <entry>fi</entry>
            <entry>fi</entry>
                        <entry>endif</entry>
                                    <entry>End if statement</entry>
</row>
<row>
 <entry>ulimit</entry>
            <entry>ulimit</entry>
                        <entry>limit</entry>
                                    <entry>Set resource limits</entry>
</row>
<row>
 <entry>pwd</entry>
            <entry>pwd</entry>
                        <entry>dirs</entry>
                                    <entry>Print working directory</entry>
</row>
<row>
 <entry>read</entry>
            <entry>read</entry>
                        <entry>$&lt;</entry>
                                    <entry>Read from terminal</entry>
</row>
<row>
 <entry>trap 2</entry>
            <entry>trap 2</entry>
                        <entry>onintr</entry>
                                    <entry>Ignore interrupts</entry>
</row>
<row><entry> </entry>
            <entry>unalias</entry>
                        <entry>unalias</entry>
                                    <entry>Remove aliases</entry>
</row>
<row>
 <entry>until</entry>
            <entry>until</entry><entry> </entry>
                                    <entry>Begin until loop</entry>
</row>
<row>
 <entry>while/do</entry>
            <entry>while/do</entry>
                        <entry>while</entry>
                                    <entry>Begin while loop</entry>
</row>
</tbody>
</tgroup>
</table>


<para>Bash specific features:</para>
<itemizedlist>
<listitem><para>tab: file name completion</para></listitem>
<listitem><para>tab tab: choices</para></listitem>
<listitem><para>navigation through previous commands with arrow-keys (.bash_history)
</para></listitem>
</itemizedlist>
<para>More information:</para> 
<para>You should at least read one manual, being the manual of your shell.  Print it out and take it home, study it whenever you have 5 minutes.</para>
<itemizedlist>
<listitem><para>man sh</para></listitem>
<listitem><para>man bash</para></listitem>
<listitem><para>man csh</para></listitem>
<listitem><para>man tcsh</para></listitem>
<listitem><para>man ksh</para></listitem>
<listitem><para>See appendix 2 for a readinglist.</para></listitem>
</itemizedlist>
</sect1>
</appendix>
