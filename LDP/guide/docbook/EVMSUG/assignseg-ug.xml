<chapter id="evmsassignseg"><title>Assigning a Segment Manager</title>
<para> This chapter discusses  when to use a segment manager, what the different types of segment managers are, and how to assign a segment manager to a disk. </para>		
<sect1 id="whenassign"><title>When to Assign a Segment Manager</title>
	<para>Assigning a segment manager to a disk allows the disk to be subdivided into 
	smaller storage objects called disk segments. The assign command causes a 
	segment manager to create appropriate metadata and expose freespace that the segment manager  
	finds on the disk. You will need to assign segment managers when you have a new disk or 
	when you are switching from one partitioning sheme to another. </para>
<para>EVMS displays disk segments as the following types: </para>
	<itemizedlist><listitem><para>Data: a set of contiguous sectors that has been allocated 
		from a disk and can be used to construct a volume or object.</para></listitem>

		<listitem><para>Freespace: a set of contiguous sectors that are unallocated 
		or not in use. Freespace can be used to create a segment.</para></listitem>

		<listitem><para>Metadata: a set of contiguous sectors that contain 
		information needed by the segment manager.</para></listitem>
	</itemizedlist>
</sect1>
<sect1 id="smtypes"><title>Types of Segment Managers</title>
	<para>There are three types of segment managers in EVMS: DOS, GPT, and S/390. </para>
	<sect2 id="defaultseg"><title>DOS Segment Manager</title>
		<para>The most
		commonly used segment manager is the DOS Segment Manager. This plug-in
		provides support for traditional DOS disk partitioning. The 
		DOS Segment Manager also recognizes and supports the following variations 
		of the DOS partitioning scheme:
		<itemizedlist><listitem><para>OS/2:  an OS/2 disk has additional metadata 
		sectors that contain information needed to reconstruct disk segments.</para></listitem>
			<listitem><para>Embedded partitions: support for BSD, SolarisX86, and UnixWare  
			is sometimes found embedded in primary DOS partitions. 
			The DOS Segment Manager  recognizes and supports these 
			slices as disk segments.</para></listitem></itemizedlist></para>
	</sect2>
	<sect2 id="gptseg"><title>GUID Partitioning Table (GPT) Segment Manager</title>
	    <para>The GUID Partitioning Table (GPT) Segment Manager handles the 
		new GPT partitioning scheme 
		on IA-64 machines. The Intel 
		<citetitle>Extensible Firmware Interface Specification</citetitle>
 		requires that firmware be able to discover partitions and produce logical devices that 
		correspond to disk partitions.  The partitioning scheme described in 
		the specification is called GPT due to the extensive use of 
		Globally Unique Identifier (GUID) tagging. GUID is a 128 bit long 
		identifier, also referred to as a Universally Unique Identifier (UUID).   
		As described in the Intel <citetitle>Wired For Management Baseline Specification</citetitle>,  
		a GUID is a combination of  time and space fields that produce an 
		identifier that is unique across an entire UUID space.  
		These identifiers are used extensively on GPT partitioned disks 
		for tagging entire disks and individual partitions. 
		GPT partitioned disks serve several functions, such as:</para>
	    	<itemizedlist>
	      		<listitem><para>keeping a primary and backup copy of metadata</para>
	      		</listitem>
	      		<listitem><para>replacing msdos partition nesting by allowing many partitions</para>
	      		</listitem>
	      		<listitem><para>using 64 bit logical block addressing</para>
	      		</listitem>
	      		<listitem><para>tagging partitions and disks with GUID descriptors</para>
	      		</listitem>
	    	</itemizedlist>
		
		<para>The GPT Segment Manager scales better to large disks. It provides more redundancy with added reliability and uses unique names. However, the GPT Segment Manager is not compatible with DOS, OS/2, or Windows&reg;. </para></sect2>
			
	<sect2 id="s390sm"><title>S/390 Segment Manager</title>
		<para>The S/390 Segment Manager is used exclusively on System/390 
		mainframes.  The S/390 Segment Manager has the ability to recognize 
		various disk layouts found on an S/390 machine, and provide 
		disk segment support for this architecture. The two most common disk 
		layouts are Linux Disk Layout (LDL) and Common Disk Layout (CDL). </para>

		<para>The principle difference between LDL and CDL is that an LDL disk 
		cannot be further subdivided. An LDL disk will produce a single metadata 
		disk segment and a single data disk segment. There is no freespace on an 
		LDL disk, and you cannot delete or re-size the data segment. A CDL disk can 
		be subdivided into multiple data disk segments 
		because it contains metadata that is missing from an LDL disk, specifically 
		the Volume Table of Contents (vtoc) information.</para>

		<para>The S/390 Segment  Manager is the only segment manager plug-in 
		capable of understanding the unique S/390 disk layouts. The S/390 Segment Manager 
		cannot be assigned or unassigned from a disk. </para></sect2>

	
</sect1>

<sect1 id="assignsegex"><title>Assigning a Segment Manager to an Existing Disk</title>
	<para>When you assign a segment manager to a disk, the segment manager will need to change the basic 
	layout of the disk. This change means that some sectors will be reserved for metadata and the remaining sectors will 
	be made available for creating data disk segments. Metadata sectors are written to disk to save information
	needed by the segment manager;  previous information found on the disk is lost. Before assigning a 
	segment manager to an existing disk, you must remove any existing volume management structures including any 
	previous segment manager.</para>

	
</sect1>

<sect1 id="assignsegnew"><title>Assigning a Segment Manager to a New Disk</title>
	<para>When a new disk is added to a system,
	the disk usually contains no data and has not
	  been partitioned. If this is the case, the disk will show up in EVMS as a compatibility volume because 
	  EVMS cannot tell if the disk is being used as a volume. To assign a segment manager to the disk so that it 
	can be subdivided into smaller disk segment objects, tell EVMS that the disk is not a
	compatibility volume by deleting the volume information.</para> 

	<para>If the new disk was moved from another system, chances are good that the disk already contains 
	metadata. If the disk does contain metadata, the disk will show up in EVMS with storage objects that 
	were produced from the existing metadata. Deleting these objects will allow you to assign a different 
	segment manager to the disk, and you will lose any old data. </para>
</sect1>
	
<sect1 id="assignex"><title>Working through an Example</title>
<para>This section provides a detailed explanation of how to assign a segment manager with EVMS by
working through the scenario below.</para>

	<para>EVMS initially displays the
	physical disks it sees as volumes. Assume that you have added a new disk to the system that EVMS 
	sees as sde. This disk contains no data and has not been subdivided (no partitions). EVMS assumes that this 
	disk is a compatibility volume known as <filename>/dev/evms/sde</filename>. </para>



<blockquote><example><title>Assign the DOS Segment Manager</title>
<para>Assign the DOS Segment Manager to disk sde. </para></example></blockquote>
	
	<note><title>NOTE</title>
<para>In the example above, the DOS  Segment
		Manager creates two segments on the disk:
		a metadata segment known as sde_mbr, and a
		segment to represent the available space on
		the drive, sde_freespace1. This freespace
		segment (sde_freespace1) can be divided into
		other segments because it represents space on
		the drive that is not in use. </para></note>


<sect2 id="assignseggui"><title>Using the EVMS GUI</title>

<para>To assign the DOS Segment Manager to sde, you will first need to remove the volume, <filename>/dev/evms/sde</filename>:</para>

<orderedlist>
<listitem><para>Select <menuchoice><guimenu>Actions</guimenu>
<guimenuitem>Delete</guimenuitem>
<guimenuitem>Volume</guimenuitem></menuchoice>.</para></listitem>
<listitem><para>Select <filename>/dev/evms/sde</filename>.</para></listitem>
<listitem><para>Click <guibutton>Delete</guibutton>.</para></listitem>

</orderedlist>

<para>Once the volume is removed, assign the DOS Segment Manager:</para>

<orderedlist>
<listitem><para>Select <menuchoice><guimenu>Actions</guimenu>
<guimenuitem>Add</guimenuitem>
<guimenuitem>Segment Manager to Storage Object</guimenuitem></menuchoice>.</para></listitem>
<listitem><para>Select <guilabel>DOS Segment Manager</guilabel>.</para></listitem>
<listitem><para>Click <guibutton>Next</guibutton>.</para></listitem>
<listitem><para>Select <guilabel>sde</guilabel></para></listitem>

<listitem><para>Click <guibutton>Add</guibutton></para></listitem>
</orderedlist>
</sect2>

<sect2 id="assignsegncur"><title>Using Ncurses</title>
<para>To assign the DOS Segment Manager to sde, you will first need to remove the volume, <filename>/dev/evms/sde</filename>.</para>
<orderedlist><listitem><para>Press <keycap>2</keycap> to view volumes.</para></listitem>
<listitem><para>Highlight <filename>/dev/evms/sde</filename> by using the <keycap>up</keycap>
and <keycap>down</keycap> arrow keys. Press the <keycap>Enter</keycap> key.</para></listitem>
<listitem><para>Highlight <guilabel>Delete Volume</guilabel>. Press the <keycap>Enter</keycap> key.</para></listitem>
<listitem><para>Highlight <guilabel>Delete</guilabel>. Press the <keycap>Enter</keycap> key.</para></listitem>

</orderedlist>

<para>Once the volume is removed, assign the DOS Segment Manager:</para>
<orderedlist>
<listitem><para>Press <keycap>4 </keycap> to switch views.</para></listitem>
<listitem><para>Highlight <guilabel>Logical Disk</guilabel>. Press the <keycap>Enter</keycap> key.</para></listitem>
<listitem><para>Press the <keycap>Enter</keycap> key to see the context sensitive menu. </para></listitem>
<listitem><para>Highlight <guilabel>Assign Segment Manager to Disk</guilabel>. 
Press the <keycap>Enter</keycap> key. </para></listitem>
<listitem><para>Highlight <guilabel>DOS Segment Manager</guilabel>. Press the <keycap>Enter</keycap> key.</para></listitem>
<listitem><para>Highlight <guilabel>sde</guilabel>. Press the <keycap>spacebar</keycap> 
to select then press the  <keycap>Enter</keycap> key to continue.</para></listitem>
<listitem><para>Press the <keycap>Enter</keycap> key to select the default settings. </para></listitem>
</orderedlist>
	</sect2>


<sect2 id="assignsegcli"><title>Using the CLI</title>

<para>To assign the DOS Segment Manager to sde, first tell EVMS that this disk is not a 
volume and is available for use:</para>
		
		<programlisting>Delete:/dev/evms/sde</programlisting>
	

<para>Next, assign the DOS Segment Manager to sde by typing the following:</para>

	<programlisting>Assign:DosSegMgr={},sde</programlisting>


		  
</sect2>	

	

 </sect1>



</chapter>















