This is a utility to convert text files in a specific format into valid
DocBook. Just pass it the input filename on the commmand line and you'll
get a .sgml file out. It won't be a complete valid document, as it will
have no header information or dtd specification. It's just a DocBook
fragment, not a complete document.

The following constructs are currently supported. If you need support for
an addition construct, write discuss@linuxdoc.org if you're subscribed,
or feedback@linuxdoc.org if you're not.

Or just add it in the cvs. :-)

=Title=			<sect1><title>Title</title>
			<sect1>

=Title|id=		<sect1 id='id'><title>Title</title>
			<sect1>

(works for other sect levels as well)

==Title==		<sect2><title>Title</title>
			</sect2>

===Title===		<sect3><title>Title</title>
			</sect3>

Foo			<para>Foo</para>

#Foo			<orderedlist>
#Bar			<listitem><para>Foo</para></listitem>
#Baz			<listitem><para>Bar</para></listitem>
			<listitem><para>Baz</para></listitem>
			</orderedlist>

*Foo			<simplelist>
*Bar			<listitem><para>Foo</para></listitem>
*Baz			<listitem><para>Bar</para></listitem>
			<listitem><para>Baz</para></listitem>
			</simplelist>

[[http://foo.org]]	<ulink url='http://foo.org'>
			  <citetitle>http://foo.org</citetitle>
			</ulink>

[[http://foo.org Foo]]	<ulink url='http://foo.org'>
			  <citetitle>Foo</citetitle>
			</ulink>

[Foo]			<filename>Foo</filename>

'''Foo'''		<emphasis>Foo</emphasis>

A few DocBook structures do not have <para> tags wrapped around them. They
are <para> itself (duh!), <sect?> and <programlisting>. If you insert anything
using these tags, no <para> tags will be wrapped around it or inserted into it.
So if you want fine control over your <para> tags, insert them yourself.
